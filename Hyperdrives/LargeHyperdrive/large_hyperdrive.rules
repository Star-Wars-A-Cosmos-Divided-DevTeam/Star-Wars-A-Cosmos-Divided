Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	//IDs
	ID = SW.HyperdriveLarge
	OtherIDs = ["HyperdriveLarge"]

	//StringKeys
	NameKey = "Parts/LargeHyperdrive"
	IconNameKey = "Parts/LargeHyperdrive"
	DescriptionKey = "Parts/LargeHyperdriveDesc"

	//Groups&Categories
	EditorGroups = ["Flight", "SWTechIII"]
    TypeCategories = [ftl, uses_power, SW_Hyperdrive_Large, SW_Hyperdrives]
	AffectsValidityOfCategories = [SW_Hyperdrive_Large, SW_Hyperdrives]
	RequiresCategories = [SW_WarRoom]

	//Resoures&Size&Health
	Resources
	[
		[steel, 200] //V: 4x4 costs 156
		[coil2, 60] //V: 4x4 costs 67
		[processor, 6] //V: 4x4 costs 4
	]
	Size = [3, 3]
	MaxHealth = 15000

	//Selections
	SelectionPriority = 0
	SelectionTypeID = "hyperdrives"
	//SelectionTypeByRotation = true
	IgnoreRotationForMirroredSelection = true

	//PartSpecific
	AutoDoorMaxPathLength = 5

	//ReceivableBuffs&Prohibits
	ReceivableBuffs : ^/0/ReceivableBuffs []
	//ProhibitedBy : ^/0/ProhibitedBy [tall]
	BlockedTravelCells
	[
		[1, 1]
	]
	ForceManhattanPathInPart = true

	//Editor
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}

	//Components&Inheritance
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		//temp fixi remove in 2,3 months started 16.01.2024
		FtlBeaconBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 0
		}
		FtlDriveBatteryStorage : FtlBeaconBatteryStorage
		{
			
		}

		BuffStorageCollector
		{
			Type = GridBuffProvider
			BuffType = SW_Hypernode_Large
			GridDistance = 1000
			OperationalToggle = IsOperational
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 27000 //3*3*3000
			InitToMaxResources = 0
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		CombinedBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [BatteryStorage]
			ViaBuffs
			{
				OutgoingBuffProviders = [BuffStorageCollector]
				ComponentID = BatteryStorage
			}
			AddMode = PrioritizeLeastResources
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = CombinedBatteryStorage
			DefaultPriority = &/PRIORITIES/Ftl_Supply
			OperationalToggle = FtlDrive
			AllowNonOperationalMinPriorityDelivery = false
			OverrideExclusiveCrewAssignment = true
		}
		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = FtlDrive
			ShowProgressFor = CombinedBatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}

		HyperiumStorage
		{
			Type = ResourceStorage
			ResourceType = hyperium
			MaxResources = 120 //+20 per Node
			InitToMaxResources = 0
			UITileRect = [.5 + 7/64, .5 + 7/64, 2 - 14/64, 2 - 14/64]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/ElementDeliver
			DropResourcesWhenDestroyed = true
		}

		CombinedHyperiumStorage
		{
			Type = MultiResourceStorage
			ResourceType = hyperium
			ResourceStorages = [HyperiumStorage]
			ViaBuffs
			{
				OutgoingBuffProviders = [BuffStorageCollector]
				ComponentID = HyperiumStorage
			}
			AddMode = PrioritizeLeastResources
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		HyperiumConsumer
		{
			Type = ResourceConsumer
			ResourceType = hyperium
			Storage = CombinedHyperiumStorage
			DefaultPriority = &/PRIORITIES/Utility_Supply
			OperationalToggle = PowerToggle
			ConsumptionToggleButtonOffset = [0, -.4]
		}
		HyperiumStorageBar
		{
			Type = ProgressBar
			ShowProgressFor = CombinedHyperiumStorage
			LowColor = [0, 64, 64]
			HighColor = [0, 250, 250]
			FullColor = [0, 255, 255]
		}

		FtlDrive
		{
			Type = FtlDrive
			OperationalToggle = PowerToggle
			PowerStorage = BatteryStorage
			FuelStorage = HyperiumStorage
			SpinDownDuration = 5
			JumpEfficiency = 100% //SW Efficiency Buff
			JumpEfficiencyDistanceRange = [32, 92] //V:4x4 is 20, 120

			JumpOutMediaEffects : &<./Data/ships/terran/hyperdrive_small/hyperdrive_small.rules>/Part/Components/FtlDrive/JumpOutMediaEffects
			[
				&/SW_SOUNDS/Hyperdrive
			]
			JumpOutGateMediaEffects : &<./Data/ships/terran/hyperdrive_small/hyperdrive_small.rules>/Part/Components/FtlDrive/JumpOutGateMediaEffects
			[
				&/SW_SOUNDS/Hyperdrive
			]
			JumpInMediaEffects = &<./Data/ships/terran/hyperdrive_small/hyperdrive_small.rules>/Part/Components/FtlDrive/JumpInMediaEffects
			JumpInGateMediaEffects = &<./Data/ships/terran/hyperdrive_small/hyperdrive_small.rules>/Part/Components/FtlDrive/JumpInGateMediaEffects
		}

		Graphics
		{
			Type = Graphics
			Location = [1.5, 1.5]
			OperationalToggle = PowerToggle
			AnimationSpeedFactor = FtlDrive
			AnimationSpeedFactorRenormalize = [0.1, 1.0]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [3, 3]
					}
					{
						File = "floor_33.png"
						Size = [3, 3]
					}
					{
						File = "floor_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.035
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [3, 3]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"lights0.png"
							"lights1.png"
							"lights2.png"
							"lights3.png"
							"lights4.png"
							"lights5.png"
							"lights6.png"
							"lights7.png"
							"lights8.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.035
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "../walls_03.png"
						Size = [3, 3]
					}
					{
						File = "../walls_03_33.png"
						Size = [3, 3]
					}
					{
						File = "../walls_03_66.png"
						Size = [3, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "../roof.png"
						NormalsFile = "../roof_normals.png"
						Size = [3, 3]
					}
					{
						File = "../roof_33.png"
						NormalsFile = "../roof_normals_33.png"
						Size = [3, 3]
					}
					{
						File = "../roof_66.png"
						NormalsFile = "../roof_normals_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [2.5, 2.5]
						Z = 1.5 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [0*2.0,255*2.0, 255*2.0]
					}
				]
			}
		}

		FtlSpin
		{
			Type = ContinuousEffects
			Location = [1.5, 1.5]
			FactorMediaEffectsIntensityWith = FtlDrive
			OperationalToggle = PowerToggle
			MediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./Data/ships/terran/hyperdrive_large/spin.wav"
					Volume = .5
					Speed = 2.5
					MaxConcurrent = 0
					VolumeOverIntensity = 1
					SpeedOverIntensity = [0, 1]
				}
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1.5, 1.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			ResourceLevels
			[
				{
					File = "power1.png"
					Size = [3, 3]
				}
				{
					File = "power2.png"
					Size = [3, 3]
				}
				{
					File = "power3.png"
					Size = [3, 3]
				}
				{
					File = "power4.png"
					Size = [3, 3]
				}
				{
					File = "power5.png"
					Size = [3, 3]
				}
				{
					File = "power6.png"
					Size = [3, 3]
				}
				{
					File = "power7.png"
					Size = [3, 3]
				}
				{
					File = "power8.png"
					Size = [3, 3]
				}
				{
					File = "power9.png"
					Size = [3, 3]
				}
				{
					File = "power10.png"
					Size = [3, 3]
				}
				{
					File = "power11.png"
					Size = [3, 3]
				}
				{
					File = "power12.png"
					Size = [3, 3]
				}
				{
					File = "power13.png"
					Size = [3, 3]
				}
				{
					File = "power14.png"
					Size = [3, 3]
				}
				{
					File = "power15.png"
					Size = [3, 3]
				}
				{
					File = "power16.png"
					Size = [3, 3]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1.5, 1.5]
			Toggle = PowerToggle
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1.5, 1.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1.5, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1.5, 1.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
		}
	}

	//Stats
	Stats
	{
		FtlMaxEfficiencyRange = &~/Part/Components/FtlDrive/JumpEfficiencyDistanceRange/0
		FtlMinEfficiencyRange = &~/Part/Components/FtlDrive/JumpEfficiencyDistanceRange/1
		HyperiumCapacity = &~/Part/Components/HyperiumStorage/MaxResources
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
	}
	StatsNotesKey = "Stats/LargeHyperdrive_Notes"
}