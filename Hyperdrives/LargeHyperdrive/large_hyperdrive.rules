Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	ID = SW.HyperdriveLarge
	OtherIDs = ["HyperdriveLarge"]

	NameKey = "Parts/LargeHyperdrive"
	IconNameKey = "Parts/LargeHyperdrive"
	DescriptionKey = "Parts/LargeHyperdriveDesc"

	EditorGroups = ["Flight", "SWTechIII"]
    TypeCategories = [ftl, uses_power, SW_Hyperdrive_Large, SW_Hyperdrive]
	RequiresCategories = [WarRoom]

	Resources
	[
		[steel, 200]
		[coil2, 60]
		[diamond, 6]
	]

	Size = [3, 3]
	MaxHealth = 9000

	SelectionPriority = 1
	SelectionTypeID = "hyperdrives"
	AutoDoorMaxPathLength = 5
	ReceivableBuffs : ^/0/ReceivableBuffs []
	//ProhibitedBy : ^/0/ProhibitedBy [tall]

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}

	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, FtlBeaconBatteryStorage, CommandToggle]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 9
		}

		CommandToggle
		{
			Type = CommandToggle
		}

		FtlBeacon
		{
			Type = FtlBeacon
			OperationalToggle = IsOperational
		}

		FtlBeaconBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 12000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		FtlBeaconBatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = FtlBeaconBatteryStorage
			DefaultPriority = &/PRIORITIES/Utility_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
		}
		FtlBeaconPowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = IsOperational
			FromStorage = FtlBeaconBatteryStorage
			FromQuantity = 200
			MinFromQuantityForConversion = 1
			Interval = 1
		}
		Pulse
		{
			Type = ContinuousEffects
			Location = [1.5, 1.5]
			OperationalToggle = IsOperational
			FactorMediaEffectsIntensityWith = RoofOpacity
			MediaEffects
			[
				&<hyperdrive_beacon_pulse.rules>
				//&<hyperdrive_beacon_pulse_simple.rules>
			]
		}
		RoofOpacity
		{
			Type = RoofOpacity // DO NOT EVER USE COMPONENTS OF THIS TYPE FOR GAMEPLAY LOGIC!!! IT WILL CAUSE DESYNCS!!! USE FOR RENDERING ONLY!!!
		}

		FtlDriveBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 18000 //3*3*2000
			InitToMaxResources = 0
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		FtlBatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = FtlDriveBatteryStorage
			DefaultPriority = &/PRIORITIES/Ftl_Supply
			OperationalToggle = FtlDrive
			AllowNonOperationalMinPriorityDelivery = false
			OverrideExclusiveCrewAssignment = true
		}
		FtlDriveBatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = FtlDrive
			ShowProgressFor = FtlDriveBatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}

		HyperiumStorage
		{
			Type = ResourceStorage
			ResourceType = hyperium
			MaxResources = 200
			UITileRect = [.5 + 7/64, .5 + 7/64, 2 - 14/64, 2 - 14/64]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/ElementDeliver
			DropResourcesWhenDestroyed = true
		}
		HyperiumConsumer
		{
			Type = ResourceConsumer
			ResourceType = hyperium
			Storage = HyperiumStorage
			DefaultPriority = &/PRIORITIES/Utility_Supply
			OperationalToggle = PowerToggle
			ConsumptionToggleButtonOffset = [0, -.4]
		}
		
		FtlDrive
		{
			Type = FtlDrive
			OperationalToggle = PowerToggle
			PowerStorage = FtlDriveBatteryStorage
			FuelStorage = HyperiumStorage
			SpinDownDuration = 5
			JumpEfficiency = 100%
			JumpEfficiencyDistanceRange = [40, 80]

			JumpOutMediaEffects : &<./Data/ships/terran/hyperdrive_small/hyperdrive_small.rules>/Part/Components/FtlDrive/JumpOutMediaEffects
			[
				&/SW_SOUNDS/Hyperdrive
			]
			JumpOutGateMediaEffects : &<./Data/ships/terran/hyperdrive_small/hyperdrive_small.rules>/Part/Components/FtlDrive/JumpOutGateMediaEffects
			[
				&/SW_SOUNDS/Hyperdrive
			]
			JumpInMediaEffects = &<./Data/ships/terran/hyperdrive_small/hyperdrive_small.rules>/Part/Components/FtlDrive/JumpInMediaEffects
			JumpInGateMediaEffects = &<./Data/ships/terran/hyperdrive_small/hyperdrive_small.rules>/Part/Components/FtlDrive/JumpInGateMediaEffects
		}
		//used in base Hyperdrive for Doodad Control
/*
		BatteryStorageCharging
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [FtlDriveBatteryStorage]
			ToggleOnResources = 1
			ToggleOffResources = 0
		}
		BatteryStorageFull
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [FtlDriveBatteryStorage]
			ToggleOnResources = 16000
			ToggleOffResource = 15999
		}
*/
		Graphics
		{
			Type = Graphics
			Location = [1.5, 1.5]
			OperationalToggle = PowerToggle
			AnimationSpeedFactor = FtlDrive
			AnimationSpeedFactorRenormalize = [0.1, 1.0]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [3, 3]
					}
					{
						File = "floor_33.png"
						Size = [3, 3]
					}
					{
						File = "floor_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
							"doodads_on1.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.035
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [3, 3]
					}
				]
			}

			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"lights0.png"
							"lights1.png"
							"lights2.png"
							"lights3.png"
							"lights4.png"
							"lights5.png"
							"lights6.png"
							"lights7.png"
							"lights8.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.035
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "../walls_03.png"
						Size = [3, 3]
					}
					{
						File = "../walls_03_33.png"
						Size = [3, 3]
					}
					{
						File = "../walls_03_66.png"
						Size = [3, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "../roof.png"
						NormalsFile = "../roof_normals.png"
						Size = [3, 3]
					}
					{
						File = "../roof_33.png"
						NormalsFile = "../roof_normals_33.png"
						Size = [3, 3]
					}
					{
						File = "../roof_66.png"
						NormalsFile = "../roof_normals_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [2.5, 2.5]
						Z = 1.5 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [0*2.0,255*2.0, 255*2.0]
					}
				]
			}
		}

		FtlSpin
		{
			Type = ContinuousEffects
			Location = [1.5, 1.5]
			FactorMediaEffectsIntensityWith = FtlDrive
			OperationalToggle = PowerToggle
			MediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./Data/ships/terran/hyperdrive_small/spin.wav"
					Volume = 1
					Speed = 3.5
					MaxConcurrent = 0
					VolumeOverIntensity = 1
					SpeedOverIntensity = [0, 1]
				}
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1.5, 1.5]
			ResourceStorage = FtlDriveBatteryStorage
			Layer = "doodads_low"
			ResourceLevels
			[
				{
					File = "power1.png"
					Size = [3, 3]
				}
				{
					File = "power2.png"
					Size = [3, 3]
				}
				{
					File = "power3.png"
					Size = [3, 3]
				}
				{
					File = "power4.png"
					Size = [3, 3]
				}
				{
					File = "power5.png"
					Size = [3, 3]
				}
				{
					File = "power6.png"
					Size = [3, 3]
				}
				{
					File = "power7.png"
					Size = [3, 3]
				}
				{
					File = "power8.png"
					Size = [3, 3]
				}
				{
					File = "power9.png"
					Size = [3, 3]
				}
				{
					File = "power10.png"
					Size = [3, 3]
				}
				{
					File = "power11.png"
					Size = [3, 3]
				}
				{
					File = "power12.png"
					Size = [3, 3]
				}
				{
					File = "power13.png"
					Size = [3, 3]
				}
				{
					File = "power14.png"
					Size = [3, 3]
				}
				{
					File = "power15.png"
					Size = [3, 3]
				}
				{
					File = "power16.png"
					Size = [3, 3]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1.5, 1.5]
			Toggle = PowerToggle
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1.5, 1.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1.5, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1.5, 1.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
		}
	}

	Stats
	{
		FtlMaxEfficiencyRange = &~/Part/Components/FtlDrive/JumpEfficiencyDistanceRange/0
		FtlMinEfficiencyRange = &~/Part/Components/FtlDrive/JumpEfficiencyDistanceRange/1
		HyperiumCapacity = &~/Part/Components/HyperiumStorage/MaxResources
		PowerCapacity = (&~/Part/Components/FtlDriveBatteryStorage/MaxResources) / 1000
	}

	StatsNotesKey = "Stats/LargeHyperdrive_Notes"
}
