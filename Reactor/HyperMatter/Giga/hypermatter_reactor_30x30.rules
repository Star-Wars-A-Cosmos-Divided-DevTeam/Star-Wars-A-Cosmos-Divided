Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	ID = SW.hypermatter_reactor_30x30
	NameKey = "Parts/HypermatterReactor30x30"
	IconNameKey = "Parts/HypermatterReactor30x30Icon"
	DescriptionKey = "Parts/HypermatterReactor30x30Desc"
	EditorGroups = ["Power", "SWTechIII"]
	Resources
	[
		[steel, 2300]
		[coil, 1300]
		[coil2, 130]
		[tristeel, 230]
		[processor, 111]
	]  //Cost = 9550000
	AIValueFactor = 5
	Size = [30, 30]
	SelectionPriority = 0
	SelectionTypeID = "hypermatter_reactors"
	MaxHealth = 1000000
	AutoDoorMaxPathLength = 5
	TypeCategories = [hypermatter_reactor, reactor, provides_power]
	ReceivableBuffs : ^/0/ReceivableBuffs []
	RequiresCategories = [SW_Bridge,SW_WarRoom]
	CreateUnderlyingWhenDestroyed = false
	IgnoreRotationForMirroredSelection = true

	CrewSpeedFactor = 1
	CrewCongestedSpeedFactor = .5

	ForceManhattenPathInPart = true
	BlockedTravelCells
	[
		//Corners 1
		[0, 0]
		[0, 29]
/*
		//Reactor
		[2, 4]
		[2, 5]
		[2, 6]
		[2, 7]
		[3, 3]
		[3, 4]
		[3, 5]
		[3, 6]
		[3, 7]
		[3, 8]
		[4, 1]
		[4, 2]
		[4, 3]
		[4, 4]
		[4, 5]
		[4, 6]
		[4, 7]
		[4, 8]
		[4, 9]
		[4, 10]
		[5, 1]
		[5, 2]
		[5, 3]
		[5, 4]
		[5, 5]
		[5, 6]
		[5, 7]
		[5, 8]
		[5, 9]
		[5, 10]
		[6, 1]
		[6, 2]
		[6, 3]
		[6, 4]
		[6, 5]
		[6, 6]
		[6, 7]
		[6, 8]
		[6, 9]
		[6, 10]
		[7, 1]
		[7, 2]
		[7, 3]
		[7, 4]
		[7, 5]
		[7, 6]
		[7, 7]
		[7, 8]
		[7, 9]
		[7, 10]
		[8, 3]
		[8, 4]
		[8, 5]
		[8, 6]
		[8, 7]
		[8, 8]
		[9, 4]
		[9, 5]
		[9, 6]
		[9, 7]
*/
		//Corners 2
		[29, 0]
		[29, 29]
	]
	AllowedDoorLocations
	[
		//left
		[-1, 1]
		[-1, 2]
		[-1, 3]
		[-1, 4]
		[-1, 5]
		[-1, 6]
		[-1, 7]
		[-1, 8]
		[-1, 9]
		[-1, 10]
		[-1, 11]
		[-1, 12]
		[-1, 13]
		[-1, 14]
		[-1, 15]
		[-1, 16]
		[-1, 17]
		[-1, 18]
		[-1, 19]
		[-1, 20]
		[-1, 21]
		[-1, 22]
		[-1, 23]
		[-1, 24]
		[-1, 25]
		[-1, 26]
		[-1, 27]
		[-1, 28]
		[-1, 29]
		//bottom
		[1, 30]
		[2, 30]
		[3, 30]
		[4, 30]
		[5, 30]
		[6, 30]
		[7, 30]
		[8, 30]
		[9, 30]
		[10, 30]
		[11, 30]
		[12, 30]
		[13, 30]
		[14, 30]
		[15, 30]
		[16, 30]
		[17, 30]
		[18, 30]
		[19, 30]
		[20, 30]
		[21, 30]
		[22, 30]
		[23, 30]
		[24, 30]
		[25, 30]
		[26, 30]
		[27, 30]
		[28, 30]
		[29, 30]
		//right
		[30, 1]
		[30, 2]
		[30, 3]
		[30, 4]
		[30, 5]
		[30, 6]
		[30, 7]
		[30, 8]
		[30, 9]
		[30, 10]
		[30, 11]
		[30, 12]
		[30, 13]
		[30, 14]
		[30, 15]
		[30, 16]
		[30, 17]
		[30, 18]
		[30, 19]
		[30, 20]
		[30, 21]
		[30, 22]
		[30, 23]
		[30, 24]
		[30, 25]
		[30, 26]
		[30, 27]
		[30, 28]
		[30, 29]
		//top
		[1, -1]
		[2, -1]
		[3, -1]
		[4, -1]
		[5, -1]
		[6, -1]
		[7, -1]
		[8, -1]
		[9, -1]
		[10, -1]
		[11, -1]
		[12, -1]
		[13, -1]
		[14, -1]
		[15, -1]
		[16, -1]
		[17, -1]
		[18, -1]
		[19, -1]
		[20, -1]
		[21, -1]
		[22, -1]
		[23, -1]
		[24, -1]
		[25, -1]
		[26, -1]
		[27, -1]
		[28, -1]
		[29, -1]
	]

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [92, 92]
	}
	Components : ^/0/Components, <graphics_30x30.rules>
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [True, PowerToggle]
			Mode = All
		}
		True
		{
			Type = StaticToggle
			ToggleOn = "true"
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 696000
			StartingResources = 0
			SuppliesResources = true
			MinResourcesPickUp = 2000
			MaxResourcesPickUp = 5000
			InitPickUp = 2000
			PickUpRate = 100000
			//ExpectedResourceGenerationRate = (&../BatteryProducer/ToQuantity) / (&../BatteryProducer/Interval)
			ToggleOnResources = 5000
			ToggleOffResources = (&ToggleOnResources)-1
		}
		BatteryProducer
		{
			Type = ResourceConverter
			OperationalToggle = IsOperationalAndHypermatterReactorToggle
			From
			[
				{
					Storage = HypermatterStorage
					Quantity = 10
				}
			]
			ToStorage = BatteryStorage
			ToQuantity = 2000
			Interval = 1/30
			//CheckResourceLimits = true
		}
		/*
		BatteryProducer2
		{
			Type = ResourceConverter
			OperationalToggle = IsOperationalAndHypermatterReactorToggle
			InvertOperationalToggle = true
			ToStorage = BatteryStorage
			ToQuantity = 1000
			Interval = 1
		}
		*/
		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = True
			ShowProgressFor = BatteryStorage
			LowColor = [64, 64, 0]
			HighColor = [250, 250, 0]
			FullColor = [255, 255, 0]
		}

		HypermatterStorage
		{
			Type = ResourceStorage
			ResourceType = SW.hypermatter
			MaxResources = 45000
			StartingResources = 0
			//SuppliesResources = true
			MinResourcesPickUp = 1000
			MaxResourcesPickUp = 3000
			ExpectedResourceGenerationRate = (&../HypermatterProducer/ToQuantity) / (&../HypermatterProducer/Interval)
			ToggleOnResources = 1000
			ToggleOffResources = (&ToggleOnResources) -1
		}
		HypermatterStorageBar
		{
			Type = ProgressBar
			OperationalToggle = True
			ShowProgressFor = HypermatterStorage
			LowColor = [0, 32, 64]
			HighColor = [0, 250, 250]
			FullColor = [0, 255, 255]
		}
		HypermatterProducer
		{
			Type = ResourceConverter
			OperationalToggle = IsOperational
			ToStorage = HypermatterStorage
			ToQuantity = 10
			Interval = 1/10
		}

		IsOperationalAndHypermatterReactorToggle
		{
			Type = MultiToggle
			Toggles = [IsOperational, HypermatterReactorToggle]
			Mode = All
		}

		HypermatterReactorToggle
		{
			Type = TriggeredToggle
			OnTrigger = BatteryStorageTurnsReactorOn
			OffTrigger = BatteryStorageTurnsReactorOff
		}
		BatteryStorageTurnsReactorOn
		{
			Type = ThresholdTrigger
			AmountFrom = BatteryStorage
			MaxAmount = 10%
		}
		BatteryStorageTurnsReactorOff
		{
			Type = ThresholdTrigger
			AmountFrom = BatteryStorage
			MinAmount = 100%
		}

		Graphics
		{
			Type = Graphics
			Location = [15, 15]
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [45, 45]
						Z = 2.5 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [240, 0, 240]
					}
				]
			}
		}
		ReactorHum
		{
			Type = ContinuousEffects
			Location = [15, 15]
			FactorMediaEffectsIntensityWith = HypermatterStorage
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "./Data/ships/terran/reactor_small/operating.wav"
					Volume = .5
					Speed = .5
					MaxConcurrent = 1
					DynamicVolume : ^/0/DynamicVolume
					{
						ExteriorVolume = .5
					}
				}
			]
		}
/*
		BatterySprites
		{
			Type = ResourceSprites
			Location = [2, 2]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroAmmoSprite = true
			AmmoLevels
			[
				{
					File = "reactor0.png"
					Size = [4, 4]
				}
				{
					File = "reactor1.png"
					Size = [4, 4]
				}
				{
					File = "reactor2.png"
					Size = [4, 4]
				}
				{
					File = "reactor3.png"
					Size = [4, 4]
				}
				{
					File = "reactor4.png"
					Size = [4, 4]
				}
				{
					File = "reactor5.png"
					Size = [4, 4]
				}
				{
					File = "reactor6.png"
					Size = [4, 4]
				}
				{
					File = "reactor7.png"
					Size = [4, 4]
				}
				{
					File = "reactor8.png"
					Size = [4, 4]
				}
			]
		}
*/
		DestroyedEffects
		{
			Type = DeathEffects
			Location = [15, 15]

			MediaEffects
			[
				&<./Data/ships/terran/reactor_large/particles/reactor_explode_large.rules>
				&<./Data/ships/terran/reactor_large/particles/reactor_explode_flash_large.rules>
				&<./Data/ships/terran/reactor_large/particles/reactor_shockwave_large.rules>
				&<./Data/common_effects/particles/explosions/huge_part_explode_debris.rules>
				&<./Data/common_effects/particles/explosions/huge_part_explode_smoke.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./Data/ships/terran/reactor_small/destroyed.wav"
					Volume = 2
					Speed = .5
					SpeedVariation = .25 * (&Speed)
				}

				: /BASE_SHAKE
				{
					ShakeAmount = .75
					Duration = 4
				}
			]
			
			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 54000000
					Radius = 462
					Delay = .05
					ExpandDuration = 10.5
					ExpandStartRadius = 30
					ExpandLoss = 100%
					FireChancePerNDamage = 50%
					ImpulsePerNDamage = 10
					NDamage = 1000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 119880000
					Radius = 309
					Delay = .05
					ExpandDuration = 6
					ExpandStartRadius = 30
					ExpandLoss = 100%
					ImpulsePerNDamage = 5
					NDamage = 1000
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
					}
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [15, 15]
			Layer = "indicators"
			Indicators
			[
				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [3, 3]
					}
				}
				// Out of power.
				{
					Toggle = HypermatterStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [3, 3]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "./Data/ships/terran/corridor/blueprints.png"
			Size = [30, 30]
		}
		BlueprintsCore
		{
			Type = BlueprintSprite
			File = "blueprints_core.png"
			Size = [12, 30]
			Offset = [-6, 0]
		}
		BlueprintsCore2
		{
			Type = BlueprintSprite
			File = "blueprints_core.png"
			Size = [12, 30]
			MirrorU = true
			Offset = [6, 0]
		}
	}

	Stats
	{
		PowerGeneration = (&~/Part/Components/BatteryProducer/ToQuantity) / (&~/Part/Components/BatteryProducer/Interval) / 1000
		BatterySize = (&~/Part/Components/BatteryStorage/MaxResourcesPickUp) / 1000
		BatteryFillTime = 1000 / (&~/Part/Components/BatteryStorage/PickUpRate)
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
	
		HypermatterGeneration = (&~/Part/Components/HypermatterProducer/ToQuantity) / (&~/Part/Components/HypermatterProducer/Interval) / 1000
		HypermatterSize = (&~/Part/Components/HypermatterStorage/MaxResourcesPickUp) / 1000
		HypermatterFillTime = 0
		HypermatterCapacity = (&~/Part/Components/HypermatterStorage/MaxResources) / 1000
	}
}
