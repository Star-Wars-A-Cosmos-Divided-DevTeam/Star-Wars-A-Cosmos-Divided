Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/IonThruster01_1x1"
	IconNameKey = "Parts/IonThruster01_1x1_Icon"
	ID = SW.XWingThruster
	OtherIDs = ["XWingThruster"]
	EditorGroups = ["Flight", "TechI"]
	DescriptionKey = "Parts/IonThrusterDesc"
	Resources
	[
		[steel, 50]//125%*40 of vanilla
		[coil2, 14]//140%*10 of vanilla
	]
	TypeCategories = [thruster, ion_thruster, uses_power, XWingThruster]
	Size = [5, 1]
	AllowedContiguity = [Top]
	IsWalled = true
	IsSelfDestructible = false
	InitialPenetrationResistance = 8
	ContinuingPenetrationResistance = &InitialPenetrationResistance
	SelectionPriority = 1
	SelectionTypeByRotation = true
	//SelectionTypeRotations = [0, 1, 3]
	SelectionTypeID = "thrusters"
	MaxHealth = 7200 //80%*9000 of vanilla
	ThrusterForce = 12800/2 //160%*8000 of vanilla
	ThrustIncreaseTime = 4.8 //custom
	ThrustRecoveryTime = 2.1 //custom
	FuelUsage = 256/2 //160%*40%*400 of vanilla

	ExternalWallsByCell
	[
		{
			Key = [0, 0]
			Value = [TopLeft, Top]
		}
		{
			Key = [1, 0]
			Value = [Top]
		}
		{
			Key = [2, 0]
			Value = [Top, BottomLeft, Bottom, BottomRight]
		}
		{
			Key = [3, 0]
			Value = [Top]
		}
		{
			Key = [4, 0]
			Value = [Top, TopRight]
		}
	]

	InternalWallsByCell
	[
		{
			Key = [0, 0]
			Value = [Left, BottomLeft, Bottom, BottomRight]
		}
		{
			Key = [1, 0]
			Value = [BottomLeft, Bottom, BottomRight]
		}
		{
			Key = [2, 0]
			Value = [None]
		}
		{
			Key = [3, 0]
			Value = [BottomLeft, Bottom, BottomRight]
		}
		{
			Key = [4, 0]
			Value = [Left, BottomLeft, Bottom, BottomRight, Right]
		}
	]
	VirtualInternalCells
	[
		{ExternalCell=[-1, 0]; InternalCell=[0, -1]}
		{ExternalCell=[5, 0]; InternalCell=[4, -1]}
	]

	ProhibitRects
	[
		[default, [0, 1, 2, 8]]
		[default, [3, 1, 2, 8]]
	]

	ReceivableBuffs : ^/0/ReceivableBuffs [Engine]

	AllowedDoorLocations
	[
		[2, -1]
	]

	GenerateRectCollider = true

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 89.66]
	}
	Components : ^/0/Components
	{
		Collider
		{
			Type = PolygonCollider
			Vertices
			[
				[0, 0]
				[2, 1]
				[3, 1]
				[5, 0]
			]
		}

		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage]
			Mode = All
		}
		
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}
		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 3
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [64, 64, 0]
			HighColor = [250, 250, 0]
			FullColor = [255, 255, 0]
		}

		EngineBuffToggle
		{
			Type = BuffToggle
			BuffType = Engine
		}
		ToggledBatteryConsumer
		{
			Type = ToggledComponents
			Toggle = EngineBuffToggle
			Invert = true
			IncludeInBlueprints = true
			Components
			{
				BatteryConsumer
				{
					Type = ResourceConsumer
					ResourceType = battery
					Storage = BatteryStorage
					DefaultPriority = &/PRIORITIES/Thruster_Supply
					ResupplyThreshold = 1000
					OperationalToggle = PowerToggle
				}
			}
		}

		ThrusterEffectAmountType
		{
			Type = UIToggle
			ToggleID = "SW.thruster_effect_amount_type"
			Default = 0
			AvailableChoices = [0, 1, 2]
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}
		GlowToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectAmountType
			OnMode = 0	//Always Used
		}
		SparksToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectAmountType
			OnMode = 1
		}
		FullsetToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectAmountType
			OnMode = 2
		}

		Graphics
		{
			Type = Graphics
			Location = [2.5, 0.5]
			OperationalToggle = IsOperational

			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "../floor01.png"
						Size = [1, 1]
					}
					{
						File = "../floor01_33.png"
						Size = [1, 1]
					}
					{
						File = "../floor01_66.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
					{
						File = "walls_33.png"
						Size = [1, 1]
					}
					{
						File = "walls_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [5, 1]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [5, 1]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [5, 1]
					}
				]
			}
		}

		GraphicsArmorLeft
		{
			Type = Graphics
			Location = [1, 0.5]
			Floor // This is needed so that armor shows up in ship ghosts.
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "armor/armor.png"
						Size = [2, 1]
					}
					{
						File = "armor/armor_33.png"
						Size = [2, 1]
					}
					{
						File = "armor/armor_66.png"
						Size = [2, 1]
					}
				]
			}
			Walls
			{
				Layer = "external_walls"
				DamageLevels
				[
					{
						File = "armor/armor.png"
						NormalsFile = "armor/external_wall_normals.png"
						Size = [2, 1]
					}
					{
						File = "armor/armor_33.png"
						NormalsFile = "armor/external_wall_normals_33.png"
						Size = [2, 1]
					}
					{
						File = "armor/armor_66.png"
						NormalsFile = "armor/external_wall_normals_66.png"
						Size = [2, 1]
					}
				]
			}
		}

		EngineRoofGraphicsLeft
		{
			Type = Sprite
			ChainedTo = MainThrusterLeftLocationProxy
			Location = [-3-20/64, 18/64]
			Rotation = -90d
			Layer = "SW.roof_engines"
			ResetAnimationTrigger = BurstTrigger
			AtlasSprite
			{
				AnimationFiles
				[
					"engine_l.png"// Loop back to beginning and clamp there.
				]
				NormalsAnimationFiles
				[
					"engine_l_normals.png"
				]
				Size = [2, 7]
				AnimationInterval = 1
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}

		EngineStructureGraphicsLeft
		{
			Type = Sprite
			ChainedTo = MainThrusterLeftLocationProxy
			Location = [-3-20/64, 18/64]
			Rotation = -90d
			Layer = "SW.structure_engines"
			ResetAnimationTrigger = BurstTrigger
			AtlasSprite
			{
				AnimationFiles
				[
					"engine_l.png"// Loop back to beginning and clamp there.
				]
				NormalsAnimationFiles
				[
					"engine_l_normals.png"
				]
				Size = [2, 7]
				AnimationInterval = 1
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}

		EngineLightsGraphicsLeft
		{
			Type = Graphics
			ChainedTo = MainThrusterLeftLocationProxy
			Location = [-0.049, 0]
			Rotation = -90d
			OperationalToggle = IsOperational
			
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1.2, 0.6]
					}
				]
			}
		}

		GraphicsArmorRight
		{
			Type = Graphics
			Location = [4, 0.5]
			Floor // This is needed so that armor shows up in ship ghosts.
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "armor/armor.png"
						Size = [2, 1]
						MirrorU = true
					}
					{
						File = "armor/armor_33.png"
						Size = [1, 2]
						MirrorU = true
					}
					{
						File = "armor/armor_66.png"
						Size = [1, 2]
						MirrorU = true
					}
				]
			}
			Walls
			{
				Layer = "external_walls"
				DamageLevels
				[
					{
						File = "armor/armor.png"
						NormalsFile = "armor/external_wall_normals.png"
						Size = [2, 1]
						MirrorU = true
					}
					{
						File = "armor/armor_33.png"
						NormalsFile = "armor/external_wall_normals_33.png"
						Size = [2, 1]
						MirrorU = true
					}
					{
						File = "armor/armor_66.png"
						NormalsFile = "armor/external_wall_normals_66.png"
						Size = [2, 1]
						MirrorU = true
					}
				]
			}
		}

		EngineRoofGraphicsRight
		{
			Type = Sprite
			ChainedTo = MainThrusterRightLocationProxy
			Location = [-3-20/64, -18/64]
			Rotation = -90d
			Layer = "SW.roof_engines"
			ResetAnimationTrigger = BurstTrigger
			AtlasSprite
			{
				AnimationFiles
				[
					"engine_l.png"// Loop back to beginning and clamp there.
				]
				NormalsAnimationFiles
				[
					"engine_l_normals.png"
				]
				MirrorU = true
				Size = [2, 7]
				AnimationInterval = 1
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}

		EngineStructureGraphicsRight
		{
			Type = Sprite
			ChainedTo = MainThrusterRightLocationProxy
			Location = [-3-20/64, -18/64]
			Rotation = -90d
			Layer = "SW.structure_engines"
			ResetAnimationTrigger = BurstTrigger
			AtlasSprite
			{
				AnimationFiles
				[
					"engine_l.png"// Loop back to beginning and clamp there.
				]
				NormalsAnimationFiles
				[
					"engine_l_normals.png"
				]
				MirrorU = true
				Size = [2, 7]
				AnimationInterval = 1
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}

		EngineLightsGraphicsRight
		{
			Type = Graphics
			ChainedTo = MainThrusterRightLocationProxy
			Location = [-0.049, 0]
			Rotation = -90d
			OperationalToggle = IsOperational
			
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						MirrorU = true
						Size = [1.2, 0.6]
					}
				]
			}
		}

		MainThrusterLeftLocationProxy
		{
			Type = ChainableProxy
			ComponentID = MainThrusterLeft
		}

		MainThrusterRightLocationProxy
		{
			Type = ChainableProxy
			ComponentID = MainThrusterRight
		}

		ThrusterLeftEffectsValueProxy
		{
			Type = ValueProxy
			ComponentID = ThrusterLeftEffectsValue
		}

		ThrusterRightEffectsValueProxy
		{
			Type = ValueProxy
			ComponentID = ThrusterRightEffectsValue
		}

		ThrusterEffectsValue
		{
			Type = MultiValue
			Values = [MainThrusterLeft, MainThrusterRight, ReverseThrusterLeft, ReverseThrusterRight]
			Mode = Max
		}

		ThrusterLeftEffectsValue
		{
			Type = MultiValue
			Values = [MainThrusterLeft, ReverseThrusterLeft]
			Mode = Max
		}

		ThrusterRightEffectsValue
		{
			Type = MultiValue
			Values = [MainThrusterRight, ReverseThrusterRight]
			Mode = Max
		}

		MainThrusterBase : &~/MainThrusterBase
		{
			MinActivation = 0
			MaxActivation = 0
		}

		MainThrusterLeft : &~/MainThrusterBase
		{
			Location = [2.5-1-30/64, 3-8/64]
		}

		MainThrusterRight : &~/MainThrusterBase
		{
			Location = [2.5+1+30/64, 3-8/64]
		}

		LateralThruster : MainThrusterBase
		{
			Rotation = 0d
			MinActivation = -0.05
			MaxActivation = 0.05
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			FuelUsagePerSecond = (&../../FuelUsage)/5
			AllowAutoFire = false
		}

		ReverseThrusterLeft : MainThrusterLeft
		{
			Rotation = -90d
			MinActivation = 0
			MaxActivation = { BaseValue=0.42; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = 0
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelUsagePerSecond = (&../../FuelUsage)*0.81//Penalty for reverse Thrust
			AllowAutoFire = false
		}

		ReverseThrusterRight : MainThrusterRight
		{
			Rotation = -90d
			MinActivation = 0
			MaxActivation = { BaseValue=0.42; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = 0
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelUsagePerSecond = (&../../FuelUsage)*0.81//Penalty for reverse Thrust
			AllowAutoFire = false
		}

		ThrustEffectsSound
		{
			Type = ContinuousEffects
			ChainedTo = MainThrusterBase
			FactorMediaEffectsIntensityWith = ThrusterEffectsValue
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterRumble
				{
					Volume = .075
					Speed = 2
					MaxConcurrentVolume = .15
				}
			]
		}
		
		BurstTrigger
		{
			Type = ThresholdTrigger
			AmountFrom = ThrusterEffectsValue
			MinAmount = 0.5
		}

		BurstEffects
		{
			Type = TriggeredEffects
			ChainedTo = MainThrusterBase
			Trigger = BurstTrigger
			FactorMediaEffectsIntensityWith = ThrusterEffectsValue
			AnchorMediaEffects = true
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterBurst
				{
					Volume = 0.125
					Speed = 2
					MaxConcurrentVolume = 0.25
				}
			]
		}

		ThrustLEffectsGlowMagenta
		{
			Type = ContinuousEffects
			ChainedTo = MainThrusterLeftLocationProxy
			FactorMediaEffectsIntensityWith = ThrusterLeftEffectsValue
			MediaEffects
			[
				&/COMMON_PARTICLES/IonThruster/Glow/Med/Magenta
			]
		}

		ThrustREffectsGlowMagenta
		{
			Type = ContinuousEffects
			ChainedTo = MainThrusterRightLocationProxy
			FactorMediaEffectsIntensityWith = ThrusterRightEffectsValue
			MediaEffects
			[
				&/COMMON_PARTICLES/IonThruster/Glow/Med/Magenta
			]
		}

		SparksComponentsMagenta
		{
			Type = ToggledComponents
			Toggle = SparksToggle
			IncludeInBlueprints = false
			Components = &<thruster_magenta_sparks.rules>/Components
		}
		
		FullsetComponentsMagenta
		{
			Type = ToggledComponents
			Toggle = FullsetToggle
			IncludeInBlueprints = false
			Components = &<thruster_magenta_fullset.rules>/Components
		}

		ThrusterHum
		{
			Type = ContinuousEffects
			Location = [2.5, 0.5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterHum
				{
					Volume = .05
					Speed = 1.5
					MaxConcurrentVolume = 1
				}
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [2.5, 0.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			HasZeroResourceSprite = true
			ResourceLevels
			[
				{
					File = "../IonThruster01_1x1/batteries 0.png"
					Size = [1, 1]
				}
				{
					File = "../IonThruster01_1x1/batteries 1.png"
					Size = [1, 1]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [2.5, 0.5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [2.5, 0.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [2.5, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type=BlueprintSprite
			File = "blueprints.png"
			Size = [5, 7]
			Offset = [0, -1.0]
		}
	}

	Stats
	{
		ThrusterForce = (&~/Part/ThrusterForce)*2
		ThrusterRampUp = &~/Part/ThrustIncreaseTime
		ThrusterPowerUsage = (&~/Part/FuelUsage) / 1000
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&ThrusterPowerUsage) / 2
		RecCrew = (&RecPower) * 4
	}
}
Size = Med

MainThrusterBase
{
	Type = Thruster
	OperationalToggle = IsOperational
	Location = [2.5, 1]
	Rotation = 90d// Relative to unrotated part.
	Force = &~/Part/ThrusterForce
	MinActivation = 0
	MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
	MinUncommandedActivation = &MinActivation
	MaxUncommandedActivation = &MaxActivation
	ActivationIncreaseTime = &~/Part/ThrustIncreaseTime
	ActivationRecoveryTime = &~/Part/ThrustRecoveryTime
	FuelStorage = BatteryStorage
	FuelUsagePerSecond = &~/Part/FuelUsage
}