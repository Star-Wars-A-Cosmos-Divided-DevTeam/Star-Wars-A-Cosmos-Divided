Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/IonThruster01_3x3"
	IconNameKey = "Parts/IonThruster01_3x3_Icon"
	ID = SW.IonThruster01_3x3_switchable
	OtherIDs = [IonThruster01_3x3,SW.IonThruster01_3x3]
	EditorGroups = ["Flight", "TechII", "TechIII"]
	DescriptionKey = "Parts/IonThruster01_3x3_Desc"
	Resources
	[
		[steel, 100]//125%*80 of vanilla
		[coil, 12]//extra
		[coil2, 24]//120%*20 of vanilla
		//[tristeel, 12]//120%*10 of vanilla
	]
	TypeCategories = [thruster, ion_thruster, uses_power]
	Size = [3, 5]
	PhysicalRect = [0, 0, 3, 3]
	SaveRect = &PhysicalRect
	BoundingRectType = Physical
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "thrusters"
	MaxHealth = 7200 //80%*9000 of vanilla
	ProhibitBelow = 7
	ThrusterForce = 12800 //160%*8000 of vanilla
	ThrustIncreaseTime = 6.4 //custom
	ThrustRecoveryTime = 3.5 //custom
	FuelUsage = 256 //160%*40%*400 of vanilla

	ReceivableBuffs : ^/0/ReceivableBuffs [Engine]

	ForceManhattenPathInPart = true
	BlockedTravelCells
	[
		[1, 1]
		[0, 2]
		[1, 2]
		[2, 2]
	]
	AllowedDoorLocations
	[
		[-1, 1]
		[-1, 0]
		[0, -1]
		[1, -1]
		[2, -1]
		[3, 0]
		[3, 1]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 106.66]
	}
	Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 9
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 8000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [64, 64, 0]
			HighColor = [250, 250, 0]
			FullColor = [255, 255, 0]
		}

		EngineBuffToggle
		{
			Type = BuffToggle
			BuffType = Engine
		}
		ToggledBatteryConsumer
		{
			Type = ToggledComponents
			Toggle = EngineBuffToggle
			Invert = true
			IncludeInBlueprints = true
			Components
			{
				BatteryConsumer
				{
					Type = ResourceConsumer
					ResourceType = battery
					Storage = BatteryStorage
					DefaultPriority = &/PRIORITIES/Thruster_Supply
					ResupplyThreshold = 1000
					OperationalToggle = PowerToggle
					ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
				}
			}
		}

		ThrusterEffectColorType
		{
			Type = UIToggle
			ToggleID = "SW.thruster_effect_color_type"
			Default = 1
			AvailableChoices = [0, 1, 2, 3]
			RequiresCommand = false
		}

		RedThrusterToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectColorType
			OnMode = 0
		}
		RedThrusterComponents
		{
			Type = ToggledComponents
			Toggle = RedThrusterToggle
			IncludeInBlueprints = false
			Components = &<thruster_red.rules>/Components
		}

		BlueThrusterToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectColorType
			OnMode = 1
		}
		BlueThrusterComponents
		{
			Type = ToggledComponents
			Toggle = BlueThrusterToggle
			IncludeInBlueprints = false
			Components = &<thruster_blue.rules>/Components
		}

		YellowThrusterToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectColorType
			OnMode = 2
		}
		YellowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = YellowThrusterToggle
			IncludeInBlueprints = false
			Components = &<thruster_yellow.rules>/Components
		}
		
		PurpleThrusterToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectColorType
			OnMode = 3
		}
		PurpleThrusterComponents
		{
			Type = ToggledComponents
			Toggle = PurpleThrusterToggle
			IncludeInBlueprints = false
			Components = &<thruster_purple.rules>/Components
		}

		ThrusterEffectAmountType
		{
			Type = UIToggle
			ToggleID = "SW.thruster_effect_amount_type"
			Default = 0
			AvailableChoices = [0, 1, 2]
			RequiresCommand = false
		}
		GlowToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectAmountType
			OnMode = 0
		}
		SparksToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectAmountType
			OnMode = 1
		}
		FullsetToggle
		{
			Type = ModeToggle
			Mode = ThrusterEffectAmountType
			OnMode = 2
		}
		
		GlowProxy
		{
			Type = ToggleProxy
			ComponentID = GlowToggle
		}
		SparksProxy
		{
			Type = ToggleProxy
			ComponentID = SparksToggle
		}
		FullsetProxy
		{
			Type = ToggleProxy
			ComponentID = FullsetToggle
		}

		MainThrusterLocationProxy
		{
			Type = ChainableProxy
			ComponentID = MainThruster
		}

		MainThrusterValueProxy
		{
			Type = ValueProxy
			ComponentID = MainThruster
		}
		
		ReverseThrusterLocationProxy
		{
			Type = ChainableProxy
			ComponentID = ReverseThruster
		}

		ReverseThrusterValueProxy
		{
			Type = ValueProxy
			ComponentID = ReverseThruster
		}

		FloorGrid
		{
			Type = SpriteGrid
			Location = [0.5, 0.5]
			GridSize = [3, 3]
			RandomDamageLevels
			[
				[
					{
						File = "../floor01.png"
						Size = [1, 1]
					}
					{
						File = "../floor01_33.png"
						Size = [1, 1]
					}
					{
						File = "../floor01_66.png"
						Size = [1, 1]
					}
				]
			]
			RandomUVRotation = true
			Layer = "floors"
		}

		EngineFloorLGraphics
		{
			Type = Sprite
			Location = [.5, 3.5]
			Layer = "structure"
			AtlasSprite
			{
				File = "engine_floor_L.png"
				NormalsFile = "engine_floor_L.png"
				Size = [1, 1]
			}
		}

		EngineFloorMGraphics
		{
			Type = Sprite
			Location = [1.5, 3.5]
			Layer = "structure"
			AtlasSprite
			{
				File = "engine_floor_M.png"
				NormalsFile = "engine_floor_M.png"
				Size = [1, 1]
			}
		}

		EngineFloorRGraphics
		{
			Type = Sprite
			Location = [2.5, 3.5]
			Layer = "structure"
			AtlasSprite
			{
				File = "engine_floor_R.png"
				NormalsFile = "engine_floor_R.png"
				Size = [1, 1]
			}
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			
			AnimationSpeedFactor = MainThruster
			AnimationSpeedFactorRenormalize = [0.64, 2.1]

			Location = [1.5, 1.5]
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads on1.png"
							"doodads on2.png"
							"doodads on3.png"
							"doodads on4.png"
							"doodads on5.png"
							"doodads on6.png"
							"doodads on7.png"
							"doodads on8.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.075
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads off.png"
						Size = [3, 3]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [3, 3]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [3, 3]
					}
					{
						File = "walls_33.png"
						Size = [3, 3]
					}
					{
						File = "walls_66.png"
						Size = [3, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				Offset = [0, 0]
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [3, 3]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [3, 3]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				Offset = [0, 0.5]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [4.2, 4.2]
						Z = 2.50 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [16, 120, 255] // [6, 57, 113]
					}
				]
			}
		}

		NozzleCollider
		{
			Type = PolygonCollider
			Vertices
			[
				[0.16, 3]
				[2.84, 3]
				[2.96, 4.2]
				[0.04, 4.2]
			]
			Density = 1.2
		}

		NozzleGraphics
		{
			Type = Graphics
			Location = [1.5, 4.0+4/64]
			Floor
			{
				Layer = "weapons"
				DamageLevels
				[
					{
						File = "nozzle.png"
						NormalsFile = "nozzle_normals.png"
						Size = [2.85, 1.9]
					}
					{
						File = "nozzle_33.png"
						NormalsFile = "nozzle_normals_33.png"
						Size = [2.85, 1.9]
					}
					{
						File = "nozzle_66.png"
						NormalsFile = "nozzle_normals_66.png"
						Size = [2.85, 1.9]
					}
				]
			}
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1.5, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "batteries 1.png"
					Size = [2, 2]
				}
				{
					File = "batteries 2.png"
					Size = [2, 2]
				}
				{
					File = "batteries 3.png"
					Size = [2, 2]
				}
				{
					File = "batteries 4.png"
					Size = [2, 2]
				}
				{
					File = "batteries 5.png"
					Size = [2, 2]
				}
				{
					File = "batteries 6.png"
					Size = [2, 2]
				}
				{
					File = "batteries 7.png"
					Size = [2, 2]
				}
			]
		}

		MainThruster
		{
			Type = Thruster
			OperationalToggle = IsOperational
			Location = [1.5, 4.44]
			Rotation = 90d// Relative to unrotated part.
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = 0
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}
		LateralThruster : MainThruster
		{
			Rotation = 0d
			MinActivation = -0.05
			MaxActivation = 0.05
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			FuelUsagePerSecond = (&../../FuelUsage)/20
			AllowAutoFire = false
		}
		ReverseThruster : MainThruster
		{
			Rotation = -90d
			MinActivation = 0
			MaxActivation = { BaseValue=0.345; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelUsagePerSecond = (&../../FuelUsage)*0.81//Penalty for reverse Thrust
		}

		ActivationBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = MainThruster
			LowColor = [0, 0, 0]
			HighColor = [250, 250, 250]
			FullColor = [255, 255, 255]
		}

		ThrustEffectsSounds
		{
			Type = ContinuousEffects
			ChainedTo = MainThruster
			FactorMediaEffectsIntensityWith = MainThruster
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterRumble
				{
					Volume = 0.5
					Speed = 1.5
					MaxConcurrentVolume = 0.64
				}
			]
		}

		BurstTrigger
		{
			Type = ThresholdTrigger
			AmountFrom = MainThruster
			MinAmount = 0.5
		}

		BurstEffects
		{
			Type = TriggeredEffects
			ChainedTo = MainThruster
			Trigger = BurstTrigger
			FactorMediaEffectsIntensityWith = MainThruster
			AnchorMediaEffects = true
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterBurst
				{
					Volume = .25
					Speed = 1.5
					MaxConcurrentVolume = .5
				}
			]
		}
/*
		WhiteThruster
		{
			Type = Thruster
			OperationalToggle = IsOperational
			Location = [1.5, 4.44]
			Rotation = 90d// Relative to unrotated part.
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = { BaseValue=0.64; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = 0
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = 60
			ActivationRecoveryTime = 60
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = (&../../FuelUsage)*0.64
		}
	
		ThrustEffectsWhiteThruster
		{
			Type = ContinuousEffects
			ChainedTo = WhiteThruster
			FactorMediaEffectsIntensityWith = WhiteThruster
			MediaEffects
			[
				&/COMMON_PARTICLES/IonThruster/Glow/Huge/White
				&/COMMON_PARTICLES/Thruster/Fire/Huge/White
				&/COMMON_PARTICLES/Thruster/PlumeLight/Huge/White
				&/COMMON_PARTICLES/Thruster/Smoke/Huge
				&/COMMON_PARTICLES/Thruster/Sparks/Spread/White
			]
		}
*/
		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational

			Location = [1.5, 1.5]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [1.5, 1.5]
		}

		ThrusterHum
		{
			Type = ContinuousEffects
			Location = [1.5, 1.5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterHum
				{
					Volume = .1
					Speed = 1.25
					MaxConcurrentVolume = 1
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1.5, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1.5, 1.5]
					}
				}
			]
		}
		
		Blueprints
		{
			Type=BlueprintSprite
			File = "blueprints.png"
			Size = [3, 5]
		}
	}

	Stats
	{
		ThrusterForce = &~/Part/ThrusterForce
		ThrusterRampUp = &~/Part/ThrustIncreaseTime
		ThrusterPowerUsage = (&~/Part/FuelUsage) / 1000
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&ThrusterPowerUsage) / 2
		RecCrew = (&RecPower) * 4
	}
}
