Components
	{
		FirePrefToggle
		{
			Type = UIToggle
			ToggleID = "fire_pref"
			Default = 1
		}
		FirePrefAttack
		{
			Type = ModeToggle
			Mode = FirePrefToggle
			OnModes = [0, 2]
		}
		FirePrefDefend
		{
			Type = ModeToggle
			Mode = FirePrefToggle
			OnModes = [1, 2]
		}
		AttackToggle
		{
			Type = MultiToggle
			Toggles = [AutoTargetToggle, FirePrefAttack]
			Mode = All
		}
		DefendToggle
		{
			Type = MultiToggle
			Toggles = [AutoTargetToggle, FirePrefDefend]
			Mode = All
		}

		SwitchTimerTrigger
		{
			Type = Timer
			Duration = 4
			AutoStart = true
			Repeats = false
		}
		SwitchTimerProgressBar
		{
			Type = ProgressBar
			ShowProgressFor = SwitchTimerTrigger
			Invert = true
			OperationalToggle = SwitchCooldownToggle
			InvertOperationalToggle = true
		}
		SwitchCooldownToggle
		{
			Type = TriggeredToggle
			OnTrigger = SwitchTimerTrigger
			StartsOn = false
		}
		WeaponIsOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational, SwitchCooldownToggle]
			Mode = All
		}

		Turret
		{
			Type = TurretWeapon
			Location = [1, 1]
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = WeaponIsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = .6
			FiringArc = 320d
			RotateSpeed = 90d
			FireThresholdAngle = 1d
			TargetSearchTriesPerFrame = 1
			AIFirepowerRating = 1600
			FirePermissionToggle = FireModeToggle
			Emitter = BulletEmitter
			IgnoreSourceShipLOSChecks = true

			AutoTargets
			[
				{
					TargetType = Bullets
					BulletTargetCategories = [missile, mine, bullet, laser]
					Toggle = DefendToggle
				}
				{
					TargetType = ShipParts
					Toggle = AttackToggle
					Overridable = true
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = WeaponIsOperational
			ShowProgressFor = Turret
		}

		BulletEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			Location = [75/64, -23/64] //-23,-71
			OperationalToggle = IsOperational
			Bullet = &/COMMON_SHOTS/YellowSmallLaserPDShot
			// Spread = [-5d, 5d]
			ResourceStorage = BatteryStorage
			ResourcesUsed = 100
			Burst = 2 //3
			BurstDelay = .075
			UseResourcePerShotInBurst = true
		}
		BulletEmitter2 : &BulletEmitter
		{
			Location = [75/64, 23/64]
		}
		ChargeEffectBase
		{
			Type = TriggeredEffects
			ChainedTo = BulletEmitter
			Trigger = Turret
			AnchorMediaEffects = true
		
			MediaEffects
			[
				&/COMMON_SOUNDS/LaserReCharge
			]
		}

		FireEffect
		{
			Type = TriggeredEffects
			ChainedTo = BulletEmitter
			Trigger = BulletEmitter //BulletEmitterLeft
			AnchorMediaEffects = true
	
			MediaEffects
			[
				&/COMMON_SOUNDS/TurbolaserSFX
				&/COMMON_PARTICLES/SmallGreenLaserShoot
			]
		}
		FireEffect2 : &FireEffect
		{
			ChainedTo = BulletEmitter2
			Trigger = BulletEmitter2 //BulletEmitterRight
		}
	}

LaserStats
{
	NameKey = "StatCategories/PDLaserShot"
	Stats
	{
		DamagePerShot = &~/Components/BulletEmitter/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage
		DamagePerSecond = (&DamagePerShot) * 2 / (&~/Components/Turret/FireInterval)
		Damage = [&../DamagePerShot, &../DamagePerSecond]
//		ShotDamagePerShot = &~/Components/BulletEmitter/Bullet/Components/AntiBullet/HitBullet/HitEffects/0/Damage
//		ShotDamagePerSecond = (&ShotDamagePerShot) * 2 / (&~/Components/Turret/FireInterval)
//		ShotDamage = [&../ShotDamagePerShot, &../ShotDamagePerSecond]
	}
}