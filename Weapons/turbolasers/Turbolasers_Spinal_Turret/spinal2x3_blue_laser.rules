Components
	{
		SwitchTimerTrigger
		{
			Type = Timer
			Duration = 2.75
			AutoStart = true
			Repeats = false
		}
		SwitchTimerProgressBar
		{
			Type = ProgressBar
			ShowProgressFor = SwitchTimerTrigger
			Invert = true
			OperationalToggle = SwitchCooldownToggle
			InvertOperationalToggle = true
		}

		SwitchCooldownToggle
		{
			Type = TriggeredToggle
			OnTrigger = SwitchTimerTrigger
			StartsOn = false
		}
		WeaponIsOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational, SwitchCooldownToggle]
			Mode = All
		}

		Turret
		{
			Type = FixedWeapon
			OperationalToggle = WeaponIsOperational  //IsOperational
			AutoFireToggle = AutoFireToggle
			Location = [1, 1.5]
			Rotation = -90d
			FireInterval = 1.0
			//FiringArc = 40d
			//RotateSpeed = 90d
			//FireThresholdAngle = 1d
			TargetingArc = 90d
			AIFirepowerRating = 800
			IgnoreSourceShipLOSChecks = true
			//AllowFireWithBlockedLOS = true
			//FirePermissionToggle = FirePermissionToggle
			Emitter = BulletEmitter

			AutoTarget
			{
				TargetType = ShipParts
				Toggle = AutoTargetToggle
			}

			CoverageLine
			{
				LineSprite
				{
					Texture = &/INDICATORS/RadialGradient
					VertexColor = [255, 255, 255, 191]
					UVRect = [.5, 0, 0, 1]
				}
				LineThickness = 2

				BeginCapSprite : LineSprite
				{
					UVRect = [0, 0, .5, 1]
				}
				BeginCapSize = [1, 2]

				EndCapSprite : LineSprite
				{
					UVRect = [.5, 0, .5, 1]
				}
				EndCapSize = [1, 2]
			}
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = Turret
		}

		BulletEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			Location = [2.40625, 0]
			OperationalToggle = IsOperational
			Bullet = &/COMMON_SHOTS/blueheavylasershot
			ResourceStorage = BatteryStorage
			ResourcesUsed = 250
		}

		FireEffect
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = BulletEmitter
			Location = [2.40625, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				&/COMMON_PARTICLES/SmallBlueLaserShoot
				&/COMMON_SOUNDS/TurbolaserSFX
			]
		}

		TurretGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Location = [0, 0]
			Rotation = 90d
			Floor
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "ball[2,2]01.png"
						Size = [2, 2]
					}
				]
			}
		}


		BarrelSprite
		{
			Type = Sprite
			ChainedTo = Turret
			Location = [0, 0]
			Rotation = 90d
			Layer = "roof_turrets"
			ResetAnimationTrigger = BulletEmitter
			AtlasSprite
			{
				AnimationFiles
				[
					"../barrel[1,3]00.png"
				]
				Size = [1, 3]
				Offset = [0, -0.90625]
				AnimationInterval = 0.0625
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}
	}


LaserStats
{
	NameKey = "StatCategories/HeavyBlueLasershot"
	Stats
	{
		ShieldDamagePerShot = &~/Components/BulletEmitter/Bullet/Components/Hit/HitShield/HitEffects/0/Damage
		ShieldDamagePerSecond = (&ShieldDamagePerShot) * (&<turbolaser_spinal_turret_2x3.rules>/Part/Stats/ROF)
		ShieldDamage = [&../ShieldDamagePerShot, &../ShieldDamagePerSecond]
		DamagePerShot = &~/Components/BulletEmitter/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage
		DamagePerSecond = (&DamagePerShot) * (&<turbolaser_spinal_turret_2x3.rules>/Part/Stats/ROF)
		Damage = [&../DamagePerShot, &../DamagePerSecond]
	}
}
