/* ----------------------------------------------------------------------------

Introduction: SW:ACD 0.3.7

Author : Lafiel

Description:
Currently prototyping. Everything is temporary.

Added by demand. Based W-165 planetary turbolaser / M-68 planetary magnapulse cannon.
It's basically are full turret version of similar weapons such as Supremacy's Tower siege cannons
and Mandator's orbital bombardment cannon. The weapon requires a lot of power, hence, only huge ships 
can mount it. This is controlled by a huge perimeter. To allow broadsiders the perimeter is less on the back side (1/2).

Versions:

 o 1.0 Cosmoteer 0.15.14

---------------------------------------------------------------------------- */ 
Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{	
	ID = SW.turbolaser_mortar_siege01
	NameKey = "Parts/TurbolaserMortarSiege01"
	IconNameKey = "Parts/TurbolaserMortarSiege01Icon"
	DescriptionKey = "Parts/TurbolaserMortarSiege01Desc"
	EditorGroups = ["WeaponsEnergy", "SWTechIII"]
	Resources
	[
		[steel, 8] //
	]  //Cost = 6000000
	AIValueFactor = 1

	TypeCategories = [weapon, uses_power, uses_laser_parts, is_crewed,mortar_cannon,siege_weapon]
	RequiresCategories = [SW_Bridge,SW_WarRoom]
	Size = [14, 14]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "cannons"
	MaxHealth = 196000
	InitialPenetrationResistance = 5

	ReceivableBuffs : ^/0/ReceivableBuffs [SWTurretPerimeter]


	EditorIcon
	{
		Texture
		{
			File = "icon_mortar01.png"
			SampleMode = Linear
		}
		Size = [92, 92]
	}
	
	Components : ^/0/Components, &<mortar_siege01_graphics.rules>, &<turbolaser_mortar01_green.rules>/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew,{Toggle=PerimeterToggle; Invert=true}]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 80000
		}

		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		PerimeterProvider
		{
			Type = AreaBuffProvider
			BuffType = SWTurretPerimeter
			BuffAmount = 16
			BuffArea = [-500, -500, 1014, 764]  //no less than 500; back is half
			Criteria
			{
				Category = mortar_cannon
				//Categories = [mortar_cannon,planetary_weapon]
			}
		}
		PerimeterProvider2
		{
			Type = GridBuffProvider
			BuffType = SWTurretPerimeter
			BuffAmount = 14
			GridDistance = 200
			BuffsSelf = false
			//Falloff = 0.15 //0.02
			Criteria
			{
				Category = siege_weapon
				//Categories = [siege_weapon,axial_weapon]
			}
		}
		PerimeterToggle
		{
			Type = BuffToggle
			BuffType = SWTurretPerimeter
			MinBuffValue = 14
			//MaxBuffValue = 2
			//Invert = true
		}
		NotPerimeterToggle
		{
			Type = MultiToggle
			Toggles
			[
				PerimeterToggle
			]
			Mode = All
			Invert = true
		}


		FloorGraphics1
		{
			Type = Graphics
			Location = [4, 1]
			Floor
			{
				Layer = "floors"
				Offset = [-3, 0]
				DamageLevels
				[
					{
						File = "../floor06[2,2]01.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_33.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_66.png"
						Size = [2, 2]
					}
				]
			}
			Walls : &Floor
			{
				Offset = [-1, 0]
			}
			Roof : &Floor
			{
				Offset = [1, 0]
			}
			OperationalDoodad = &NonOperationalDoodad
			NonOperationalDoodad : &Floor
			{
				Offset = [3, 0]
			}
		}
		FloorGraphics2
		{
			Type = Graphics
			Location = [11, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "../floor06[2,2]01.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_33.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_66.png"
						Size = [2, 2]
					}
				]
			}
			Walls : &Floor
			{
				Offset = [-2, 0]
			}
			Roof : &Floor
			{
				Offset = [2, 0]
			}
		}
		FloorGraphics3 : &FloorGraphics1
		{
			Location = [4, 3]
		}
		FloorGraphics4 : &FloorGraphics2
		{
			Location = [11, 3]
		}
		FloorGraphics5 : &FloorGraphics1
		{
			Location = [4, 5]
		}
		FloorGraphics6 : &FloorGraphics2
		{
			Location = [11, 5]
		}
		FloorGraphics7 : &FloorGraphics1
		{
			Location = [4, 7]
		}
		FloorGraphics8 : &FloorGraphics2
		{
			Location = [11, 7]
		}
		FloorGraphics9 : &FloorGraphics1
		{
			Location = [4, 9]
		}
		FloorGraphics10 : &FloorGraphics2
		{
			Location = [11, 9]
		}
		FloorGraphics11 : &FloorGraphics1
		{
			Location = [4, 11]
		}
		FloorGraphics12 : &FloorGraphics2
		{
			Location = [11, 11]
		}
		FloorGraphics13 : &FloorGraphics1
		{
			Location = [4, 13]
		}
		FloorGraphics14 : &FloorGraphics2
		{
			Location = [11, 13]
		}


		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [7, 7]
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/lights.png"
						Size = [14, 14]
					}
				]
			}
		}
		WallsGraphics //corners
		{
			Type = Graphics
			Location = [7, 7]
			Floor
			{
				Layer = "walls"
				Offset = [-6.5, -6.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall02.png"
						UVRotation = 1
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_33.png"
						UVRotation = 1
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_66.png"
						UVRotation = 1
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				Offset = [6.5, -6.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall02.png"
						UVRotation = 2
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_33.png"
						UVRotation = 2
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_66.png"
						UVRotation = 2
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "walls"
				Offset = [-6.5, 6.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall02.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_33.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofWindows = &NonOperationalRoofWindows
			NonOperationalRoofWindows
			{
				Layer = "walls"
				Offset = [6.5, 6.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall02.png"
						UVRotation = 3
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_33.png"
						UVRotation = 3
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_66.png"
						UVRotation = 3
						Size = [1, 1]
					}
				]
			}
		}
		WallsGraphics2 //edge
		{
			Type = Graphics
			Location = [7, 7]
			Floor
			{
				Layer = "walls"
				Offset = [0, -6.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall04.png"
						Size = [12, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_33.png"
						Size = [12, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_66.png"
						Size = [12, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				Offset = [0, 6.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall04.png"
						UVRotation = 2
						Size = [12, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_33.png"
						UVRotation = 2
						Size = [12, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_66.png"
						UVRotation = 2
						Size = [12, 1]
					}
				]
			}
			Roof
			{
				Layer = "walls"
				Offset = [-6.5, 0]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall04.png"
						UVRotation = 3
						Size = [1, 12]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_33.png"
						UVRotation = 3
						Size = [1, 12]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_66.png"
						UVRotation = 3
						Size = [1, 12]
					}
				]
			}
			OperationalRoofWindows = &NonOperationalRoofWindows
			NonOperationalRoofWindows
			{
				Layer = "walls"
				Offset = [6.5, 0]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall04.png"
						UVRotation = 1
						Size = [1, 12]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_33.png"
						UVRotation = 1
						Size = [1, 12]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_66.png"
						UVRotation = 1
						Size = [1, 12]
					}
				]
			}
		}

		RoofGraphics
		{
			Type = Graphics
			Location = [7, 7]
			Floor
			{
				Layer = "roofs"
				Offset = [-3.5, -3.5]
				DamageLevels
				[
					{
						File = "../roof03[14,14]02-p1.png"
						Size = [7, 7]
					}
				]
			}
			Walls
			{
				Layer = "roofs"
				Offset = [3.5, -3.5]
				DamageLevels
				[
					{
						File = "../roof03[14,14]02-p1.png"
						Size = [7, 7]
						MirrorU = true
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				Offset = [-3.5, 3.5]
				DamageLevels
				[
					{
						File = "../roof03[14,14]02-p1.png"
						Size = [7, 7]
						MirrorV = true
					}
				]
			}
			OperationalDoodad = &NonOperationalDoodad
			NonOperationalDoodad
			{
				Layer = "roofs"
				Offset = [3.5, 3.5]
				DamageLevels
				[
					{
						File = "../roof03[14,14]02-p1.png"
						Size = [7, 7]
						MirrorU = true
						MirrorV = true
					}
				]
			}
		}


/*
		CoreGraphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [4, 8]
			Floor
			{
				Layer = "weapons"
				Offset = [0, -208/64]
				DamageLevels
				[
					{
						File = "../../Superweapons/cannon_power_block3.png"
						Size = [3, 9]
					}
				]
			}
			Roof
			{
				Layer = "weapons"
				Offset = [0, 208/64]
				DamageLevels
				[
					{
						File = "../../Superweapons/cannon_power_block3.png"
						Size = [3, 9]
						MirrorV = true
					}
				]
			}
		}
*/
		ConsoleGraphics
		{
			Type = Graphics
			//ChainedTo = Weapon
			Location = [7, 7]
			OperationalToggle = IsOperational
			DoodadToggle = IsOperational
			ShowToggledDoodadsWhenNotOperational = true
			ToggleOnDoodad
			{
				Layer = "doodads_low"
				Offset = [-2, 0]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../FalconLaser/console on1.png"
							"../FalconLaser/console on2.png"
							"../FalconLaser/console on3.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.5
					}
				]
			}
			ToggleOffDoodad
			{
				Layer = "doodads_low"
				Offset = [-2, 0]
				DamageLevels
				[
					{
						File = "../FalconLaser/console off.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad : &ToggleOnDoodad
			{
				Offset = [2, 0]
			}
			NonOperationalDoodad : &ToggleOffDoodad
			{
				Offset = [2, 0]
			}
			OperationalRoofDoodad : &ToggleOnDoodad
			{
				Offset = [-2, 2]
			}
			NonOperationalRoofDoodad : &ToggleOffDoodad
			{
				Offset = [-2, 2]
			}
			OperationalRoofWindows : &ToggleOnDoodad
			{
				Offset = [2, 2]
			}
			NonOperationalRoofWindows : &ToggleOffDoodad
			{
				Offset = [2, 2]
			}
		}


		CrewLocation
		{
			Type = CrewLocation
			Location = [4.546875, 6.59375] //-157,-26
			Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [6.453125, 6.59375] //-99,-26
			Rotation = 180d
		}
		CrewLocation3
		{
			Type = CrewLocation
			Location = [9.453125, 6.59375]
			Rotation = 180d
		}
		CrewLocation4
		{
			Type = CrewLocation
			Location = [8.546875, 6.59375] //-22
			Rotation = 180d
		}
		CrewLocation5
		{
			Type = CrewLocation
			Location = [4.546875, 8.59375]
			Rotation = 180d
		}
		CrewLocation6
		{
			Type = CrewLocation
			Location = [5.453125, 8.59375]
			Rotation = 180d
		}
		CrewLocation7
		{
			Type = CrewLocation
			Location = [9.453125, 8.59375]
			Rotation = 180d
		}
		CrewLocation8
		{
			Type = CrewLocation
			Location = [8.546875, 8.59375]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 8
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				&../../CrewLocation/Location
				&../../CrewLocation2/Location
				&../../CrewLocation3/Location
				&../../CrewLocation4/Location
				&../../CrewLocation5/Location
				&../../CrewLocation6/Location
				&../../CrewLocation7/Location
				&../../CrewLocation8/Location
			]
			CrewLocations
			[
				CrewLocation
				CrewLocation2
				CrewLocation3
				CrewLocation4
				CrewLocation5
				CrewLocation6
				CrewLocation7
				CrewLocation8
			]
		}


		BatterySprites
		{
			Type = ResourceSprites
			Location = [5, 7]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 0
			RangeHigh = 5000
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "../FalconLaser/batteries1.png"
					Size = [2, 2]
				}
				{
					File = "../FalconLaser/batteries2.png"
					Size = [2, 2]
				}
				{
					File = "../FalconLaser/batteries3.png"
					Size = [2, 2]
				}
				{
					File = "../FalconLaser/batteries4.png"
					Size = [2, 2]
				}
				{
					File = "../FalconLaser/batteries5.png"
					Size = [2, 2]
				}
			]
		}
		BatterySprites2 : &BatterySprites
		{
			Type = ResourceSprites
			Location = [9, 7]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 5000
			RangeHigh = 10000
		}
		BatterySprites3 : &BatterySprites
		{
			Type = ResourceSprites
			Location = [5, 9]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 10000
			RangeHigh = 15000
		}

		BatterySprites4 : &BatterySprites
		{
			Type = ResourceSprites
			Location = [9, 9]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 15000
			RangeHigh = 20000
		}

		BatterySprites5 : &BatterySprites
		{
			Type = ResourceSprites
			Location = [7, 5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			RangeLow = 20000
			RangeHigh = 25000
		}


		OperationEffects
		{
			Type = ToggleEffects
			Location = [7, 7]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [7, 7]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [7, 7]
			Layer = "indicators"
			Indicators
			[
				// Turret Perimeter
				{
					Toggle = NotPerimeterToggle
					ShowInBuildMode = true
					AtlasSprite
					{
						File = &/INDICATORS/SWMinimumDistance
						Size = [5, 5]
					}
				}
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [5, 5]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [5, 5]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [5, 5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "../blueprints01.png"
			Size = [14, 14]
		}

	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4

		ROF = 1 / (&<turbolaser_mortar01_green.rules>/Components/Weapon/FireInterval)
		Range = &<turbolaser_mortar01_green.rules>/Components/WeaponEmitter/Bullet/Range
		Arc = deg(&<turbolaser_mortar01_green.rules>/Components/Weapon/FiringArc)
		TurretSpeed = deg(&<turbolaser_mortar01_green.rules>/Components/Weapon/RotateSpeed)
		ShotSpeed = &<turbolaser_mortar01_green.rules>/Components/WeaponEmitter/Bullet/Speed
		ShotHP = &<turbolaser_mortar01_green.rules>/Components/WeaponEmitter/Bullet/Components/Targetable/Health
		PowerPerShot = (&<turbolaser_mortar01_green.rules>/Components/WeaponEmitter/ResourcesUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * 1 / (&<turbolaser_mortar01_green.rules>/Components/Weapon/FireInterval)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
	}
	StatsByCategory
	[
		//&<light_turbolaser_red.rules>/LaserStats
		//&<light_turbolaser_blue.rules>/LaserStats
		&<turbolaser_mortar01_green.rules>/LaserStats
	]
}