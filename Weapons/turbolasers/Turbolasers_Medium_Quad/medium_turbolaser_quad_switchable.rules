Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{	
    //IDs
	ID = SW.medium_turbolaser_quad_switchable

    //StringKeys
	NameKey = "Parts/MediumTurbolaserQuadswitchable"
	IconNameKey = "Parts/MediumTurbolaserQuadswitchableIcon"
	DescriptionKey = "Parts/MediumTurbolaserQuadswitchableDesc"

    //Groups&Categories
	EditorGroups = ["WeaponsEnergy", "SWTechIII"]
	TypeCategories = [weapon, uses_power, uses_laser_parts, is_crewed]

    //Resources&Size&Health
	Resources
	[
		[SW.durasteel, 120]
		[coil, 72]    //
		[coil2, 8] //some extra
	]  //Cost = 30000 
	Size = [4, 4]
	MaxHealth = 48000  

    //Rects

    //Selections
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "cannons"

    //PartSpecific
	AIValueFactor = 2
	InitialPenetrationResistance = 8

    //ReceivableBuffs&Prohibits
	ReceivableBuffs : ^/0/ReceivableBuffs []
//	ProhibitedBy : ^/0/ProhibitedBy [tall]

    //Doors&Etc
//	AutoDoorMaxPathLength = 8
	AllowedDoorLocations
	[
		[-1, 2]
		[4, 2]
		[-1, 3]
		[4, 3]
		[0, 4]
		[1, 4]
		[2, 4]
		[3, 4]
	]

    //Editor
	EditorIcon
	{
		Texture
		{
			File = "turret01A.png"
			SampleMode = Linear
		}
		Size = [80, 80]
	}

    //Components&Inheritance
	Components : ^/0/Components, /*&<../SW_weapon_fire_alternate_2.rules>*/
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 12 //cannon_deck takes 8???
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			AvailableChoices = [-1, 0, 1, 2]
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		FireAlternatingToggle
		{
			Type = UIToggle
			ToggleID = "fire_alternating"
			Default = 0
			AvailableChoices = [0]
		}
/*
		WeaponTimerBuffProvider
		{
			Type = SelfBuffProvider
			BuffType = SWWeaponTimerBuff
			BuffAmount = 100%
		}
*/
		CommonReloadTimer
		{
			Type = Timer
			Duration = 4.2
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}
		CommonOnShootEffectTimer
		{
			Type = Timer
			Duration = 0.54
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}
		CommonReloadResetTriggerProxy
		{
			Type = TriggerProxy
			ComponentID = CommonReloadResetTrigger
		}

		SwitchWeaponCooldownProgressBar
		{
			Type = ProgressBar
			OperationalToggle = SwitchWeaponCooldownTimer
			InvertOperationalToggle = true
			ShowProgressFor = SwitchWeaponCooldownTimer
			Invert = true
			LowColor = [16, 16, 16]
			HighColor = [255, 255, 255]
		}
		SwitchWeaponCooldownTimer
		{
			Type = Timer
			Duration = 12.6
			AutoStart = true
			Repeats = false
			StartsOn = 0
			StartTrigger = SwitchWeaponCooldownTrigger
		}
		SwitchWeaponCooldownTrigger
		{
			Type = ModeTrigger
			Mode = MunitionType
			TriggerInModes = [0, 1, 2]
		}

		MunitionType
		{
			Type = UIToggle
			ToggleID = "SW.munition_type"
			Default = 0
			AvailableChoices = [0, 1, 2]
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		RedMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 0
		}
		RedMunitionComponents
		{
			Type = ToggledComponents
			Toggle = RedMunitionToggle
			IncludeInBlueprints = false
			Components = &<weapon02_quad_turbolaser_red.rules>/Components
		}

		BlueMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 1
		}
		BlueMunitionComponents
		{
			Type = ToggledComponents
			Toggle = BlueMunitionToggle
			IncludeInBlueprints = false
			Components = &<weapon02_quad_turbolaser_blue.rules>/Components
		}

		GreenMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 2
		}
		GreenMunitionComponents
		{
			Type = ToggledComponents
			Toggle = GreenMunitionToggle
			IncludeInBlueprints = false
			Components = &<weapon02_quad_turbolaser_green.rules>/Components
		}

		ExteriorType
		{
			Type = UIToggle
			ToggleID = "SW.exterior_type"
			Default = 0
			AvailableChoices = [0, 1]
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		WhiteExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 0
		}

		WhiteExteriorComponents
		{
			Type = ToggledComponents
			Toggle = WhiteExteriorToggle
			IncludeInBlueprints = false
			Components = &<turbolaser_quad_white.rules>/Components
		}

		GreyExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 1
		}

		GreyExteriorComponents
		{
			Type = ToggledComponents
			Toggle = GreyExteriorToggle
			IncludeInBlueprints = false
			Components = &<turbolaser_quad_grey.rules>/Components
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 10000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
		}
		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [64, 64, 0]
			HighColor = [250, 250, 0]
			FullColor = [255, 255, 0]
		}
		
		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [2, 2]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "../Turbolasers_Big/floor.png"
						Size = [4,4]
					}
					{
						File = "../Turbolasers_Big/floor_33.png"
						Size = [4,4]
					}
					{
						File = "../Turbolasers_Big/floor_66.png"
						Size = [4,4]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../Turbolasers_Big/lights5.png"
						Size = [4,4]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "../Turbolasers_Big/walls.png"
						Size = [4,4]
					}
					{
						File = "../Turbolasers_Big/walls_33.png"
						Size = [4,4]
					}
					{
						File = "../Turbolasers_Big/walls_66.png"
						Size = [4,4]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "../Turbolasers_Big/roof.png"
						NormalsFile = "../Turbolasers_Big/roof_normals.png"
						Size = [4,4]
					}
					{
						File = "../Turbolasers_Big/roof_33.png"
						NormalsFile = "../Turbolasers_Big/roof_normals_33.png"
						Size = [4,4]
					}
					{
						File = "../Turbolasers_Big/roof_66.png"
						NormalsFile = "../Turbolasers_Big/roof_normals_66.png"
						Size = [4,4]
					}
				]
			}
		}
		TurretInsideGraphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			//Location = [0,0]
			ChainedTo = Turret
			Rotation = 90d
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../Turbolasers_Big/lights4.png"
						Size = [1.625,1.125]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../Turbolasers_Big/console on1.png"
							"../Turbolasers_Big/console on2.png"
							"../Turbolasers_Big/console on3.png"
						]
						Size = [4, 4]
						AnimationInterval = 0.50
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../Turbolasers_Big/console off.png"
						Size = [4,4]
					}
				]
			}
		}

		FirePermissionToggle
		{
			Type = MultiToggle
			Toggles = [CommonReloadTimer, SwitchWeaponCooldownTimer, FireModeToggle]
			Mode = All
		}

		Turret : &~/TurretBase
		{
/*
		}
		WeaponEmitter : &~/BulletEmitterBase
		{
*/
		}
		BulletEmitterBase : &~/BulletEmitterBase
		{
			FireTrigger
		}

		TurretCollider
		{
			Type = PolygonCollider
			Vertices
			[
				[-1.0, -1.2]
				[1.0, -1.2]
				[0.9, 1.4]
				[-0.9, 1.4]
			]
			Location = &../Turret/Location
			//IsHigh = true
		}

		CommonReloadResetTrigger
		{
			Type = MultiTrigger
			Triggers = [Turret]
		}

		ChargeEffectSound
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = Turret
			AnchorMediaEffects = true
		
			MediaEffects
			[
				&/SW_SOUNDS/LaserReCharge
			]
		}

		FireEffectSound
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Location = [1, 0]
			Trigger = Turret
			AnchorMediaEffects = true
	
			MediaEffects
			[
				&/SW_SOUNDS/TurbolaserSFX
			]
		}

		TurretLocationProxy
		{
			Type = ChainableProxy
			ComponentID = Turret
		}



		CrewLocation1
		{
			Type = CrewLocation
			Location = [0.4, 0.45]
			ChainedTo = Turret
			Rotation = 90d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [0.4, -0.45]
			ChainedTo = Turret
			Rotation = 90d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[1.55, 1.6]
				[2.45, 1.6]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}
	
		BatterySprites
		{
			ChainedTo = Turret
			Rotation = 90d
			Type = ResourceSprites
			Location = [0,0]//2,2
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "../Turbolasers_Big/batteries01.png"
					Size = [4,4]
				}
				{
					File = "../Turbolasers_Big/batteries02.png"
					Size = [4,4]
				}
				{
					File = "../Turbolasers_Big/batteries03.png"
					Size = [4,4]
				}
				{
					File = "../Turbolasers_Big/batteries04.png"
					Size = [4,4]
				}
				{
					File = "../Turbolasers_Big/batteries05.png"
					Size = [4,4]
				}
				{
					File = "../Turbolasers_Big/batteries06.png"
					Size = [4,4]
				}
				{
					File = "../Turbolasers_Big/batteries07.png"
					Size = [4,4]
				}
				{
					File = "../Turbolasers_Big/batteries08.png"
					Size = [4,4]
				}
				{
					File = "../Turbolasers_Big/batteries09.png"
					Size = [4,4]
				}
				{
					File = "../Turbolasers_Big/batteries10.png"
					Size = [4,4]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational
			Location = [2, 2]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}


		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [2, 2]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [2, 2]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [3, 3]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [3, 3]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [3, 3]
					}
				}
			]
		}
		Blueprints
		{
			Type = BlueprintSprite
			File = "../Turbolasers_Big/blueprints.png"
			Size = [4, 4]
		}
	}

   //Stats
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&~/TurretStats/Stats/PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4
/*
		ROF = 2 / (&~/Part/Components/Turret/FireInterval)
		Range = &~/Part/Components/BulletEmitterBase/Bullet/Range
		Arc = deg(&~/Part/Components/Turret/FiringArc)
		TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
*/		
	}
	StatsByCategory
	[
		&~/TurretStats
		&<weapon02_quad_turbolaser_red.rules>/LaserStats
		&<weapon02_quad_turbolaser_blue.rules>/LaserStats
		&<weapon02_quad_turbolaser_green.rules>/LaserStats
	]
	
}
TurretStats
{
	NameKey = "StatCategories/Turret"
	Stats
	{
		Barrels = 4
		ReloadTime = &~/Part/Components/CommonReloadTimer/Duration
		Salvo = [&../Barrels, &../ReloadTime]
		ROF = (&Barrels) / (&~/Part/Components/CommonReloadTimer/Duration)
		Range = &~/BulletEmitterBase/Bullet/Range
		Arc = deg(&~/TurretBase/FiringArc)
		TurretSpeed = deg(&~/TurretBase/RotateSpeed)
		PowerPerShot = (&~/BulletEmitterBase/ResourcesUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * (&ROF)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
		//ShotSpeed = &~/Components/BulletEmitterBase/Bullet/Speed
	}
}
OperationalRoofLightingBase
{
	Size = [2.4, 3.55] //X+1,15(Distance between Barrels)=Y
	Z = 1.65 // Controls the "height" of the light for the purposes of normal mapping.
}
BulletEmitterBase
{
	Type = BulletEmitter
//	Location = [2.125, -0.78125] //-50,-132
	OperationalToggle = IsOperational
	ChainedTo = Turret
	FireTrigger = Turret
	GetTargetFrom = Turret
	Bullet =  &/SW_SHOTS/turretturbolaserheavylaserredshot
	FireDelay = 0.18
	ResourceStorage = BatteryStorage
	ResourcesUsed = 100
	Burst = 2
	BurstDelay = 0.06666
	//UseAmmoPerShotInBurst = true
	MinResourcesUsed = 100
}

ReloadProgressBarBase
{
	Type = ProgressBar
	OperationalToggle = SwitchWeaponCooldownTimer
	ShowProgressFor = CommonReloadTimer
	Invert = true
}
TurretBase
{
	Type = TurretWeapon
	Location = [2, 2] // Relative to upper-left corner of unrotated part.
	Rotation = -90d // Relative to unrotated part.
	Emitter = BulletEmitterBase
	OperationalToggle = IsOperational
	AutoFireToggle = AutoFireToggle
	FireInterval = 0 //no less than 0.4
	FirePermissionToggle = FirePermissionToggle
	FiringArc = 320d
	RotateSpeed = 16d
	FireThresholdAngle = 1d
	AIFirepowerRating = 8000
	HoldTargetAfterCancel = 0.5
	AutoTargetCrewSafetyDist = 8
	IgnoreSourceShipLOSChecks = false
	IgnoreSourceShipLowLOSChecks = true
	AllowFireWithBlockedLOS = false


	AutoTargets
	[
		{
			TargetType = ShipParts
			Toggle = AutoTargetToggle
		}
	]

	BlueprintArcSprite
	{
		Texture = &/INDICATORS/WeaponArc
		Size = [0, 1.5]
		Color = [255, 0, 0, 63]
	}
	BlueprintArcRadius = 10
	BlueprintArcSpriteSegments = 64

	CoverageSectorArc
	{
		Texture = &/INDICATORS/VerticalGradient
		VertexColor = [255, 255, 255, 51]
		QuadCount = 64
	}
}