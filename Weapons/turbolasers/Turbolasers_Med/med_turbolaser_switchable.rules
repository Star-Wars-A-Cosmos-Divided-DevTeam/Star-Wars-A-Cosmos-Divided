Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{	
    //IDs
	ID = SW.turbolaser_med_switchable
	OtherIDs = [med_turbolaser,med_turbolaser2,med_turbolaserb1,med_turbolaserb2,med_turbolaserg1,med_turbolaserg2,SW.turbolaser_med_switchable_2]

    //StringKeys
	NameKey = "Parts/Medturbolaserswitchable"
	IconNameKey = "Parts/MedturbolaserswitchableIcon"
	DescriptionKey = "Parts/MedturbolaserswitchableDesc"

    //Groups&Categories
	EditorGroups = ["WeaponsEnergy", "SWTechII"]
	TypeCategories = [weapon, uses_power, is_crewed]
	//RequiresCategories = []

    //Resources&Size&Health
	Resources
	[
		[steel, 64]
		[coil, 32]
		[coil2, 4]
	]
	Size = [2, 2]
	MaxHealth = 18000

    //Rects
	GenerateRectCollider = true
	/*
	ProhibitRects
	[
		[tall, [0, -1, 2, 1]]
	]
	*/

    //Selections
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "turbolasers"

    //PartSpecific
	AIValueFactor = 2
	InitialPenetrationResistance = 5

    //ReceivableBuffs&Prohibits
	ReceivableBuffs : ^/0/ReceivableBuffs []
	//ProhibitedBy : ^/0/ProhibitedBy [tall]

    //Doors&Etc
	AutoDoorMaxPathLength = 8
	MaxDoors = 3
	AllowedDoorLocations
	[
		//[-1, 0]
		[-1, 1]
        [0, 2]
		[1, 2]
        [2, 1]
       	//[2, 0]
       	//[1, -1]
       	//[0, -1]
	]

    //Editor
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [48, 60]
	}


    //Components
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 6
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}
		FireAlternatingToggle
		{
			Type = UIToggle
			ToggleID = "fire_alternating"
			Default = 0
			AvailableChoices = [0]
		}

		CommonReloadTimer
		{
			Type = Timer
			Duration = 2.1
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}
		CommonOnShootEffectTimer
		{
			Type = Timer
			Duration = 0.42
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}
		CommonReloadResetTriggerProxy
		{
			Type = TriggerProxy
			ComponentID = CommonReloadResetTrigger
		}

		SwitchWeaponCooldownProgressBar
		{
			Type = ProgressBar
			OperationalToggle = SwitchWeaponCooldownTimer
			InvertOperationalToggle = true
			ShowProgressFor = SwitchWeaponCooldownTimer
			Invert = true
			LowColor = [16, 16, 16]
			HighColor = [255, 255, 255]
		}
		SwitchWeaponCooldownTimer
		{
			Type = Timer
			Duration = 6.3
			AutoStart = true
			Repeats = false
			StartsOn = 0
			StartTrigger = SwitchWeaponCooldownTrigger
		}
		SwitchWeaponCooldownTrigger
		{
			Type = ModeTrigger
			Mode = MunitionType
			TriggerInModes = [0, 1, 2]
		}

		MunitionType
		{
			Type = UIToggle
			ToggleID = "SW.munition_type"
			Default = 0
			AvailableChoices = [0, 1, 2]
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}
		RedMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 0
		}
		RedMunitionComponents
		{
			Type = ToggledComponents
			Toggle = RedMunitionToggle
			Components = &<med_turbolaser_red.rules>/Components
		}
		BlueMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 1
		}
		BlueMunitionComponents
		{
			Type = ToggledComponents
			Toggle = BlueMunitionToggle
			Components = &<med_turbolaser_blue.rules>/Components
		}
		GreenMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 2
		}
		GreenMunitionComponents
		{
			Type = ToggledComponents
			Toggle = GreenMunitionToggle
			Components = &<med_turbolaser_green.rules>/Components
		}

		ExteriorType
		{
			Type = UIToggle
			ToggleID = "SW.exterior_type"
			Default = 0
			AvailableChoices = [0, 1]
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		WhiteExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 0
		}

		WhiteExteriorComponents
		{
			Type = ToggledComponents
			Toggle = WhiteExteriorToggle
			IncludeInBlueprints = false
			Components = &<med_turbolaser_white.rules>/Components
		}

		GreyExteriorToggle
		{
			Type = ModeToggle
			Mode = ExteriorType
			OnMode = 1
		}
		GreyExteriorComponents
		{
			Type = ToggledComponents
			Toggle = GreyExteriorToggle
			IncludeInBlueprints = false
			Components = &<med_turbolaser_grey.rules>/Components
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 10000 //7680 //for 12 times firing(24shots) //1x2 has 4000 //2x3 has 10000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
		}
		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [64, 64, 0]
			HighColor = [250, 250, 0]
			FullColor = [255, 255, 0]
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [1, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 2]
					}
					{
						File = "floor_33.png"
						Size = [2, 2]
					}
					{
						File = "floor_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"console on1.png"
							"console on2.png"
							"console on3.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.50
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "console off.png"
						Size = [2, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 2]
					}
					{
						File = "walls_33.png"
						Size = [2, 2]
					}
					{
						File = "walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [2, 2]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [2, 2]
					}
				]
			}
			/*
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [2, 2]
						Z = 1.30 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [192, 192, 192] // [6, 57, 113]
					}
				]
			}
			*/
		}

		TurretGhostGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Location = [0.5, 0]
			Rotation = 90d
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "WeaponSprite/barrel_shadow_5.png"
						Size = [2.4, 3]
					}
				]
			}
		}

		FirePermissionToggle
		{
			Type = MultiToggle
			Toggles = [CommonReloadTimer, SwitchWeaponCooldownTimer, FireModeToggle]
			Mode = All
		}

		Turret : &~/TurretBase
		{

		}

		BulletEmitterBase : &~/BulletEmitterBase
		{
			FireTrigger 
		}

		TurretCollider
		{
			Type = PolygonCollider
			Vertices
			[
				[-0.5, -0.5]
				[0.5, -0.5]
				[0.45, 0.8]
				[-0.45, 0.8]
			]
			Location = &~/TurretBase/Location
			//IsHigh = true
		}

		CommonReloadResetTrigger
		{
			Type = MultiTrigger
			Triggers = [Turret]
		}

		ChargeEffectSound
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = Turret
			AnchorMediaEffects = true
		
			MediaEffects
			[
				&/SW_SOUNDS/LaserReCharge
			]
		}

		FireEffectSound
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Location = [1, 0]
			Trigger = Turret
			AnchorMediaEffects = true
	
			MediaEffects
			[
				&/SW_SOUNDS/TurbolaserSFX
			]
		}

		TurretLocationProxy
		{
			Type = ChainableProxy
			ComponentID = Turret
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [0.55, 0.6]
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.45, 0.6]
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[0.55, 0.5]
				[1.45, 0.5]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 2]
				}
				{
					File = "batteries2.png"
					Size = [2, 2]
				}
				{
					File = "batteries3.png"
					Size = [2, 2]
				}
				{
					File = "batteries4.png"
					Size = [2, 2]
				}
				{
					File = "batteries5.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}
		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]
		}
	}

   //Stats
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&~/TurretStats/Stats/PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}
	StatsByCategory
	[
		&~/TurretStats
		&<med_turbolaser_red.rules>/LaserStats
		&<med_turbolaser_blue.rules>/LaserStats
		&<med_turbolaser_green.rules>/LaserStats
	]
}
TurretStats
{
	NameKey = "StatCategories/Turret"
	Stats
	{
		Barrels = 2
		ReloadTime = &~/Part/Components/CommonReloadTimer/Duration
		Salvo = [&../Barrels, &../ReloadTime]
		ROF = (&Barrels) / (&~/Part/Components/CommonReloadTimer/Duration)
		Range = &~/BulletEmitterBase/Bullet/Range
		Arc = deg(&~/TurretBase/FiringArc)
		TurretSpeed = deg(&~/TurretBase/RotateSpeed)
		PowerPerShot = (&~/BulletEmitterBase/ResourcesUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * (&ROF)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
		Spread = deg(&~/BulletEmitterBase/Spread/1)
		//ShotSpeed = &~/Components/BulletEmitterBase/Bullet/Speed
	}
}
OperationalRoofLightingBase
{
	Size = [3.0, 3.6] //X+0,6(Distance between Barrels)=Y
	Z = 1.65 // Controls the "height" of the light for the purposes of normal mapping.
}
BulletEmitterBase
{
	Type = BulletEmitter
	ChainedTo = TurretLocationProxy
	FireTrigger = CommonReloadResetTriggerProxy
	GetTargetFrom = Turret
	//No Location is dual barrel
	OperationalToggle = IsOperational
	FireDelay = 0.05
	ResourceStorage = BatteryStorage
	ResourcesUsed = 320
	Bullet = &/SW_SHOTS/turretturbolasermediumlaserredshot
	Recoil = 24
	Spread = [-5d, 5d]

}
ReloadProgressBarBase
{
	Type = ProgressBar
	OperationalToggle = SwitchWeaponCooldownTimer
	ShowProgressFor = CommonReloadTimer
	Invert = true
}
TurretBase
		{
			Type = TurretWeapon
			Location = [1, 1]
			Rotation = -90d
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = 0 // Uses separate common fire timer.
			FiringArc = 180d
			RotateSpeed = 21d
			FireThresholdAngle = 2d
			AIFirepowerRating = 1600
			//CanBeGivenExplicitTarget = true
			//TargetSearchesPerSecond = 4
			Emitter = BulletEmitterBase
			FirePermissionToggle = FirePermissionToggle
			HoldTargetAfterCancel = 0.05
			AutoTargetCrewSafetyDist = 8
			IgnoreSourceShipLOSChecks = false
			IgnoreSourceShipLowLOSChecks = true
			AllowFireWithBlockedLOS = false

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}
