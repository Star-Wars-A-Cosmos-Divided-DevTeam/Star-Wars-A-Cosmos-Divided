Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{	
	//IDs
	ID = SW.turbolaser_light_pd4

	//StringKeys
	NameKey = "Parts/TurbolaserLightPD4"
	IconNameKey = "Parts/TurbolaserLightPD4Icon"
	DescriptionKey = "Parts/TurbolaserLightPD4Desc"

	//Groups&Categories
	EditorGroups = ["WeaponsEnergy", "Defenses", "TechII"]
	TypeCategories = [defense, uses_power, is_crewed]
	
	//Resources&Size&Health
	Resources
	[
		[steel, 60] 
		[coil, 30] //
	]  //Cost = 8000
	Size = [2, 2]
	MaxHealth = 6000

	//Rects
	
	//Selections
	SelectionTypeID = "cannons"
	SelectionPriority = 1
	SelectionTypeByRotation = true

	//PartSpecific
	AIValueFactor = 1
	InitialPenetrationResistance = 5
	
	//ReceivableBuffs & ProhibitedBy
	ReceivableBuffs : ^/0/ReceivableBuffs []
	
	//Doors&Etc
	AllowedDoorLocations
	[
		[-1, 1]
		[2, 1]
        [1, 2]
        [0, 2]
	]	

	//Editor
	EditorIcon
	{
		Texture
		{
			File = "Flak Cannon.png"
			SampleMode = Linear
		}
		Size = [60, 60]
	}
	
	//Components	
	Components : ^/0/Components, /*&<turret04_graphics.rules>,*/ &<turbolaser04_green.rules>/Components
	{
		WeaponIsOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational, SwitchCooldownToggle]
			Mode = All
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 3
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			AvailableChoices = [-1, 1, 2]
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		FirePrefToggle
		{
			Type = UIToggle
			ToggleID = "fire_pref"
			Default = 1
		}
		FirePrefAttack
		{
			Type = ModeToggle
			Mode = FirePrefToggle
			OnModes = [0, 2]
		}
		FirePrefDefend
		{
			Type = ModeToggle
			Mode = FirePrefToggle
			OnModes = [1, 2]
		}
		AttackToggle
		{
			Type = MultiToggle
			Toggles = [AutoTargetToggle, FirePrefAttack]
			Mode = All
		}
		DefendToggle
		{
			Type = MultiToggle
			Toggles = [AutoTargetToggle, FirePrefDefend]
			Mode = All
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			ResupplyThreshold = 1
			DefaultPriority = &/PRIORITIES/Defense_Supply
			OperationalToggle = PowerToggle
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [1, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 2]
					}
					{
						File = "floor_33.png"
						Size = [2, 2]
					}
					{
						File = "floor_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"console on1.png"
							"console on2.png"
							"console on3.png"
						]
						Size = [2, 2]
						//Offset = [0, 0]//-0.67]
						AnimationInterval = 0.50
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "console off.png"
						Size = [2, 2]
						//Offset = [0, 0]//-0.67]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 2]
					}
					{
						File = "walls_33.png"
						Size = [2, 2]
					}
					{
						File = "walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [2, 2]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_66.png"
						Size = [2, 2]
					}
				]
			}
		}
		/*Graphics2
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [1, 1]
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof_windows.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_66.png"
						Size = [2, 2]
					}
				]
			}
		}*/


		Turret
		{
			Type = TurretWeapon
			Location = [1, 1]
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = IsOperational //WeaponIsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = .6
			FiringArc = 320d
			RotateSpeed = 90d
			FireThresholdAngle = 1d
			AIFirepowerRating = 1600
			CanBeGivenExplicitTarget = false
			Emitter = BulletEmitter
			TargetSearchesPerSecond = 4 // Default is 2.
			HoldTargetAfterCancel = .5
			TargetPathThickness = .2// &../BulletEmitter/Bullet/Components/Physics/Radius
			EstimateFirepowerToggle = AttackToggle
			AlwaysShowCoverage = true
			AllowDirectControl = false
			FirePermissionToggle = FireModeToggle
			AutoTargetCrewSafetyDist = 8
			IgnoreSourceShipLOSChecks = true
			IgnoreSourceShipLowLOSChecks = true

			AutoTargets
			[
				{
					TargetType = Bullets
					BulletTargetCategories = [missile, mine, bullet, ion_shot]
					Toggle = DefendToggle
				}
				{
					TargetType = ShipParts
					Toggle = AttackToggle
					Overridable = true
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = WeaponIsOperational
			ShowProgressFor = Turret
		}

		BulletEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			Location = [75/64, -23/64] //-23,-71
			OperationalToggle = IsOperational
			Bullet = &/SW_SHOTS/YellowSmallLaserPDShot
			// Spread = [-5d, 5d]
			ResourceStorage = BatteryStorage
			ResourcesUsed = 100
			Burst = 2 //3
			BurstDelay = .075
			FireDelay = .25
			UseResourcePerShotInBurst = true
		}
		BulletEmitter2 : &BulletEmitter
		{
			Location = [75/64, 23/64]
		}
		ChargeEffectBase
		{
			Type = TriggeredEffects
			ChainedTo = BulletEmitter
			Trigger = Turret
			AnchorMediaEffects = true
		
			MediaEffects
			[
				&/SW_SOUNDS/LaserReCharge
			]
		}

		FireEffect
		{
			Type = TriggeredEffects
			ChainedTo = BulletEmitter
			Trigger = BulletEmitter //BulletEmitterLeft
			AnchorMediaEffects = true
	
			MediaEffects
			[
				&/SW_SOUNDS/TinyDisrupterBlaster
				&/SW_PARTICLES/OrangeFlash
			]
		}
		FireEffect2 : &FireEffect
		{
			ChainedTo = BulletEmitter2
			Trigger = BulletEmitter2 //BulletEmitterRight
		}

		TurretGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			//Location = [0, 0]
			Rotation = 90d
			Floor
			{
				Layer = "roof_turrets"
				Offset = [0, -12/64]
				DamageLevels
				[
					{
						File = "Flak Cannon.png"
						NormalsFile = "Flak Cannon_normals.png"
						Size = [2, 2]
					}
				]
			}
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [0.55, 0.6]
			Rotation = 0d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.45, 0.6]
			Rotation = 0d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[0.55, 0.5]
				[1.45, 0.5]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 2]
				}
				{
					File = "batteries2.png"
					Size = [2, 2]
				}
				{
					File = "batteries3.png"
					Size = [2, 2]
				}
				{
					File = "batteries4.png"
					Size = [2, 2]
				}
				{
					File = "batteries5.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}
		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]
		}
	}

	//Stats
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4

		ROF = 2 / (&~/Part/Components/Turret/FireInterval)
		Range = &~/Part/Components/BulletEmitter/Bullet/Range
		Arc = deg(&~/Part/Components/Turret/FiringArc)
		TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
		ShotSpeed = &~/Part/Components/BulletEmitter/Bullet/Speed
		//ShotHP = &~/Part/Components/BulletEmitter/Bullet/Components/Targetable/Health
		PowerPerShot = (&~/Part/Components/BulletEmitter/ResourcesUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * 2 / (&~/Part/Components/Turret/FireInterval)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
	}
	
	StatsByCategory
	[
	//		&<light_turbolaser_red.rules>/LaserStats
	//		&<light_turbolaser_blue.rules>/LaserStats
	//		&<turbolaser04_green.rules>/LaserStats
		{
			NameKey = "StatCategories/PDLaserShot"
			Stats
			{
				DamagePerShot = &~/Part/Components/BulletEmitter/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage
				DamagePerSecond = (&DamagePerShot) * 2 / (&~/Part/Components/Turret/FireInterval)
				Damage = [&../DamagePerShot, &../DamagePerSecond]
//				ShotDamagePerShot = &~/Components/BulletEmitter/Bullet/Components/AntiBullet/HitBullet/HitEffects/0/Damage
//				ShotDamagePerSecond = (&ShotDamagePerShot) * 2 / (&~/Components/Turret/FireInterval)
//				ShotDamage = [&../ShotDamagePerShot, &../ShotDamagePerSecond]
			}
		}
	]
}
