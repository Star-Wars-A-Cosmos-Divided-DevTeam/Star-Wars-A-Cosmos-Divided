Type = Particles
Def
{
	EmitPerSecond = 0
	EmitPerOneShot = 0
	Initializers
	[
		{
			Type = LocationToWorldSpace
			DataOut = energy
			ValueType = Float
			Value = 1
			Name = "Convert location to world space."
			Enabled = true
			UpdateAfterInit = false
			LocationIn = location
			LocationOut = location
		}
		{
			Type = VelocityToWorldSpace
			LocationIn = location
			LocationOut = location
			Name = "Convert velocity to world space"
			Enabled = true
			UpdateAfterInit = false
			RotationIn = rot
			RotationOut = rot
			VelocityInOut = velocity
			VelocityIn = velocity
			VelocityOut = velocity
		}
		{
			Type = AddFrameOfReference
			VelocityIn = velocity
			VelocityOut = velocity
			Name = "Add frame of reference"
			Enabled = true
			VelocityInOut = velocity
			RotationIn = rot
			RotationOut = rot
			UpdateAfterInit = false
			DataOut = sprite_index
			ValueType = Int
			FromValue = 0
			ToValue = 6
		}
		{
			Type = ScaleToWorldSpace
			SpriteIndexIn = sprite_index
			UvRectOut = uv_rect
			TextureSize
			{
				X = 256
				Y = 512
			}
			SpriteSize
			{
				X = 128
				Y = 128
			}
			SpriteCount = 7
			SpritesPerRow = 2
			PixelOffset
			{
				X = 0
				Y = 0
			}
			Name = ""
			Enabled = true
			UpdateAfterInit = false
			DataOut = sprite_index
			ValueType = Int
			FromValue = 0
			ToValue = 6
			ScaleIn = base_scale
			ScaleOut = base_scale
		}
		{
			Type = SetRandom
			SpriteIndexIn = sprite_index
			UvRectOut = uv_rect
			TextureSize
			{
				X = 256
				Y = 512
			}
			SpriteSize
			{
				X = 128
				Y = 128
			}
			SpriteCount = 7
			SpritesPerRow = 2
			PixelOffset
			{
				X = 0
				Y = 0
			}
			Name = "Sprite Index"
			Enabled = true
			UpdateAfterInit = false
			DataOut = sprite_index
			ValueType = Int
			FromValue = 0
			ToValue = 6
		}
		{
			Type = UvSprites
			DataOut = rot
			ValueType = Angle
			FromValue = 0d
			ToValue = 360d
			Name = "Sprite UV Rect"
			Enabled = true
			UpdateAfterInit = false
			SpriteIndexIn = sprite_index
			UvRectOut = uv_rect
			TextureSize
			{
				X = 256
				Y = 512
			}
			SpriteSize
			{
				X = 128
				Y = 128
			}
			SpriteCount = 7
			SpritesPerRow = 2
			PixelOffset
			{
				X = 0
				Y = 0
			}
		}
		{
			Type = SetRandom
			DataOut = rot
			ValueType = Angle
			FromValue = 0d
			ToValue = 360d
			Name = "Rotation"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetRandom
			ColorOut = base_color
			HueRange
			{
				Min = 0
				Max = 0
			}
			SaturationRange
			{
				Min = 0
				Max = 0
			}
			ValueRange
			{
				Min = 0
				Max = 0.2
			}
			AlphaRange
			{
				Min = 0.2
				Max = 0.2
			}
			Name = "Rot Velocity"
			Enabled = true
			UpdateAfterInit = false
			DataOut = rot_vel
			ValueType = Angle
			FromValue = -90d
			ToValue = 90d
		}
		{
			Type = SetRandomHsvColor
			ColorOut = base_color
			HueRange
			{
				Min = 0
				Max = 0
			}
			SaturationRange
			{
				Min = 0
				Max = 0
			}
			ValueRange
			{
				Min = 0
				Max = 0.2
			}
			AlphaRange
			{
				Min = 0.2
				Max = 0.2
			}
			Name = "Random base color"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	Updaters
	[
		{
			Type = Lifetime
			EnergyInOut = energy
			Lifetime = 2
			Name = Lifetime
			Enabled = true
			UpdateAfterInit = false
			LifeInOut = life
		}
		{
			Type = Operator
			DataType = Vector2D
			AIn = location
			BIn = velocity
			ResultOut = location
			Operator = AddDt
			Name = "Apply velocity."
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Operator
			DataType = Angle
			AIn = rot
			BIn = rot_vel
			ResultOut = rot
			Operator = AddDt
			Name = "Apply rot velocity."
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = ColorRamp
			LerpIn = life
			ColorOut = color
			Invert = false
			Colors
			[
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 1
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0.49803922
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0
				}
			]
			Name = "Alpha ramp"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Operator
			DataType = Color
			AIn = color
			BIn = base_color
			ResultOut = color
			Operator = Multiply
			Name = "Multiply base color with alpha"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Lerp
			LerpIn = life
			DataOut = scale
			Invert = false
			ValueType = Float
			FromValue = 1
			ToValue = 1.75
			Name = "Scale lerp"
			Enabled = true
			UpdateAfterInit = true
		}
		{
			Type = Operator
			DataType = Float
			AIn = scale
			BIn = base_scale
			ResultOut = scale
			Operator = Multiply
			Name = "Apply base scale"
			Enabled = true
			UpdateAfterInit = true
		}
		{
			Type = ParticleLightNormal
			LocationIn = location
			LightNormalOut = light_normal
			Name = "Light normal"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	Renderer
	{
		Type = LitQuadRenderer
		LightNormalIn = light_normal
		DiffuseShader
		NormalsShader
		{
			File = ./Data/common_effects/particles/particle_normals_smoke.shader
		}
		LocationIn = location
		ScaleIn = scale
		RotationIn = rot
		ColorIn = color
		BaseSize
		{
			X = 1
			Y = 1
		}
		MaxScale = 1
		UVRect
		{
			X = 0
			Y = 0
			Width = 1
			Height = 1
		}
		Name = ""
		UvRectIn = uv_rect
	}
	Material
	{
		Shader
		{
			File = ./Data/common_effects/particles/particle_lit.shader
		}
		_normalsTexture
		{
			File = ./Data/common_effects/particles/smoke_normals.png
			MipLevels = max
		}
		Texture
		{
			File = "./Data/common_effects/particles/smoke.png"
			FixTransparentColors = false
			PreMultiplyByAlpha = false
			MipLevels = 8
			SampleMode = Linear
		}
		TargetBlendMode
		{
			SourceRgbFactor = SourceAlpha
			DestRgbFactor = InverseSourceAlpha
			RgbOperator = Add
			SourceAlphaFactor = InverseDestAlpha
			DestAlphaFactor = One
			AlphaOperator = Add
		}
		Color
		{
			Rf = 1
			Gf = 1
			Bf = 1
			Af = 1
		}
	}
	DeleteMode = Fast
	UpdatedEmittedParticles = false
	EnableMultithreading = false
	InitCapacity = 256
}
EmitterDef
{
	EmitPerSecond = 0
	EmitPerOneShot = 10
	PreInitializers
	[
		{
			Type = SetValue
			VelocityOut = velocity
			Speed
			{
				Min = 0
				Max = 1
			}
			Direction
			{
				Min = -90d
				Max = 90d
			}
			Name = "Initial location"
			Enabled = false
			UpdateAfterInit = false
			DataOut = location
			ValueType = Vector2D
			Value
			{
				X = -0.5
				Y = 0
			}
		}
		{
			Type = SetRandomVelocity
			VelocityOut = velocity
			Speed
			{
				Min = 1
				Max = 3
			}
			Direction
			{
				Min = -24.999998d
				Max = 24.999998d
			}
			Name = "Initial velocity"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetValue
			DataOut = base_scale
			ValueType = Float
			Value = 1
			Name = "Base scale"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	PostInitializers[]
	UpdatedEmittedParticles = false
}
Bucket = FlakShootSmoke
Delay = 0
IgnoreIntensity = false
Sharing = Global
MinIntensity = 0
IsFancy = true
DontEmitWhenOffScreen = true
DontEmitWhenOffScreenSizeInflate = 3
PenetratingBucket
UseCustomShapeForOffScreenCheck = false
MaxEmissionZoom = 3.4028235E+38
ScaleEmissionWithIntensity = false
UseRealTime = false
UnsharedRenderInWorldSpace = false
ScaleEmissionWithBeamLength = false
CaptureBackBuffer = false
IsSimple = false
Filter
{
	Ships = true
	OperationalHealth = true
	StructuralHealth = true
	OnlyPartCategories
	ExcludePartCategories
	Shields = true
	Bullets = true
	OnlyBulletCategories
	ExcludeBulletCategories
	IgnoreInvulnerability = true
	Self
	TargetedSelf
	Friendlies = true
	TargetedFriendlies
	Enemies = true
	TargetedEnemies
	Junk = true
	TargetedJunk
}
