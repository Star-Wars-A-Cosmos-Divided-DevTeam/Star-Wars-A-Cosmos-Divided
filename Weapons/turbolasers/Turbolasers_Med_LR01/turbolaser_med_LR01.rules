Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{	
    //IDs
	ID = SW.turbolaser_med_LR01

    //StringKeys
	NameKey = "Parts/TurbolaserMedLR01"
	IconNameKey = "Parts/TurbolaserMedLR01Icon"
	DescriptionKey = "Parts/TurbolaserMedLR01Desc"

    //Groups&Categories
	EditorGroups = ["WeaponsEnergy", "SWTechII"]
	TypeCategories = [weapon, uses_power, is_crewed]

    //Resources&Size&Health
	Resources
	[
		[steel, 64]
		[coil, 24] //
		[coil2, 4] //
	]  //Cost = 30000
	Size = [2, 2]
	MaxHealth = 14000

    //Rects

    //Selections
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "cannons"

    //PartSpecific
	AIValueFactor = 2
	InitialPenetrationResistance = 5

    //ReceivableBuffs&ProbitedBy
	ReceivableBuffs : ^/0/ReceivableBuffs []
	//ProhibitedBy : ^/0/ProhibitedBy [tall]

    //Doors&Etc
	AllowedDoorLocations
	[
		[-1, 1]
		[2, 1]
        [1, 2]
        [0, 2]
	]

    //Editor
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [29, 72]
	}


    //Components	
	Components : ^/0/Components, &<turret01_graphics.rules>
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 6
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		CommonReloadTimer
		{
			Type = Timer
			Duration = 2.1
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}
		CommonOnShootEffectTimer
		{
			Type = Timer
			Duration = 0.42
			AutoStart = true
			StartTrigger = CommonReloadResetTriggerProxy
		}
		CommonReloadResetTriggerProxy
		{
			Type = TriggerProxy
			ComponentID = CommonReloadResetTrigger
		}


		SwitchWeaponCooldownProgressBar
		{
			Type = ProgressBar
			OperationalToggle = SwitchWeaponCooldownTimer
			InvertOperationalToggle = true
			ShowProgressFor = SwitchWeaponCooldownTimer
			Invert = true
			LowColor = [16, 16, 16]
			HighColor = [255, 255, 255]
		}
		SwitchWeaponCooldownTimer
		{
			Type = Timer
			Duration = 6.3
			AutoStart = true
			Repeats = false
			StartsOn = 0
			StartTrigger = SwitchWeaponCooldownTrigger
		}
		SwitchWeaponCooldownTrigger
		{
			Type = ModeTrigger
			Mode = MunitionType
			TriggerInModes = [0, 1, 2]
		}

		MunitionType
		{
			Type = UIToggle
			ToggleID = "SW.munition_type"
			Default = 0
			AvailableChoices = [0, 1, 2]
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}
		RedMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 0
		}
		RedMunitionComponents
		{
			Type = ToggledComponents
			Toggle = RedMunitionToggle
			Components = &<turbolaser01_red.rules>/Components
		}
		BlueMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 1
		}
		BlueMunitionComponents
		{
			Type = ToggledComponents
			Toggle = BlueMunitionToggle
			Components = &<turbolaser01_blue.rules>/Components
		}
		GreenMunitionToggle
		{
			Type = ModeToggle
			Mode = MunitionType
			OnMode = 2
		}
		GreenMunitionComponents
		{
			Type = ToggledComponents
			Toggle = GreenMunitionToggle
			Components = &<turbolaser01_green.rules>/Components
		}
		
		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
		}
		BatteryStorageBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [64, 64, 0]
			HighColor = [250, 250, 0]
			FullColor = [255, 255, 0]
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [1, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor06[2,2]01.png"
						Size = [2, 2]
					}
					{
						File = "floor06[2,2]01_33.png"
						Size = [2, 2]
					}
					{
						File = "floor06[2,2]01_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/lights.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../Turbolasers_Light/console on1.png"
							"../Turbolasers_Light/console on2.png"
							"../Turbolasers_Light/console on3.png"
						]
						Size = [2, 2]
						//Offset = [0, 0]//-0.67]
						AnimationInterval = 0.50
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/console off.png"
						Size = [2, 2]
						//Offset = [0, 0]//-0.67]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/walls.png"
						Size = [2, 2]
					}
					{
						File = "../Turbolasers_Light/walls_33.png"
						Size = [2, 2]
					}
					{
						File = "../Turbolasers_Light/walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof_turret_base02[2,2]01.png"
						NormalsFile = "roof_turret_base02[2,2]01_normals.png"
						Size = [2, 2]
					}
/*
					{
						File = "roof_turret_base02[2,2]01_33.png"
						NormalsFile = "roof_turret_base02[2,2]01_normals_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_turret_base02[2,2]01_66.png"
						NormalsFile = "roof_turret_base02[2,2]01_normals_66.png"
						Size = [2, 2]
					}
*/
				]
			}
		}


		FirePermissionToggle
		{
			Type = MultiToggle
			Toggles = [CommonReloadTimer, SwitchWeaponCooldownTimer, FireModeToggle]
			Mode = All
		}

		Turret : &~/TurretBase
		{

		}

		BulletEmitterBase : &~/BulletEmitterBase
		{
			FireTrigger 
		}
		CommonReloadResetTrigger
		{
			Type = MultiTrigger
			Triggers = [Turret]
		}

		TurretLocationProxy
		{
			Type = ChainableProxy
			ComponentID = Turret
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [0.55, 0.6]
			//Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.45, 0.6]
			//Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[0.55, 0.5]
				[1.45, 0.5]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "../Turbolasers_Light/batteries1.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries2.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries3.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries4.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries5.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]
			
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "../Turbolasers_Light/blueprints.png"
			Size = [2, 2]
		}

	}

   //Stats
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&~/TurretStats/Stats/PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4

	}
	StatsByCategory
	[
		&~/TurretStats
		&<turbolaser01_red.rules>/LaserStats
		&<turbolaser01_blue.rules>/LaserStats
		&<turbolaser01_green.rules>/LaserStats
	]
}
TurretStats
{
	NameKey = "StatCategories/Turret"
	Stats
	{
		Barrels = 1
		ReloadTime = &~/Part/Components/CommonReloadTimer/Duration
		Salvo = [&../Barrels, &../ReloadTime]
		ROF = (&Barrels) / (&~/Part/Components/CommonReloadTimer/Duration)
		Range = &~/BulletEmitterBase/Bullet/Range
		Arc = deg(&~/TurretBase/FiringArc)
		TurretSpeed = deg(&~/TurretBase/RotateSpeed)
		PowerPerShot = (&~/BulletEmitterBase/ResourcesUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * (&ROF)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]

	}
}
BulletEmitterBase
{
	Type = BulletEmitter
	ChainedTo = Turret
	FireTrigger = Turret
	GetTargetFrom = Turret
	Location = [3.36, 0] //0,188
	OperationalToggle = IsOperational
	FireDelay = 0.05
	Bullet = &/SW_SHOTS/greenlongrangelasershot
	ResourceStorage = BatteryStorage
	ResourcesUsed = 100
}
ReloadProgressBarBase
{
	Type = ProgressBar
	OperationalToggle = SwitchWeaponCooldownTimer
	ShowProgressFor = CommonReloadTimer
	Invert = true
}

TurretBase
{
		Type = TurretWeapon
		Location = [1, 1]
		Rotation = -90d// Relative to unrotated part.
		OperationalToggle = IsOperational
		AutoFireToggle = AutoFireToggle
		FireInterval = .6
		FiringArc = 180d
		RotateSpeed = 15d
		FireThresholdAngle = 1d
		//TargetSearchTriesPerFrame = 1
		AIFirepowerRating = 1600
		FirePermissionToggle = FirePermissionToggle
		Emitter = BulletEmitterBase
		IgnoreSourceShipLOSChecks = false
		IgnoreSourceShipLowLOSChecks = true
		AllowFireWithBlockedLOS = false

		AutoTargets
		[
			{
				TargetType = ShipParts
				Toggle = AutoTargetToggle
			}
		]

		BlueprintArcSprite
		{
			Texture = &/INDICATORS/WeaponArc
			Size = [0, 1.5]
			Color = [255, 0, 0, 63]
		}
		BlueprintArcRadius = 10
		BlueprintArcSpriteSegments = 64

		CoverageSectorArc
		{
			Texture = &/INDICATORS/VerticalGradient
			VertexColor = [255, 255, 255, 51]
			QuadCount = 64
		}
}

