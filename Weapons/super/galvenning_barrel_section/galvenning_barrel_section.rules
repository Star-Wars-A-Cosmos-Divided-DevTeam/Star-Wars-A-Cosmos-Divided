/* ----------------------------------------------------------------------------

Introduction: SW:ACD Galvenning Barrel Section

Author : Lafiel

Description:
Quick and dirty fast prototyping version, 

based on Galvenning Barrel Section mounted on Onager-class

Versions:

 o 1.0 Cosmoteer 0.15.14


---------------------------------------------------------------------------- */

Part : /BASE_PART_TERRAN
{
	NameKey = "Parts/GalvenningBarrelSection"
	IconNameKey = "Parts/GalvenningBarrelSectionIcon"
	ID = SW.galvenning_barrel_section
	DescriptionKey = "Parts/GalvenningBarrelSectionDesc"
	EditorGroup = "SWTechIII"
	Resources
	[
		[steel, 8] //
	]  //Cost = 20000
	Size = [6, 2]
	PhysicalRect = [0, 1, 6, 1]
	SaveRect = &PhysicalRect
	Density = 2
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 12000

	ExternalWalls = [None]
	InternalWalls = [All]
	IsWalled = false

	TypeCategories = [uses_power, galvenning_ring,siege_weapon]
	RequiresCategories = [siege_weapon]

	ReceivableBuffs : ^/0/ReceivableBuffs [Railgun, RailgunOperation,SWTurretPerimeter,SWFireCMDBuff]

	AllowedDoorLocations
	[
		[-1, 1]
		[6, 1]
		[0, 2]
		[5, 2]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [92, 31]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle,{Toggle=PerimeterToggle; Invert=true}]
			Mode = All
		}
		PerimeterToggle
		{
			Type = BuffToggle
			BuffType = SWTurretPerimeter
			//MinBuffValue = 1
			//MaxBuffValue = 2
			//Invert = true
		}
		NotPerimeterToggle
		{
			Type = MultiToggle
			Toggles
			[
				PerimeterToggle
			]
			Mode = All
			Invert = true
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 8000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = TypedResourceGridConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 800
			OperationalToggle = PowerToggle
		}

//-----------------------------------------------------------------------------
		BuffOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, RailgunOperationBuffToggle]
			Mode = All
		}
		RailgunBuffToggle
		{
			Type = BuffToggle
			BuffType = Railgun
		}

		RailgunOperationBuffToggle
		{
			Type = BuffToggle
			BuffType = RailgunOperation
		}

		RailgunBuffProvider1
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = { BaseValue=5%; BuffType=Railgun; BuffMode=Add; }
			BuffArea = [0, 3, 6, 1]
			//OperationalToggle = RailgunBuffToggle
			ChainsFromBuffType = Railgun
			Criteria
			{
				Category = siege_weapon
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}
		RailgunBuffProvider2
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = { BaseValue=10%; BuffType=Railgun; BuffMode=Add; }
			BuffArea = [0, 5, 6, 1]
			//OperationalToggle = RailgunBuffToggle
			ChainsFromBuffType = Railgun
			Criteria
			{
				Category = siege_weapon
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}
		RailgunBuffProvider3
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = { BaseValue=15%; BuffType=Railgun; BuffMode=Add; }
			BuffArea = [0, 7, 6, 1]
			//OperationalToggle = RailgunBuffToggle
			ChainsFromBuffType = Railgun
			Criteria
			{
				Category = siege_weapon
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}
		RailgunBuffProvider4
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = { BaseValue=20%; BuffType=Railgun; BuffMode=Add; }
			BuffArea = [0, 9, 6, 1]
			//OperationalToggle = RailgunBuffToggle
			ChainsFromBuffType = Railgun
			Criteria
			{
				Category = siege_weapon
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}

/*
		RailgunBuffProvider5
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = { BaseValue=20%; BuffType=Railgun; BuffMode=Add; }
			BuffArea = [0, 3, 6, 1]
			OperationalToggle = RailgunBuffToggle
			ChainsFromBuffType = Railgun
			Criteria
			{
				Category = galvenning_ring
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}
		RailgunBuffProvider6
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = { BaseValue=15%; BuffType=Railgun; BuffMode=Add; }
			BuffArea = [0, 5, 6, 1]
			OperationalToggle = RailgunBuffToggle
			ChainsFromBuffType = Railgun
			Criteria
			{
				Category = galvenning_ring
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}
		RailgunBuffProvider7
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = { BaseValue=10%; BuffType=Railgun; BuffMode=Add; }
			BuffArea = [0, 7, 6, 1]
			OperationalToggle = RailgunBuffToggle
			ChainsFromBuffType = Railgun
			Criteria
			{
				Category = galvenning_ring
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}
		RailgunBuffProvider8
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = { BaseValue=5%; BuffType=Railgun; BuffMode=Add; }
			BuffArea = [0, 9, 6, 1]
			OperationalToggle = RailgunBuffToggle
			ChainsFromBuffType = Railgun
			Criteria
			{
				Category = galvenning_ring
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}
*/
		RailgunOperationBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = RailgunOperation
			BuffArea = [0, 2, 6, 8]
			//OperationalToggle = BuffOperational
			ChainsFromBuffType = RailgunOperation
			Criteria
			{
				Category = siege_weapon
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}
		RailgunReverseOperationBuffProvider //exist signal
		{
			Type = AreaBuffProvider
			BuffType = RailgunReverseOperation
			BuffArea = [0, 2, 6, 8]
			Criteria
			{
				Category = siege_weapon
				Rot = 0
				//Left = 0
				//Right = 6
				//Bottom = 0
			}
		}
//-----------------------------------------------------------------------------
		FireCmdBuffToggle
		{
			Type = BuffToggle
			BuffType = SWFireCMDBuff
		}
		FireCmdInstantDrainTrigger
		{
			Type = ToggleTrigger
			Toggle = FireCmdBuffToggle
			TriggerWhenOn = false
			TriggerWhenOff = true
			OperationalToggle = IsOperational
			//InvertOperationalToggle = true
		}
		FireCmdInstantDrain
		{
			Type = AmmoChange
			Trigger = FireCmdInstantDrainTrigger
			ResourceStorage = BatteryStorage
			Amount = -1000
		}
//-----------------------------------------------------------------------------

		Graphics
		{
			Type = Graphics
			Location = [3, 1]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "arm_cylinder[4,1].png"
						Size = [6, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "arm_cylinder[4,1].png"
						Size = [6, 2]
					}
				]
			}
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [3, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			AmmoLevels
			[
				{
					File = "../../Weapons/FixedLightLaserCannon/batteries1.png"
					Size = [1, 1]
				}
				{
					File = "../../Weapons/FixedLightLaserCannon/batteries2.png"
					Size = [1, 1]
				}
				{
					File = "../../Weapons/FixedLightLaserCannon/batteries3.png"
					Size = [1, 1]
				}
				{
					File = "../../Weapons/FixedLightLaserCannon/batteries4.png"
					Size = [1, 1]
				}
				{
					File = "../../Weapons/FixedLightLaserCannon/batteries5.png"
					Size = [1, 1]
				}
				{
					File = "../../Weapons/FixedLightLaserCannon/batteries6.png"
					Size = [1, 1]
				}
				{
					File = "../../Weapons/FixedLightLaserCannon/batteries7.png"
					Size = [1, 1]
				}
				{
					File = "../../Weapons/FixedLightLaserCannon/batteries8.png"
					Size = [1, 1]
				}
			]
		}



//-----------------------------------------------------------------------------
		Indicators
		{
			Type = IndicatorSprites
			Location = [3, 1]
			Layer = "indicators"
			Indicators
			[
				// Turret Perimeter
				{
					Toggle = NotPerimeterToggle
					ShowInBuildMode = true
					AtlasSprite
					{
						File = &/INDICATORS/SWMinimumDistance
						Size = [2, 2]
					}
				}
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints-arm_cylinder[4,1].png"
			Size = [6, 2]
		}
		BlueprintsArrow
		{
			Type = BlueprintSprite
			File = "../blueprints_arrow_blue_large.png"
			Size = [1, 1]
		}
	}

/*
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = &../StatsByCategory/0/Stats/PowerPerSecond
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/MedGreenLasershot"
			Stats
			{
				DamagePerShot = &~/Part/Components/WeaponEmitter/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage/BaseValue
				DamagePerSecond = (&DamagePerShot) * (&ROF)
				Damage = [&../DamagePerShot, &../DamagePerSecond]
				Penetration = &~/Part/Components/WeaponEmitter/Bullet/Components/Hit/Penetration
				FireChance = (&~/Part/Components/WeaponEmitter/Bullet/Components/Hit/PenetratingOperational/HitEffects/1/FireChance) * 100
				ROF = 1 / (&~/Part/Components/Turret/FireInterval)
				Range = &~/Part/Components/WeaponEmitter/Bullet/Range/BaseValue
				Arc = deg(&~/Part/Components/Turret/FiringArc)
				//Spread = deg(&~/Part/Components/WeaponEmitter/Spread/1)
				TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
				ShotSpeed = &~/Part/Components/WeaponEmitter/Bullet/Speed
//				ShotHP = &~/Part/Components/WeaponEmitter/Bullet/Components/Targetable/Health
				PowerPerShot = (&~/Part/Components/WeaponEmitter/ResourcesUsed) / 1000
				PowerPerSecond = (&PowerPerShot) * (&ROF)
				ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
			}
		}
	]

*/

}
