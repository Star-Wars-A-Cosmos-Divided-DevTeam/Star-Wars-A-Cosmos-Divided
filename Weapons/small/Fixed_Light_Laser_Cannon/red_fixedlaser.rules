Components
	{
		ReloadProgressBar : &<fixedlaser.rules>/ReloadProgressBarBase
		{
			LowColor = [64, 0, 0]
			HighColor = [255, 0, 0]
		}

		BulletEmitter : &<fixedlaser.rules>/BulletEmitterBase
		{
			Bullet = &/SW_SHOTS/redsmalllasershot
		}

		FireEffect : &<fixedlaser.rules>/FireEffectBase
		{
			MediaEffects
			[
				&/SW_PARTICLES/SmallRedLaserShoot		
					
				&/SW_SOUNDS/TIELaserFire

			]
		}
		LightGraphics
		{
			Type = Graphics
			OperationalToggle = CommonOnShootEffectTimer
			InvertOperationalToggle = true
			ChainedTo = BulletEmitter
			//Location = [0, 0]

			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = &<fixedlaser.rules>/OperationalRoofLightingBase/Size
						Z = &<fixedlaser.rules>/OperationalRoofLightingBase/Z
						VertexColor = [255, 16, 16]
					}
				]
			}
		}
	}
LaserStats
{
	NameKey = "StatCategories/SmallRedLasershot"
	Stats
	{
		ShieldDamagePerShot = &~/Components/BulletEmitter/Bullet/Components/Hit/HitShield/HitEffects/0/Damage
		ShieldDamagePerSecond = (&ShieldDamagePerShot) * (&<fixedlaser.rules>/TurretStats/Stats/ROF)
		ShieldDamage = [&../ShieldDamagePerShot, &../ShieldDamagePerSecond]
		DamagePerShot = &~/Components/BulletEmitter/Bullet/Components/Hit/HitOperational/HitEffects/0/Damage
		DamagePerSecond = (&DamagePerShot) * (&<fixedlaser.rules>/TurretStats/Stats/ROF)
		Damage = [&../DamagePerShot, &../DamagePerSecond]
		//ShotSpeed = &~/Components/BulletEmitter/Bullet/Speed
		//ShotHP = &~/Components/BulletEmitterLeft/Bullet/Components/Targetable/Health
	
	}
}
