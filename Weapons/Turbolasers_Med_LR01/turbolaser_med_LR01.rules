/* ----------------------------------------------------------------------------

Introduction: SW:ACD 0.3.7

Author : Lafiel

Description:
Currently prototyping. Everything is temporary.


Versions:

 o 1.0 Cosmoteer 0.15.14

---------------------------------------------------------------------------- */ 
Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{	
	ID = SW.turbolaser_med_LR01
	NameKey = "Parts/TurbolaserMedLR01"
	IconNameKey = "Parts/TurbolaserMedLR01Icon"
	DescriptionKey = "Parts/TurbolaserMedLR01Desc"
	EditorGroups = ["WeaponsEnergy", "TechII"]
	Resources
	[
		[steel, 8] //
	]  //Cost = 30000
	AIValueFactor = 1

	TypeCategories = [weapon, uses_power, uses_laser_parts, is_crewed]
	Size = [2, 2]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "cannons"
	MaxHealth = 8000
	InitialPenetrationResistance = 5
	PenetrationRectType = Normal
	AllowedDoorLocations
	[
		[-1, 1]
		[2, 1]
                [1, 2]
                [0, 2]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [29, 72]
	}
	
	Components : ^/0/Components, &<turbolaser01_green.rules>/Components, &<turret01_graphics.rules>
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

/*
		LightTurbolaserType
		{
			Type = UIToggle
			ToggleID = "SW.lightturbolaser_type"
			Default = 0
			AlwaysAllowInBuildMode = true
			ToggledOnChoices = [0, 1, 2]
		}

		LightTurbolaserRedToggle
		{
			Type = ModeToggle
			Mode = LightTurbolaserType
			OnMode = 0
		}

		LightTurbolaserRedComponents
		{
			Type = ToggledComponents
			Toggle = LightTurbolaserRedToggle
			IncludeInBlueprints = true
			Components = &<light_turbolaser_red.rules>/Components
		}

		LightTurbolaserBlueToggle
		{
			Type = ModeToggle
			Mode = LightTurbolaserType
			OnMode = 1
		}

		LightTurbolaserBlueComponents
		{
			Type = ToggledComponents
			Toggle = LightTurbolaserBlueToggle
			IncludeInBlueprints = true
			Components = &<light_turbolaser_blue.rules>/Components
		}

		LightTurbolaserGreenToggle
		{
			Type = ModeToggle
			Mode = LightTurbolaserType
			OnMode = 2
		}

		LightTurbolaserGreenComponents
		{
			Type = ToggledComponents
			Toggle = LightTurbolaserGreenToggle
			IncludeInBlueprints = true
			Components = &<light_turbolaser_green.rules>/Components
		}
*/
		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [1, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "../floor06[2,2]01.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_33.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/lights.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../Turbolasers_Light/console on1.png"
							"../Turbolasers_Light/console on2.png"
							"../Turbolasers_Light/console on3.png"
						]
						Size = [2, 2]
						//Offset = [0, 0]//-0.67]
						AnimationInterval = 0.50
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/console off.png"
						Size = [2, 2]
						//Offset = [0, 0]//-0.67]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/walls.png"
						Size = [2, 2]
					}
					{
						File = "../Turbolasers_Light/walls_33.png"
						Size = [2, 2]
					}
					{
						File = "../Turbolasers_Light/walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "../roof_turret_base02[2,2]01.png"
						Size = [2, 2]
					}
/*
					{
						File = "../roof_turret_base02[2,2]01_33.png"
						Size = [2, 2]
					}
					{
						File = "../roof_turret_base02[2,2]01_66.png"
						Size = [2, 2]
					}
*/
				]
			}
		}

		
		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
		}

		BatteryConsumer
		{
			Type = TypedResourceGridConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [0.55, 0.6]
			Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.45, 0.6]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[0.55, 0.5]
				[1.45, 0.5]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "../Turbolasers_Light/batteries1.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries2.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries3.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries4.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries5.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]
			
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [2, 2]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [2, 2]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [2, 2]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "../Turbolasers_Light/blueprints.png"
			Size = [2, 2]
		}

/*
		BlueprintsRed
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]

			ShowOnlyInToggleMode
			{
				ToggleID = SW.lightturbolaser_type
				Mode = 0
			}
		}

		BlueprintsBlue
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]

			ShowOnlyInToggleMode
			{
				ToggleID = SW.lightturbolaser_type
				Mode = 1
			}
		}
		
		BlueprintsGreen
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]
			ShowOnlyInToggleMode
			{
				ToggleID = SW.lightturbolaser_type
				Mode = 2
			}
		}
*/

	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4

		ROF = 2 / (&<turbolaser01_green.rules>/Components/Turret/FireInterval)
		Range = &<turbolaser01_green.rules>/Components/BulletEmitter/Bullet/Range
		Arc = deg(&<turbolaser01_green.rules>/Components/Turret/FiringArc)
		TurretSpeed = deg(&<turbolaser01_green.rules>/Components/Turret/RotateSpeed)
		ShotSpeed = &<turbolaser01_green.rules>/Components/BulletEmitter/Bullet/Speed
		ShotHP = &<turbolaser01_green.rules>/Components/BulletEmitter/Bullet/Components/Targetable/Health
		PowerPerShot = (&<turbolaser01_green.rules>/Components/BulletEmitter/ResourcesUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * 2 / (&<turbolaser01_green.rules>/Components/Turret/FireInterval)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
	}
	StatsByCategory
	[
//		&<light_turbolaser_red.rules>/LaserStats
//		&<light_turbolaser_blue.rules>/LaserStats
		&<turbolaser01_green.rules>/LaserStats
	]
}