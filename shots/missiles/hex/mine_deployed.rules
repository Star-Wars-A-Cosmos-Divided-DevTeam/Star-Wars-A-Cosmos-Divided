ID = "cosmoteer.mine_deployed"
Range = 0
IdealRange = 0
Speed = 0
RandomRotation = true

Components
{
	Physics
	{
		Type = CirclePhysics
		Radius = .3
		Density = 2
		LinearDamping = .5
		AngularDamping = 1
		CollidesWithBullets = true
		FrameOfReferenceDuration = 0
	}

	Repulsion
	{
		Type = ProximityAcceleration
		Range = 22.5
		Acceleration = -10
		AccelerateTowardsShips = false
		AccelerateTowardsBullets = true
		AccelerateTowardsBulletCategories = [mine]
		AccelerateTowardsFriendlies = true
		AccelerateTowardsEnemies = true
	}

	DeathByEnemyProximity
	{
		Type = DeathByEnemyProximity
		Interval = .1
		Range = 20
		DetectsShips = true
		DetectsBullets = false
		StartDelay = .5

		OnDeath
		{
			HitEffects
			[
				{
					Type = SpawnBullets
					Bullet = &<mine_shrapnel.rules>
					Count = 16
					Distance = .6
					Spread = [-15d, 15d]
					InheritVelocity = true
				}
			]

			MediaEffects
			[
				&<../missile_he/particles/missile_he_hit.rules>
				&<../missile_he/particles/missile_he_flash.rules>
				&<particles/mine_range_ring.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "../missile_he/missile_he_hit.wav"
					Volume = .75
					SpeedVariation = .4
				}

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "alarm.wav"
					Volume = 1
					SpeedVariation = 0
				}

				: /BASE_SHAKE
				{
					ShakeAmount = .1
					Duration = .75
				}
			]
		}
	}

	DeathByLifetime
	{
		Type = DeathByLifetime
		Lifetime = 60

		OnDeath
		{
			MediaEffects = &../../Hit/HitOperational/MediaEffects
		}
	}

	ArmingSprite
	{
		Type = AnimatedSprite
		RenderBucket = BulletMiddle1
		EndTime = &~/Components/DeathByEnemyProximity/StartDelay
		Animation
		{
			AtlasSprite
			{
				Texture
				{
					File = "mine_arming.png"
					MipLevels = max
				}
				Size = [2, 2]
			}
			FrameCount = 8
			FrameSize = [128, 128]
			FramesPerRow = 8
			FramesPerSecond = 20
			WrapMode = Clamp
		}
		NormalsTexture
		{
			File = "mine_arming_normals.png"
			MipLevels = max
		}
	}

	LightsSprite
	{
		Type = Sprite
		RenderBucket = BulletUpper2
		Z = .25
		LerpScaleFrom = [0, 0]
		LerpTime = &~/Components/DeathByEnemyProximity/StartDelay
		Spin = 210d
		IsLight = true
		Sprite
		{
			Texture
			{
				File = "mine_lights.png"
				MipLevels = max
				SampleMode = Linear
			}
			Size = [15/4, 15]
			VertexColor = [255, 0, 0]
			Shader = "./Data/common_effects/fancy_light.shader"
			TargetBlendMode = Add
			_litReflectiveStrength = 10
			_litAdditiveStrength = 0
			_unlitAdditiveStrength = .3
		}
	}

	ArmedLightsSmallSprite
	{
		Type = AnimatedSprite
		RenderBucket = BulletUpper1
		StartTime = &~/Components/DeathByEnemyProximity/StartDelay
		Animation
		{
			AtlasSprite
			{
				Texture
				{
					File = "mine_small_lights.png"
					MipLevels = max
				}
				Size = [2, 2]
				TargetBlendMode = Add
			}
			FrameCount = 6
			FrameSize = [128, 128]
			FramesPerRow = 6
			FramesPerSecond = 7
		}
	}

	ArmedSprite
	{
		Type = Sprite
		RenderBucket = BulletMiddle1
		IsLit = true
		StartTime = &~/Components/DeathByEnemyProximity/StartDelay
		Sprite
		{
			Texture
			{
				File = "mine_armed.png"
				MipLevels = max
			}
			Size = [2, 2]
		}

		NormalsTexture
		{
			File = "mine_armed_normals.png"
			MipLevels = max
		}
	}
	ArmedRadarSprite
	{
		Type = Sprite
		RenderBucket = BulletUpper1
		IsLit = true
		Spin = 210d
		Sprite
		{
			Texture
			{
				File = "mine_radar.png"
				MipLevels = max
			}
			Size = [1, 1]
		}

		NormalsTexture
		{
			File = "mine_radar_normals.png"
			MipLevels = max
		}
	}

	Targetable
	{
		Type = Targetable
		Health = 3200
		TargetCategory = "mine"
		OnDeath = &~/Components/Hit/HitOperational
	}

	Hit
	{
		Type = SimpleHit
		ShieldCollisions = { Shields=false; }

		HitShield {}

		HitOperational
		{
			HitEffects = &~/Components/DeathByEnemyProximity/OnDeath/HitEffects

			MediaEffects
			[
				&<../missile_he/particles/missile_he_hit.rules>
				&<../missile_he/particles/missile_he_flash.rules>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "../missile_he/missile_he_hit.wav"
					Volume = .75
					SpeedVariation = .4
				}

				: /BASE_SHAKE
				{
					ShakeAmount = .1
					Duration = .75
				}
			]
		}

		HitStructural = &HitOperational

		HitFriendly
		{
			MediaEffects = &../HitOperational/MediaEffects
		}
	}
}