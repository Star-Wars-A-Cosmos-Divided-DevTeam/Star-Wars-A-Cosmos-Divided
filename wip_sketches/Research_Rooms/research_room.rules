Part : /BASE_PART_TERRAN
{
	NameKey = "Parts/ResearchRoom"
	IconNameKey = "Parts/ResearchRoomIcon"
	ID = SW.research_room
	EditorGroup = "SWTechIII"
	DescriptionKey = "Parts/ResearchRoomDesc"
	Resources
	[
		[steel, 8] //
	]  //Cost = 60000
	Size = [5, 3]
	SelectionPriority = 0
	SelectionTypeByRotation = true
	SelectionTypeID = "quarters"
	MaxHealth = 20000
	InitialPenetrationResistance = 1
	TypeCategories = [research_lab,uses_power,is_crewed]
	RequiresCategories = [bridge2]
	AllowedDoorLocations
	[
		[2, 3]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [92, 55]
	}
	Components : ^/0/Components
	{
		Blueprints
		{
			File = "blueprints.png"
			Size = [5, 3]
			Type = BlueprintSprite
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles
			[
				BatteryStorage
				PowerToggle
				PartCrew
			]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 2000
		}
		BatteryConsumer
		{
			Type = TypedResourceGridConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Utility_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle

			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		PowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = IsOperational
			FromStorage = BatteryStorage
			FromQuantity = 1000
			Interval = 60// Drains 1 power every minute.
		}
		CrewLocation
		{
			Type = CrewLocation
			Location = [2.5, 2.7]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 1
			DefaultPriority = &/PRIORITIES/Utility_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				&../../CrewLocation/Location
			]
			CrewLocations
			[
				CrewLocation
			]
		}
		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [2.5, 1.5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [5, 3]
					}
					{
						File = "floor_33.png"
						Size = [5, 3]
					}
					{
						File = "floor_66.png"
						Size = [5, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [1, 1]
						Offset = [0, 1];
						AnimationInterval = 0.125
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [1, 1]
						Offset = [0, 1];
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../common_bitmaps/lights/lights-w[3,3].png"
						Size = [5, 3]
					}
				]
			}
		}

//not adjusted
		WallsGraphics //corners
		{
			Type = Graphics
			Location = [2.5, 1.5]
			Floor
			{
				Layer = "walls"
				Offset = [-1.5, -3.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall02.png"
						UVRotation = 1
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_33.png"
						UVRotation = 1
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_66.png"
						UVRotation = 1
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				Offset = [1.5, -3.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall02.png"
						UVRotation = 2
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_33.png"
						UVRotation = 2
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_66.png"
						UVRotation = 2
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "walls"
				Offset = [-1.5, 3.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall02.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_33.png"
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofWindows = &NonOperationalRoofWindows
			NonOperationalRoofWindows
			{
				Layer = "walls"
				Offset = [1.5, 3.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall02.png"
						UVRotation = 3
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_33.png"
						UVRotation = 3
						Size = [1, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall02_66.png"
						UVRotation = 3
						Size = [1, 1]
					}
				]
			}
		}
		WallsGraphics2 //edge
		{
			Type = Graphics
			Location = [2.5, 1.5]
			Floor
			{
				Layer = "walls"
				Offset = [0, -3.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall04.png"
						Size = [6, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_33.png"
						Size = [6, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_66.png"
						Size = [6, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				Offset = [0, 3.5]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall04.png"
						UVRotation = 2
						Size = [6, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_33.png"
						UVRotation = 2
						Size = [6, 1]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_66.png"
						UVRotation = 2
						Size = [6, 1]
					}
				]
			}
			Roof
			{
				Layer = "walls"
				Offset = [-1.5, 0]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall04.png"
						UVRotation = 3
						Size = [1, 2]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_33.png"
						UVRotation = 3
						Size = [1, 2]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_66.png"
						UVRotation = 3
						Size = [1, 2]
					}
				]
			}
			OperationalRoofWindows = &NonOperationalRoofWindows
			NonOperationalRoofWindows
			{
				Layer = "walls"
				Offset = [1.5, 0]
				DamageLevels
				[
					{
						File = "./Data/ships/terran/Walls/wall04.png"
						UVRotation = 1
						Size = [1, 2]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_33.png"
						UVRotation = 1
						Size = [1, 2]
					}
					{
						File = "./Data/ships/terran/Walls/wall04_66.png"
						UVRotation = 1
						Size = [1, 2]
					}
				]
			}
		}
//-----------------------------------------------------------------------------

		BatterySprites
		{
			Type = ResourceSprites
			Location = [2.5, 2.45]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			AmmoLevels
			[
				{
					File = "./Data/ships/terran/laser_blaster_small/batteries1.png"
					Size = [1, 2]
				}
				{
					File = "./Data/ships/terran/laser_blaster_small/batteries2.png"
					Size = [1, 2]
				}
			]
		}
		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational
			Location = [2.5, 1.5]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}
		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [2.5, 2.5]
		}
		OperationSoundLoop
		{
			Type = ContinuousEffects
			Location = [2.5, 2.5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "./Data/ships/terran/control_room_small/operating.wav"
					Volume = 0.15
					MaxConcurrentVolume = 0.3
					Speed = 0.75
					MaxConcurrent = 1
				}
			]
		}
		Indicators
		{
			Type = IndicatorSprites
			Location = [2.5, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1.5, 1.5]
					}
				}
				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1.5, 1.5]
					}
				}
			]
		}
	}
	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerUsageContinuousMinutes = (&~/Part/Components/PowerDrain/FromQuantity) / (&~/Part/Components/PowerDrain/Interval) / 1000
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = &PowerUsageContinuousMinutes
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}
}
