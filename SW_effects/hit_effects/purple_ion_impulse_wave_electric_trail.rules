Type = Particles
Def
{
	EmitPerSecond = 0
	EmitPerOneShot = 0
	Initializers
	[
		{
			Type = LocationToWorldSpace
			DataOut = rot
			ValueType = Angle
			Value = 1
			Name = ""
			Enabled = true
			UpdateAfterInit = false
			LocationIn = location
			LocationOut = location
			FromValue = 0d
			ToValue = 360d
		}
		{
			Type = VelocityToWorldSpace
			LocationIn = location
			LocationOut = location
			Name = ""
			Enabled = true
			UpdateAfterInit = false
			RotationIn = rot
			RotationOut = rot
			DataOut = rot
			ValueType = Angle
			FromValue = 0d
			ToValue = 360d
			VelocityInOut = velocity
			VelocityIn = velocity
			VelocityOut = velocity
		}
		{
			Type = SetRandom
			Name = "Random Rotation"
			VelocityInOut = velocity
			Enabled = true
			UpdateAfterInit = false
			DataOut = rot
			ValueType = Angle
			FromValue = 0d
			ToValue = 360d
		}
		{
			Type = InheritVelocity
			LocationOut = extra_velocity
			Circle
			{
				Center
				{
					X = 0
					Y = 0
				}
				Radius = 10
			}
			Perimeter = false
			Name = "Inherit velocity"
			Enabled = true
			UpdateAfterInit = false
			VelocityInOut = velocity
		}
		{
			Type = SetRandomCircle
			DataType = Vector2
			AIn = velocity
			BIn = extra_velocity
			ResultOut = velocity
			Operator = Add
			Name = "Random extra velocity"
			Enabled = true
			UpdateAfterInit = false
			LocationOut = extra_velocity
			Circle
			{
				Center
				{
					X = 0
					Y = 0
				}
				Radius = 5
			}
			Perimeter = false
		}
		{
			Type = Operator
			BarrierIDOut = barrier
			Name = "Add extra velocity"
			Enabled = true
			UpdateAfterInit = false
			DataType = Vector2
			AIn = velocity
			BIn = extra_velocity
			ResultOut = velocity
			Operator = Add
		}
		{
			Type = SetBulletBarrierID
			BarrierIDOut = barrier
			Name = ""
			Enabled = true
			UpdateAfterInit = false
		}
	]
	Updaters
	[
		{
			Type = Lifetime
			EnergyInOut = energy
			Lifetime = 1
			Name = Lifetime
			Enabled = true
			UpdateAfterInit = false
			LifeInOut = life
		}
		{
			Type = Operator
			DataType = Vector2
			AIn = location
			BIn = velocity
			ResultOut = location
			Operator = AddDt
			Name = "Apply velocity."
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Barrier
			LerpIn = energy
			DataOut = scale
			Invert = true
			ValueType = Float
			FromValue = 1
			ToValue = 0
			Name = ""
			Enabled = true
			TimeIn = life
			UvRectOut = uv_rect
			Framerate = 8
			TextureSize
			{
				X = 512
				Y = 512
			}
			FrameSize
			{
				X = 128
				Y = 128
			}
			FrameCount = 16
			FramesPerRow = 4
			PixelOffset
			{
				X = 0
				Y = 0
			}
			Looping = true
			AIn = rot
			ResultOut = rot
			Operator = AddDt
			Value = 1
			UpdateAfterInit = false
			DataType = Angle
			BIn = rot_vel
			BarrierIDIn = barrier
			LocationIn = location
		}
		{
			Type = UvAnimation
			TimeIn = life
			UvRectOut = uv_rect
			Framerate = 8
			TextureSize
			{
				X = 512
				Y = 512
			}
			FrameSize
			{
				X = 128
				Y = 128
			}
			FrameCount = 16
			FramesPerRow = 4
			PixelOffset
			{
				X = 0
				Y = 0
			}
			Looping = true
			Name = "Animation"
			Enabled = true
			UpdateAfterInit = true
			LerpIn = life
			DataOut = color
			Invert = false
			ValueType = Color
			FromValue
			{
				Rf = 0.75686274509803921568627450980392
				Gf = 0.37254901960784313725490196078431
				Bf = 0.94509803921568627450980392156863
				Af = 0.5
			}
			ToValue
			{
				Rf = 1
				Gf = 1
				Bf = 1
				Af = 0
			}
		}
		{
			Type = Lerp
			LerpIn = life
			DataOut = color
			Invert = false
			ValueType = Color
			FromValue
			{
				Rf = 0.75686274509803921568627450980392
				Gf = 0.37254901960784313725490196078431
				Bf = 0.94509803921568627450980392156863
				Af = 0.5
			}
			ToValue
			{
				Rf = 1
				Gf = 1
				Bf = 1
				Af = 0
			}
			Name = "Color lerp"
			Enabled = true
			UpdateAfterInit = true
		}
	]
	Renderer
	{
		Type = StandardQuadRenderer
		LocationIn = location
		ScaleIn
		RotationIn = rot
		ColorIn = color
		BaseSize
		{
			X = 4
			Y = 4
		}
		MaxScale = 1
		UVRect
		{
			X = 0
			Y = 0
			Width = 1
			Height = 1
		}
		Name = ""
		UvRectIn = uv_rect
	}
	Material
	{
		Texture
		{
			File = "purple_electro_bolt_discharge.png"
			FixTransparentColors = false
			PreMultiplyByAlpha = false
			MipLevels = 8
			SampleMode = Linear
		}
		TargetBlendMode
		{
			SourceRgbFactor = SourceAlpha
			DestRgbFactor = InverseSourceAlpha
			RgbOperator = Add
			SourceAlphaFactor = InverseDestAlpha
			DestAlphaFactor = One
			AlphaOperator = Add
			ChannelWriteMask
			[
				Red
				Green
				Blue
				Alpha
				All
			]
		}
		Color
		{
			Rf = 1
			Gf = 1
			Bf = 1
			Af = 1
		}
	}
	DeleteMode = Fast
	UpdatedEmittedParticles = false
	EnableMultithreading = false
	InitCapacity = 256
}
EmitterDef
{
	EmitPerSecond = 40 //40
	EmitPerOneShot = 7
	PreInitializers
	[
		{
			Type = SetValue
			DataOut = velocity
			ValueType = Vector2
			Value
			{
				X = -7.5
				Y = 0
			}
			Name = "Initial velocity"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	PostInitializers[]
	UpdatedEmittedParticles = false
}
Bucket = Upper2
PenetratingBucket = Middle2
Delay = 0
IgnoreIntensity = false
Sharing = Global
MinIntensity = 0
IsFancy = true
DontEmitWhenOffScreen = true
DontEmitWhenOffScreenSizeInflate = 1
UnsharedRenderInWorldSpace = false
UseCustomShapeForOffScreenCheck = false
MaxEmissionZoom = 3.4028235E+38
ScaleEmissionWithIntensity = true
ScaleEmissionWithBeamLength = false
CaptureBackBuffer = false
UseRealTime = false
IsSimple = false
Filter
{
	Ships = true
	OperationalHealth = true
	StructuralHealth = true
	OnlyPartCategories
	ExcludePartCategories
	Shields = true
	Bullets = true
	OnlyBulletCategories
	ExcludeBulletCategories
	IgnoreInvulnerability = true
	Self
	TargetedSelf
	Friendlies = true
	TargetedFriendlies
	Enemies = true
	TargetedEnemies
	Junk = true
	TargetedJunk
}
