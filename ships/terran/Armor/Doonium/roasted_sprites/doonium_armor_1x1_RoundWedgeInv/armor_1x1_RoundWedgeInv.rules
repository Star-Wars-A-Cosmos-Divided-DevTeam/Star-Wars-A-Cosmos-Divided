Part : &<../base_part_terran_doonium.rules>/Part
{
	NameKey = "Parts/DooniumArmor_1x1_RoundWedgeInv"
	IconNameKey = "Parts/DooniumArmor1x1"
	ID = SW.doonium_armor_1x1_RoundWedgeInv
	//EditorGroup = "DefensesSWACD"
	//DescriptionKey = "Parts/DooniumArmorDesc"
	//EditorReplacementPartID = ""
	Resources
	[
		[SW.doonium_ingot, 3]
	]
	//AIValueFactor = 0
	Size = [1, 1]
	AllowedContiguity = [Right, Bottom]
	//SelectionTypeID = "armor"
	MaxHealth = 3000 // 4000*3/8*2
	//ExplosiveDamageAbsorption = 100%
	//ExplosiveDamageResistance = 50%
	//TypeCategories = [armor]
	//ReceivableBuffs : ^/0/ReceivableBuffs []
	//Flammable = false
	//UnderlyingPartPerTile = ""
	//UnderlyingPart = ""
	//CreatePartPerTileWhenGrabbed = ""
	//CreatePartWhenDestroyed = ""
	InitialPenetrationResistance = 3
	//ContinuingPenetrationResistance = &InitialPenetrationResistance
	//CrewSpeedFactor = 0
	//Density = 4//v:3?
	//IsRotateable = true
	//IsWalled = true
	//IsSelfDestructible = false
	ExternalWalls = [TopRight, Right, BottomRight, Bottom, BottomLeft]
	InternalWalls = [Left, TopLeft, Top]
	VirtualInternalCells
	[
		{ExternalCell=[0, -1]; InternalCell=[1, 0]}
		{ExternalCell=[-1, 0]; InternalCell=[0, 1]}
	]
	//AllowedDoorLocations = []
	//GeneratorRequiresDoor = false
	FlipHRotate = [1, 0, 3, 2]
	FlipVRotate = [3, 2, 1, 0]
	//GenerateRectCollider = false
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}
	Components : ^/0/Components
	{
		DumyCollider
		{
			Type = PolygonCollider
			Vertices
			[
				[0.50-1/64, 0.50-1/64]
				[0.50-1/64, 0.50+1/64]
				[0.50+1/64, 0.50+1/64]
				[0.50+1/64, 0.50-1/64]
			]
		}

		Collider
		{
			Type = PolygonCollider
			Vertices
			[
				[0, 1]
				[0.64,0.64]
				[1, 1]
			]
		}

		Collider2
		{
			Type = PolygonCollider
			Vertices
			[
				[1, 0]
				[0.64,0.64]
				[1, 1]
			]
		}

		EmpAbsorber
		{
			Type = ExplosiveResourceDrainSink
			ResourceType = battery
			AbsorbsResourceDrain = ceil((&~/Part/MaxHealth)/4) // 750
			RecoveryRate = ceil(&AbsorbsResourceDrain) * 0.1
		}

		Graphics
		{
			Type = Graphics
			Location = [0.5, 0.5]
			Floor // This is needed so that armor shows up in ship ghosts.
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "armor.png"
						Size = [1, 1]
						UVRotation = 0
					}
					{
						File = "armor_33.png"
						Size = [1, 1]
						UVRotation = 0
					}
					{
						File = "armor_66.png"
						Size = [1, 1]
						UVRotation = 0
					}
				]
			}
			Walls
			{
				Layer = "walls"//external_
				DamageLevels
				[
					{
						File = "armor.png"
						//NormalsFile = "external_wall_normals.png"
						Size = [1, 1]
						UVRotation = 0
					}
					{
						File = "armor_33.png"
						//NormalsFile = "external_wall_normals_33.png"
						Size = [1, 1]
						UVRotation = 0
					}
					{
						File = "armor_66.png"
						//ormalsFile = "external_wall_normals_66.png"
						Size = [1, 1]
						UVRotation = 0
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [1, 1]
						UVRotation = 0
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [1, 1]
						UVRotation = 0
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [1, 1]
						UVRotation = 0
					}
				]
			}
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyedDry
			Location = [.5, .5]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}
	}

	Stats
	{
		EMPResist = (&~/Part/Components/EmpAbsorber/AbsorbsResourceDrain) / 1000
		AOEResist = (&~/Part/DamageResistances/explosive) * 100
	}
}
Scale = (1)
