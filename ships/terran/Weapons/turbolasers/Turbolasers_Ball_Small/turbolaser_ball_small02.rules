/* ----------------------------------------------------------------------------

Introduction: SW:ACD 0.3.7

Author : Lafiel

Description:
Currently prototyping. Everything is temporary.

This is based on the 2 top/bottom turrets on the CR90 Blackade Runner seen in the movie.
Not implemented :
 o shot color changing option?

Versions:

 o 1.0 Cosmoteer 0.15.14

---------------------------------------------------------------------------- */ 
Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{	
    //IDs

    //StringKeys

    //Groups&Categories

    //Resources&Size&Health

    //Rects

    //Selections

    //PartSpecific

    //ReceivableBuffs&ProhibitedBy

    //Doors&Etc

    //Editor

    //Components

   //Stats 

	ID = SW.turbolaser_ball_small02
	NameKey = "Parts/TurbolaserBallSmall02"
	IconNameKey = "Parts/TurbolaserBallSmall02Icon"
	DescriptionKey = "Parts/TurbolaserBallSmall02Desc"
	EditorGroups = ["WeaponsEnergy", "SWTechII"]
	Resources
	[
		[steel, 8] //
	]  //Cost = 8000
	AIValueFactor = 1

	TypeCategories = [weapon, uses_power, uses_laser_parts, is_crewed]
	Size = [2, 2]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "cannons"
	MaxHealth = 8000
	InitialPenetrationResistance = 5
	AllowedDoorLocations
	[
		[-1, 1]
		[2, 1]
                [1, 2]
                [0, 2]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon02.png"
			SampleMode = Linear
		}
		Size = [47, 72]
	}
	
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

LaserType
		{
			Type = UIToggle
			ToggleID = "SW.blasterlaser_type"
			Default = 0
			AlwaysAllowInBuildMode = true
		}

		LaserRedToggle
		{
			Type = ModeToggle
			Mode = LaserType
			OnMode = 0
		}
		LaserRedComponents
		{
			Type = ToggledComponents
			Toggle = LaserRedToggle
			IncludeInBlueprints = true
			Components = &<turbolaser02_red.rules>/Components
		}
		LaserBlueToggle
		{
			Type = ModeToggle
			Mode = LaserType
			OnMode = 1
		}
		LaserBlueComponents
		{
			Type = ToggledComponents
			Toggle = LaserBlueToggle
			IncludeInBlueprints = true
			Components = &<turbolaser02_blue.rules>/Components
		}
        		LaserGreenToggle
		{
			Type = ModeToggle
			Mode = LaserType
			OnMode = 2
		}
		LaserGreenComponents
		{
			Type = ToggledComponents
			Toggle = LaserGreenToggle
			IncludeInBlueprints = true
			Components = &<turbolaser02_green.rules>/Components
		}
		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [1, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "../floor06[2,2]01.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_33.png"
						Size = [2, 2]
					}
					{
						File = "../floor06[2,2]01_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/lights.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../Turbolasers_Light/console on1.png"
							"../Turbolasers_Light/console on2.png"
							"../Turbolasers_Light/console on3.png"
						]
						Size = [2, 2]
						//Offset = [0, 0]//-0.67]
						AnimationInterval = 0.50
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/console off.png"
						Size = [2, 2]
						//Offset = [0, 0]//-0.67]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "../Turbolasers_Light/walls.png"
						Size = [2, 2]
					}
					{
						File = "../Turbolasers_Light/walls_33.png"
						Size = [2, 2]
					}
					{
						File = "../Turbolasers_Light/walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "../roof_turret_base01[2,2]01.png"
						Size = [2, 2]
					}
/*
					{
						File = "../roof_turret_base01[2,2]01_33.png"
						Size = [2, 2]
					}
					{
						File = "../roof_turret_base01[2,2]01_66.png"
						Size = [2, 2]
					}
*/
				]
			}
		}

		
		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
		}

		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 400
			OperationalToggle = PowerToggle
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [0.55, 0.6]
			Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.45, 0.6]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[0.55, 0.5]
				[1.45, 0.5]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			AmmoLevels
			[
				{
					File = "../Turbolasers_Light/batteries1.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries2.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries3.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries4.png"
					Size = [2, 2]
				}
				{
					File = "../Turbolasers_Light/batteries5.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]
			
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [2, 2]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [2, 2]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [2, 2]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "../Turbolasers_Light/blueprints.png"
			Size = [2, 2]
		}
		BlueprintsRed
		{
			Type = BlueprintSprite
			File = "../Turbolasers_Light/blueprints.png"
			Size = [2, 2]

			ShowOnlyInToggleMode
			{
				ToggleID = SW.blasterlaser_type
				Mode = 0
			}
		}

		BlueprintsBlue
		{
			Type = BlueprintSprite
			File = "../Turbolasers_Light/blueprints.png"
			Size = [2, 2]

			ShowOnlyInToggleMode
			{
				ToggleID = SW.blasterlaser_type
				Mode = 1
			}
		}
		
		BlueprintsGreen
		{
			Type = BlueprintSprite
			File = "../Turbolasers_Light/blueprints.png"
			Size = [2, 2]
			ShowOnlyInToggleMode
			{
				ToggleID = SW.blasterlaser_type
				Mode = 2
			}
		}

	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&PowerPerSecond) * 1
		RecCrew = (&CrewRequired) + (&RecPower) * 4

		ROF = 2 / (&<turbolaser02_red.rules>/Components/Turret/FireInterval)
		Range = &<turbolaser02_red.rules>/Components/BulletEmitterBase/Bullet/Range
		Arc = deg(&<turbolaser02_red.rules>/Components/Turret/FiringArc)
		TurretSpeed = deg(&<turbolaser02_red.rules>/Components/Turret/RotateSpeed)
		ShotSpeed = &<turbolaser02_red.rules>/Components/BulletEmitterBase/Bullet/Speed
		ShotHP = &<turbolaser02_red.rules>/Components/BulletEmitterBase/Bullet/Components/Targetable/Health
		PowerPerShot = (&<turbolaser02_red.rules>/Components/BulletEmitterBase/ResourcesUsed) / 1000
		PowerPerSecond = (&PowerPerShot) * 2 / (&<turbolaser02_red.rules>/Components/Turret/FireInterval)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
	}
	StatsByCategory
	[
		&<turbolaser02_red.rules>/LaserStats
		&<turbolaser02_blue.rules>/LaserStats
		&<turbolaser02_green.rules>/LaserStats
	]
}