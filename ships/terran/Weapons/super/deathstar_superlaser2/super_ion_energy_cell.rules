/* ----------------------------------------------------------------------------
Introduction: SW:ACD (2020 April)
Author : Lafiel
Description:
This part is required to power the laser emitter and to increase firepower by 25%.
Versions:
 o 1.0 Cosmoteer 0.15.8
   o buff-storage power distribution
---------------------------------------------------------------------------- */

Part : /BASE_PART_TERRAN
{
	//IDs

	//StringKeys

	//Groups&Categories

	//Resources&Size&Health

	//Rects

	//Selections

	//PartSpecific

	//ReceivableBuffs&ProhibitedBy

	//Doors&Etc

	//Editor

	//Components

   //Stats 

	NameKey = "Parts/SuperIonEnergyCell"
	IconNameKey = "Parts/SuperIonEnergyCellIcon"
	ID = SW.super_ion_energy_cell
	EditorGroup = "SWTechII"
	DescriptionKey = "Parts/SuperIonEnergyCellDesc"
	Resources
	[
		[steel, 8] //
	]  //Cost = 1000000
	AIValueFactor = 5

	Size = [4, 4]
	MaxHealth = 16000
	TypeCategories = [uses_power, power_cell]
//	RequiresCategories = [DSL_command]

	AllowedDoorLocations
	[
		[0, -1]
		[1, -1]
		[2, -1]
		[3, -1]
		[-1, 0]
		[-1, 1]
		[-1, 2]
		[-1, 3]
		[4, 0]
		[4, 1]
		[4, 2]
		[4, 3]
		[0, 4]
		[1, 4]
		[2, 4]
		[3, 4]
	]

	EditorIcon
	{
		Texture
		{
			File = "./Data/ships/terran/power_storage/icon.png" //"icon_energy_cell.png"
			SampleMode = Linear
		}
		Size = [92, 92]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 32000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		CombinedBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [BatteryStorage]
			ViaBuffs
			{
				OutgoingBuffProviders = [PowerBuffProvider]
				ComponentID = BatteryStorage
			}
			AddMode = PrioritizeMostEmptyCapacity //PrioritizeLeastAmmo
		}
		BatteryConsumer
		{
			Type = TypedResourceGridConsumer
			ResourceType = battery
			Storage = CombinedBatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
		}
		PowerBuffProvider
		{
			Type = GridBuffProvider
			BuffType = PowerCellBuff
			BuffAmount = 25%
			GridDistance = 10
			OperationalToggle = IsOperational
		}

		// holding loss
		PowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = IsOperational
			FromStorage = BatteryStorage
			FromQuantity = 50
			MinFromQuantityForConversion = 1
			Interval = 1
		}
/*
		ForcedPump
		{
			Type = ResourceConverter
			OperationalToggle = IsOperational
			FromStorage = BatteryStorage
			ToStorage = CombinedBatteryStorage
			FromQuantity = 1000
			MinFromQuantityForConversion = 1000
			ToQuantity = 1000
			Interval = 0.06666  //no less than 0.03333
		}
*/
		Graphics
		{
			Type = Graphics
			Location = [2, 2]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/power_storage/floor.png"
						Size = [4, 4]
					}
					{
						File = "./Data/ships/terran/power_storage/floor_33.png"
						Size = [4, 4]
					}
					{
						File = "./Data/ships/terran/power_storage/floor_66.png"
						Size = [4, 4]
					}
				]
			}
/*
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights-r[3,4].png"
						Size = [4, 4]
					}
				]
			}
*/
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/power_storage/walls.png"
						Size = [4, 4]
					}
					{
						File = "./Data/ships/terran/power_storage/walls_33.png"
						Size = [4, 4]
					}
					{
						File = "./Data/ships/terran/power_storage/walls_66.png"
						Size = [4, 4]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/power_storage/roof.png"
						Size = [4, 4]
					}
					{
						File = "./Data/ships/terran/power_storage/roof_33.png"
						Size = [4, 4]
					}
					{
						File = "./Data/ships/terran/power_storage/roof_66.png"
						Size = [4, 4]
					}
				]
			}
		}


		OperatingHum
		{
			Type = ContinuousEffects
			Location = [2, 2]
			OnlyWhenOperational = true
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "./Data/ships/terran/ion_beam_emitter/operating.wav"
					Volume = .2
					Speed = 2
					MaxConcurrent = 1
					MaxConcurrentVolume = .2
				}
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [2, 2]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			HasZeroAmmoSprite = true
			AmmoLevels
			[
				{
					File = "./Data/ships/terran/power_storage/batteries1.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries2.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries3.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries4.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries5.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries6.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries7.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries8.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries9.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries10.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries11.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries12.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries13.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries14.png"
					Size = [2, 2]
				}
				{
					File = "./Data/ships/terran/power_storage/batteries15.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [2, 2]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [2, 2]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [2, 2]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1.5, 1.5]
					}
				}
			]
		}
		Blueprints
		{
			Type = BlueprintSprite
			File = "./Data/ships/terran/power_storage/blueprints.png" //"blueprints_energy_cell.png"
			Size = [4, 4]
		}
	}
	Stats
	{
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
	}
}






