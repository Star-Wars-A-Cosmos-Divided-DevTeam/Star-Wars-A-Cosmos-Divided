/* ----------------------------------------------------------------------------

Introduction: SW:ACD 
DSL Railgun version

Author : Lafiel

Description:
Quick and dirty fast prototyping version, based on railgun
This part is required to ensure the weapon has a minimum barrel length.
Connects like railgun to ensure structure design.

Versions:

 o 1.0 Cosmoteer 0.15.8
   o buff-storage power distribution
 o 1.1 Cosmoteer 0.15.12b
   o based on railgun

---------------------------------------------------------------------------- */

Part : /BASE_PART_TERRAN
{
	//IDs

	//StringKeys

	//Groups&Categories

	//Resources&Size&Health

	//Rects

	//Selections

	//PartSpecific

	//ReceivableBuffs&ProhibitedBy

	//Doors&Etc

	//Editor

	//Components

   //Stats 

	NameKey = "Parts/DSLaserTunnel"
	IconNameKey = "Parts/DSLaserTunnelIcon";
	ID = SW.DSLaser_tunnel
	DescriptionKey = "Parts/DSLaserTunnelDesc";
	EditorGroup = "SWTechIII"
	Resources
	[
		[steel, 8] //
	]  //Cost = 20000
	Size = [6, 8]
	Density = 2
	SelectionTypeID = "DSLII"
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 48000
	Flammable = false
	TypeCategories = [weapon, uses_power,DSLII,DSL_ammo,DSL_power]
	RequiresCategories = [DSL_command]

	ReceivableBuffs : ^/0/ReceivableBuffs [Railgun, RailgunOperation, RailgunReverseOperation,PowerCellBuff]
	AllowedDoorLocations
	[
		[-1, 2]
		[-1, 5]
		[6, 2]
		[6, 5]
	]
	HasNonContiguousPathing = true
	BlockedTravelCells
	[
		[0, 0]
		[0, 1]
		[0, 2]
		[0, 3]
		[0, 4]
		[0, 5]
		[0, 6]
		[0, 7]
		[1, 0]
		[1, 1]
		[1, 2]
		[1, 3]
		[1, 4]
		[1, 5]
		[1, 6]
		[1, 7]
		[2, 0]
		[2, 1]
		[2, 2]
		[2, 3]
		[2, 4]
		[2, 5]
		[2, 6]
		[2, 7]
		[3, 0]
		[3, 1]
		[3, 2]
		[3, 3]
		[3, 4]
		[3, 5]
		[3, 6]
		[3, 7]
		[4, 0]
		[4, 1]
		[4, 2]
		[4, 3]
		[4, 4]
		[4, 5]
		[4, 6]
		[4, 7]
	]
	BlockedTravelCellDirections
	[
		{
			Key = [0, 7]
			Value = [Right]
		}
		{
			Key = [5, 7]
			Value = [Left]
		}
	]
	EditorIcon
	{
		Texture
		{
			File = "icon_tunnel.png"
			SampleMode = Linear
		}
		Size = [69, 92]
	}
	Components : ^/0/Components
	{
		BuffOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, RailgunOperationBuffToggle]
			Mode = All
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles = [BuffOperational, RailgunReverseOperationBuffToggle]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 28000
			ToggleOnResources = 28000
			ToggleOffResources = 7000
		}
		BatteryConsumer
		{
			Type = TypedResourceGridConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		RailgunBuffToggle
		{
			Type = BuffToggle
			BuffType = Railgun
		}

		RailgunOperationBuffToggle
		{
			Type = BuffToggle
			BuffType = RailgunOperation
		}

		RailgunBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = { BaseValue=1; BuffType=Railgun; BuffMode=Add; }
			BuffArea = [0, -1, 6, 1]
			OperationalToggle = RailgunBuffToggle
			ChainsFromBuffType = Railgun
			Criteria
			{
				Category = DSLII
				Rot = 0
				Left = 0
				Right = 6
				Bottom = 0
			}
		}

		RailgunOperationBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = RailgunOperation
			BuffArea = [0, -1, 6, 1]
			OperationalToggle = BuffOperational
			ChainsFromBuffType = RailgunOperation
			Criteria
			{
				Category = DSLII
				Rot = 0
				Left = 0
				Right = 6
				Bottom = 0
			}
		}

		RailgunReverseOperationBuffToggle
		{
			Type = BuffToggle
			BuffType = RailgunReverseOperation
		}

		ReverseBuffOperationProvider
		{
			Type = AreaBuffProvider
			BuffType = RailgunReverseOperation
			BuffArea = [0, 8, 6, 1]
			OperationalToggle = RailgunReverseOperationBuffToggle
			ChainsFromBuffType = RailgunReverseOperation
			Criteria
			{
				Category = DSLII
				Rot = 0
				Left = 0
				Right = 6
				Top = 8
			}
		}

		LoadedAmmo
		{
			Type = ResourceStorageProxy
			ResourceType = battery
			PartLocation = [0, 8]
			PartCriteria
			{
				Category = DSL_ammo
				Rot = 0
				Left = 0
				Right = 6
				Top = 8
			}
			ComponentID = LoadedAmmo
		}


/*
		CombinedBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [BatteryStorage]
			ViaBuffs
			{
				OutgoingBuffProviders = [RailgunBuffProvider]
				ComponentID = BatteryStorage
			}
			AddMode = PrioritizeLeastAmmo
		}
*/
		Weapon // This is called "Weapon" to allow chaining with the emitter
		{
			Type = TriggerProxy
			PartLocation = [0, -1]
			PartCriteria
			{
				Category = DSL_power
				Rot = 0
				Left = 0
				Right = 6
				Bottom = 0
			}
			ComponentID = Weapon
		}

		BeamEmitter // This is called "BulletEmitter" to allow chaining with the launcher.
		{
			Type = TriggerProxy
			PartLocation = [0, -1]
			PartCriteria
			{
				Category = DSL_power
				Rot = 0
				Left = 0
				Right = 6
				Bottom = 0
			}
			ComponentID = BeamEmitter
		}

		PowerDrainOnShoot
		{
			Type = AmmoChange
			Trigger = BeamEmitter
			ResourceStorage = BatteryStorage
			Amount = -2000
		}

//-----------------------------------------------------------------------------
		GraphicsLeft
		{
			Type = Graphics
			Location = [3, 4]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				Offset = [-2.5, 0]
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/floor_side_B.png"
						Size = [1, 8]
					}
					{
						File = "../deathstar_superlaser/floor_side_B_33.png"
						Size = [1, 8]
					}
					{
						File = "../deathstar_superlaser/floor_side_B_66.png"
						Size = [1, 8]
					}
				]
			}
			OperationalDoodad = &NonOperationalDoodad
			NonOperationalDoodad
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "../floor06[4,8].png"
						Size = [4, 8]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/lights-r[3,4].png"
						Size = [6, 8]
					}
				]
			}

			Walls
			{
				Layer = "walls"
				Offset = [-2.5, 0]
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/wall_side_B.png"
						Size = [1, 8]
					}
					{
						File = "../deathstar_superlaser/wall_side_B_33.png"
						Size = [1, 8]
					}
					{
						File = "../deathstar_superlaser/wall_side_B_66.png"
						Size = [1, 8]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [6, 8]
					}
					{
						File = "roof_33.png"
						Size = [6, 8]
					}
					{
						File = "roof_66.png"
						Size = [6, 8]
					}
				]
			}
		}

		GraphicsRight
		{
			Type = Graphics
			Location = [3, 4]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				Offset = [2.5, 0]
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/floor_side_B.png"
						Size = [1, 8]
					}
					{
						File = "../deathstar_superlaser/floor_side_B_33.png"
						Size = [1, 8]
					}
					{
						File = "../deathstar_superlaser/floor_side_B_66.png"
						Size = [1, 8]
					}
				]
			}
/*
			OperationalDoodad
			{
				Layer = "weapons"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
						]
						Size = [2, 3]
						AnimationInterval = 0.1
						AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "weapons"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [2, 3]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 3]
					}
				]
			}
*/
			Walls
			{
				Layer = "walls"
				Offset = [2.5, 0]
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/wall_side_B.png"
						Size = [1, 8]
						MirrorU = true
					}
					{
						File = "../deathstar_superlaser/wall_side_B_33.png"
						Size = [1, 8]
						MirrorU = true
					}
					{
						File = "../deathstar_superlaser/wall_side_B_66.png"
						Size = [1, 8]
						MirrorU = true
					}
				]
			}
		}
//-----------------------------------------------------------------------------
		ConsoleGraphicsL1
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [.17, 1.5]
			Rotation = -90d;
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../deathstar_superlaser/doodads04_on1.png"
							"../deathstar_superlaser/doodads04_on2.png"
							"../deathstar_superlaser/doodads04_on3.png"
							"../deathstar_superlaser/doodads04_on4.png"
							"../deathstar_superlaser/doodads04_on5.png"
							"../deathstar_superlaser/doodads04_on6.png"
							"../deathstar_superlaser/doodads04_on7.png"
							"../deathstar_superlaser/doodads04_on8.png"
						]
						Size = [2, 1]
						AnimationInterval = 0.125
						//AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/doodads04_off.png"
						Size = [2, 1]
					}
				]
			}
		}
		ConsoleGraphicsL2
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [0.578125, 4]
			Rotation = -90d;
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../deathstar_superlaser/SW_console01_on1.png"
							"../deathstar_superlaser/SW_console01_on2.png"
							"../deathstar_superlaser/SW_console01_on3.png"
						]
						Size = [2, 1]
						AnimationInterval = 0.125
						//AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/SW_console01_off.png"
						Size = [2, 1]
					}
				]
			}
		}
		ConsoleGraphicsL4
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [0.17, 6.5]
			Rotation = -90d;
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../deathstar_superlaser/doodads04_on1.png"
							"../deathstar_superlaser/doodads04_on2.png"
							"../deathstar_superlaser/doodads04_on3.png"
							"../deathstar_superlaser/doodads04_on4.png"
							"../deathstar_superlaser/doodads04_on5.png"
							"../deathstar_superlaser/doodads04_on6.png"
							"../deathstar_superlaser/doodads04_on7.png"
							"../deathstar_superlaser/doodads04_on8.png"
						]
						Size = [2, 1]
						AnimationInterval = 0.125
						//AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/doodads04_off.png"
						Size = [2, 1]
					}
				]
			}
		}
//-----------------------------------------------------------------------------
		ConsoleGraphicsR1
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [5.83, 1.5]
			Rotation = 90d;
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../deathstar_superlaser/doodads04_on1.png"
							"../deathstar_superlaser/doodads04_on2.png"
							"../deathstar_superlaser/doodads04_on3.png"
							"../deathstar_superlaser/doodads04_on4.png"
							"../deathstar_superlaser/doodads04_on5.png"
							"../deathstar_superlaser/doodads04_on6.png"
							"../deathstar_superlaser/doodads04_on7.png"
							"../deathstar_superlaser/doodads04_on8.png"
						]
						Size = [2, 1]
						AnimationInterval = 0.125
						//AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/doodads04_off.png"
						Size = [2, 1]
					}
				]
			}
		}
		ConsoleGraphicsR2
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [5.421875, 4]
			Rotation = 90d;
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../deathstar_superlaser/SW_console01_on1.png"
							"../deathstar_superlaser/SW_console01_on2.png"
							"../deathstar_superlaser/SW_console01_on3.png"
						]
						Size = [2, 1]
						AnimationInterval = 0.125
						//AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/SW_console01_off.png"
						Size = [2, 1]
					}
				]
			}
		}
		ConsoleGraphicsR4
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [5.83, 6.5]
			Rotation = 90d;
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../deathstar_superlaser/doodads04_on1.png"
							"../deathstar_superlaser/doodads04_on2.png"
							"../deathstar_superlaser/doodads04_on3.png"
							"../deathstar_superlaser/doodads04_on4.png"
							"../deathstar_superlaser/doodads04_on5.png"
							"../deathstar_superlaser/doodads04_on6.png"
							"../deathstar_superlaser/doodads04_on7.png"
							"../deathstar_superlaser/doodads04_on8.png"
						]
						Size = [2, 1]
						AnimationInterval = 0.125
						//AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "../deathstar_superlaser/doodads04_off.png"
						Size = [2, 1]
					}
				]
			}
		}


//-----------------------------------------------------------------------------
/*
		BatterySprites
		{
			Type = ResourceSprites
			Location = [3, 4]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 1]
				}
				{
					File = "batteries2.png"
					Size = [2, 1]
				}
				{
					File = "batteries3.png"
					Size = [2, 1]
				}
				{
					File = "batteries4.png"
					Size = [2, 1]
				}
				{
					File = "batteries5.png"
					Size = [2, 1]
				}
				{
					File = "batteries6.png"
					Size = [2, 1]
				}
				{
					File = "batteries7.png"
					Size = [2, 1]
				}
				{
					File = "batteries8.png"
					Size = [2, 1]
				}
			]
		}
*/
		OperationEffects
		{
			Type = ToggleEffects
			Location = [3, 4]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [3, 4]
		}

/*
		RecursiveDeath1
		{
			Type = DeathEffects
			Location = [1, -.5]

			HitEffects
			[
				{
					Type = AreaDamage
					Damage = 3000
					Radius = .6
					Falloff = 0
					Delay = .15
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
			]
		}

		RecursiveDeath2 : RecursiveDeath1
		{
			Location = [1, 8.5]
		}
*/

		Indicators
		{
			Type = IndicatorSprites
			Location = [3, 4]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1.5, 1.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints_tunnel.png"
			Size = [6, 8]
		}
	}


	Stats
	{
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
		PowerPerShot = -(&~/Part/Components/PowerDrainOnShoot/Amount) / 1000
		PowerPerSecond = (&PowerPerShot) / (&<DSlaser_emitter.txt>/Part/Components/Weapon/FireInterval)
		ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]

		RecPower = &PowerPerSecond
		RecCrew = (&RecPower) * 4
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/IonBeam"
			Stats
			{
				BaseMultiplier = (&<../../buffs/buffs.txt>/DSLaserBuff/Multiplier) * 100
				//Exponent = (&<../../buffs/buffs.txt>/DSLaserBuff/Exponent)
/*
				RailgunBuff
				[
					(&../BaseMultiplier)
				]
*/
			}
		}
	]

}
