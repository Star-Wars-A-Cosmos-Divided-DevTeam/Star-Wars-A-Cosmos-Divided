		RedAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [RedToggleProxy, GlowToggleProxy]
			Mode = All
		}
		RedAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = RedAndGlowToggle
			Components = &<thruster_red_glow.rules>/Components
		}

		RedAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [RedToggleProxy, SparksToggleProxy]
			Mode = All
		}
		RedAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = RedAndSparksToggle
			Components = &<thruster_red_sparks.rules>/Components
		}

		RedAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [RedToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		RedAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = RedAndFullsetToggle
			Components = &<thruster_red_fullset.rules>/Components
		}

		BlueAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [BlueToggleProxy, GlowToggleProxy]
			Mode = All
		}
		BlueAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = BlueAndGlowToggle
			Components = &<thruster_blue_glow.rules>/Components
		}

		BlueAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [BlueToggleProxy, SparksToggleProxy]
			Mode = All
		}
		BlueAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = BlueAndSparksToggle
			Components = &<thruster_blue_sparks.rules>/Components
		}

		BlueAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [BlueToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		BlueAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = BlueAndFullsetToggle
			Components = &<thruster_blue_fullset.rules>/Components
		}

		BlueAndRocketToggle
		{
			Type = MultiToggle
			Toggles = [BlueToggleProxy, RocketToggleProxy]
			Mode = All
		}
		BlueAndRocketsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = BlueAndRocketToggle
			Components = &<thruster_blue_rocketset.rules>/Components
		}

		YellowAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [YellowToggleProxy, GlowToggleProxy]
			Mode = All
		}
		YellowAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = YellowAndGlowToggle
			Components = &<thruster_yellow_glow.rules>/Components
		}

		YellowAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [YellowToggleProxy, SparksToggleProxy]
			Mode = All
		}
		YellowAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = YellowAndSparksToggle
			Components = &<thruster_yellow_sparks.rules>/Components
		}

		YellowAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [YellowToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		YellowAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = YellowAndFullsetToggle
			Components = &<thruster_yellow_fullset.rules>/Components
		}

		PurpleAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [PurpleToggleProxy, GlowToggleProxy]
			Mode = All
		}
		PurpleAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = PurpleAndGlowToggle
			Components = &<thruster_purple_glow.rules>/Components
		}

		PurpleAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [PurpleToggleProxy, SparksToggleProxy]
			Mode = All
		}
		PurpleAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = PurpleAndSparksToggle
			Components = &<thruster_purple_sparks.rules>/Components
		}

		PurpleAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [PurpleToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		PurpleAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = PurpleAndFullsetToggle
			Components = &<thruster_purple_fullset.rules>/Components
		}

		CyanAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [CyanToggleProxy, GlowToggleProxy]
			Mode = All
		}
		CyanAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = CyanAndGlowToggle
			Components = &<thruster_cyan_glow.rules>/Components
		}

		CyanAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [CyanToggleProxy, SparksToggleProxy]
			Mode = All
		}
		CyanAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = CyanAndSparksToggle
			Components = &<thruster_cyan_sparks.rules>/Components
		}

		CyanAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [CyanToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		CyanAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = CyanAndFullsetToggle
			Components = &<thruster_cyan_fullset.rules>/Components
		}

		OrangeAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [OrangeToggleProxy, GlowToggleProxy]
			Mode = All
		}
		OrangeAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = OrangeAndGlowToggle
			Components = &<thruster_orange_glow.rules>/Components
		}

		OrangeAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [OrangeToggleProxy, SparksToggleProxy]
			Mode = All
		}
		OrangeAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = OrangeAndSparksToggle
			Components = &<thruster_orange_sparks.rules>/Components
		}

		OrangeAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [OrangeToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		OrangeAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = OrangeAndFullsetToggle
			Components = &<thruster_orange_fullset.rules>/Components
		}

		GreenAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [GreenToggleProxy, GlowToggleProxy]
			Mode = All
		}
		GreenAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = GreenAndGlowToggle
			Components = &<thruster_green_glow.rules>/Components
		}

		GreenAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [GreenToggleProxy, SparksToggleProxy]
			Mode = All
		}
		GreenAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = GreenAndSparksToggle
			Components = &<thruster_green_sparks.rules>/Components
		}

		GreenAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [GreenToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		GreenAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = GreenAndFullsetToggle
			Components = &<thruster_green_fullset.rules>/Components
		}

		MagentaAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [MagentaToggleProxy, GlowToggleProxy]
			Mode = All
		}
		MagentaAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = MagentaAndGlowToggle
			Components = &<thruster_magenta_glow.rules>/Components
		}

		MagentaAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [MagentaToggleProxy, SparksToggleProxy]
			Mode = All
		}
		MagentaAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = MagentaAndSparksToggle
			Components = &<thruster_magenta_sparks.rules>/Components
		}

		MagentaAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [MagentaToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		MagentaAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = MagentaAndFullsetToggle
			Components = &<thruster_magenta_fullset.rules>/Components
		}

		WhiteAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [WhiteToggleProxy, GlowToggleProxy]
			Mode = All
		}
		WhiteAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = WhiteAndGlowToggle
			Components = &<thruster_white_glow.rules>/Components
		}

		WhiteAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [WhiteToggleProxy, SparksToggleProxy]
			Mode = All
		}
		WhiteAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = WhiteAndSparksToggle
			Components = &<thruster_white_sparks.rules>/Components
		}

		WhiteAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [WhiteToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		WhiteAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = WhiteAndFullsetToggle
			Components = &<thruster_white_fullset.rules>/Components
		}

		BlackAndGlowToggle
		{
			Type = MultiToggle
			Toggles = [BlackToggleProxy, GlowToggleProxy]
			Mode = All
		}
		BlackAndGlowThrusterComponents
		{
			Type = ToggledComponents
			Toggle = BlackAndGlowToggle
			Components = &<thruster_black_glow.rules>/Components
		}

		BlackAndSparksToggle
		{
			Type = MultiToggle
			Toggles = [BlackToggleProxy, SparksToggleProxy]
			Mode = All
		}
		BlackAndSparksThrusterComponents
		{
			Type = ToggledComponents
			Toggle = BlackAndSparksToggle
			Components = &<thruster_black_sparks.rules>/Components
		}

		BlackAndFullsetToggle
		{
			Type = MultiToggle
			Toggles = [BlackToggleProxy, FullsetToggleProxy]
			Mode = All
		}
		BlackAndFullsetThrusterComponents
		{
			Type = ToggledComponents
			Toggle = BlackAndFullsetToggle
			Components = &<thruster_black_fullset.rules>/Components
		}