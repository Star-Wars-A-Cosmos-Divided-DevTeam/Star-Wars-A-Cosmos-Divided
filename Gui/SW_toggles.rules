/**
 * Defines common part toggles for armor roof types, 
 * roof normals, shield colors, thruster colors, 	
 * thruster effects, munition types & exterior looks.
 *
 * The toggles allow selecting sprite options for
 * visual variants.
 * 
 * Each toggle has a unique ID, choices with IDs, tooltips,
 * hotkeys, and sprite texture definitions.
 *
 * Can be used by parts to enable changeable visuals.
 */
PartToggles
[
	// SW Droid Talk Effect Off/On
	{
		ToggleID = "SW.droid_talk_effect_on_off"
		Style = OffAlertSwitch
		SortOrder = 7;
		Choices
		[
			// Off
			{
				ChoiceID = "SW_DroidTalkEffect_Off"
				ButtonToolTipKey = "PartToggles/SW_DroidTalkEffect_Off"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "droids/TalkingEffect_Off.png" //"./Data/gui/game/parts/toggle_power_off.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}

			// On
			{
				ChoiceID = "SW_DroidTalkEffect_On"
				ButtonToolTipKey = "PartToggles/SW_DroidTalkEffect_On"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "droids/TalkingEffect_On.png" //"./Data/gui/game/parts/toggle_power_on.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// SW Droid Heal Effect Off/On
	{
		ToggleID = "SW.droid_heal_effect_on_off"
		Style = OffAlertSwitch
		SortOrder = 8;
		Choices
		[
			// Off
			{
				ChoiceID = "SW_DroidHealEffect_Off"
				ButtonToolTipKey = "PartToggles/SW_DroidHealEffect_Off"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "droids/HealingEffect_Off.png" //"./Data/gui/game/parts/toggle_power_off.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}

			// On
			{
				ChoiceID = "SW_DroidHealEffect_On"
				ButtonToolTipKey = "PartToggles/SW_DroidHealEffect_On"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "droids/HealingEffect_On.png" //"./Data/gui/game/parts/toggle_power_on.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// SW Shield Emitter Effect Off/On
	{
		ToggleID = "SW.shield_emitter_effect_on_off"
		Style = OffAlertSwitch
		SortOrder = 9;
		Choices
		[
			// Off
			{
				ChoiceID = "SW_ShieldEmitterEffect_Off"
				ButtonToolTipKey = "PartToggles/SW_ShieldEmitterEffect_Off"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/EmitterEffect_Off.png" //"./Data/gui/game/parts/toggle_power_off.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}

			// On
			{
				ChoiceID = "SW_ShieldEmitterEffect_On"
				ButtonToolTipKey = "PartToggles/SW_ShieldEmitterEffect_On"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/EmitterEffect_On.png" //"./Data/gui/game/parts/toggle_power_on.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// Common Munition Type
	/**
	* Defines a common toggle for selecting armor roof sprite types.
	* 
	* The toggle has ID "SW.armor_roof_type" and uses a popout style.
	*
	* It provides choices for old school, vanilla, blank, and debug roof sprites.
	* 
	* Each choice has an ID, tooltip localization key, default hotkey, 
	* and a texture file path for the button icon sprite.
	*
	* Can be used by armor parts to allow changing the roof sprite.
	*/
	{
		ToggleID = "SW.munition_type"
		Style = Popout
		SortOrder = 10;
		//ShowInEditor = true
		Choices
		[
			//0 = Red Munition
			{
				ChoiceID = "RedMunition"
				ButtonToolTipKey = "PartToggles/RedMunition"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shots/LaserShotRed.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//1 = Blue Munition
			{
				ChoiceID = "BlueMunition"
				ButtonToolTipKey = "PartToggles/BlueMunition"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shots/LaserShotBlue.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//2 = Green Munition
			{
				ChoiceID = "GreenMunition"
				ButtonToolTipKey = "PartToggles/GreenMunition"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shots/LaserShotGreen.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//3 = Cyan Munition
			{
				ChoiceID = "CyanMunition"
				ButtonToolTipKey = "PartToggles/CyanMunition"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shots/LaserShotCyan.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//4 = Yellow Munition
			{
				ChoiceID = "YellowMunition"
				ButtonToolTipKey = "PartToggles/YellowMunition"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shots/LaserShotYellow.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//5 = Orange Munition
			{
				ChoiceID = "OrangeMunition"
				ButtonToolTipKey = "PartToggles/OrangeMunition"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shots/LaserShotOrange.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//6 = Purple Munition
			{
				ChoiceID = "PurpleMunition"
				ButtonToolTipKey = "PartToggles/PurpleMunition"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shots/LaserShotPurple.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//7 = White Munition
			{
				ChoiceID = "WhiteMunition"
				ButtonToolTipKey = "PartToggles/WhiteMunition"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shots/LaserShotWhite.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// Common Exterior Type
	/**
	* Defines a common exterior type toggle.
	* 
	* The toggle has ID "SW.exterior_type" and uses a popout style.
	* 
	* It provides choices for white and grey ship exterior textures.
	*
	* Each choice has an ID, tooltip localization key, default hotkey, 
	* and a sprite texture file path for the button icon.
	*
	* Can be used by parts to allow changing the exterior texture.
	*/
	{
		ToggleID = "SW.exterior_type"
		Style = Popout
		SortOrder = 50;
		//ShowInEditor = true
		Choices
		[
			//White Exterior
			{
				ChoiceID = "WhiteExterior"
				ButtonToolTipKey = "PartToggles/WhiteExterior"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "exterior/white_exterior.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//Grey Exterior
			{
				ChoiceID = "GreyExterior"
				ButtonToolTipKey = "PartToggles/GreyExterior"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "exterior/grey_exterior.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// Common Roof Type
	/**
	* Defines a common toggle for selecting armor roof sprite types.
	* 
	* The toggle has ID "SW.armor_roof_type" and uses a popout style.
	*
	* It provides choices for old school, vanilla, blank, and debug roof sprites.
	* 
	* Each choice has an ID, tooltip localization key, default hotkey, 
	* and a texture file path for the button icon sprite.
	*
	* Can be used by armor parts to allow changing the roof sprite.
	*/
	{
		ToggleID = "SW.armor_roof_type"
		Style = Popout
		SortOrder = 51;
		//ShowInEditor = true
		Choices
		[
			//Vanilla Sprite
			{
				ChoiceID = "VanillaArmorRoof"
				ButtonToolTipKey = "PartToggles/VanillaArmorRoof"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "armor/roof_0.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//Old School SW:ACD Sprite
			{
				ChoiceID = "OldArmorRoof"
				ButtonToolTipKey = "PartToggles/OldArmorRoof"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "armor/roof_1.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//Blank Sprite
			{
				ChoiceID = "BlankSquareArmorRoof"
				ButtonToolTipKey = "PartToggles/BlankSquareArmorRoof"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "armor/roof_2.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//Boxed Sprite
			{
				ChoiceID = "BoxedSquareArmorRoof"
				ButtonToolTipKey = "PartToggles/BoxedSquareArmorRoof"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "armor/roof_3.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//Debug Toggle
			{
				ChoiceID = "Empty"
				ButtonToolTipKey = "PartToggles/Empty"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "Empty.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// Common Roof Normal Type
	/**
	* Defines a common toggle for selecting armor roof normal textures.
	*
	* The toggle has ID "SW.armor_roof_normal_type" and popout style.
	* 
	* It provides choices for old school, vanilla, blank, and debug roof normal textures.
	*
	* Each choice has an ID, tooltip localization key, default hotkey, and texture file path.
	* 
	* Can be used by armor parts to allow changing roof normal maps.
	*/
	{
		ToggleID = "SW.armor_roof_normal_type"
		Style = Popout
		SortOrder = 52;
		//ShowInEditor = true
		Choices
		[
			//Vanilla Sprite
			{
				ChoiceID = "VanillaArmorRoofNormal"
				ButtonToolTipKey = "PartToggles/VanillaArmorRoofNormal"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "armor/roof_0_normals.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//Old School SW:ACD Sprite
			{
				ChoiceID = "OldArmorRoofNormal"
				ButtonToolTipKey = "PartToggles/OldArmorRoofNormal"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "armor/roof_1_normals.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//Blank Sprite
			{
				ChoiceID = "BlankSquareArmorRoofNormal"
				ButtonToolTipKey = "PartToggles/BlankSquareArmorRoofNormal"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "armor/roof_2_normals.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//Boxed Sprite
			{
				ChoiceID = "BoxedSquareArmorRoofNormal"
				ButtonToolTipKey = "PartToggles/BoxedSquareArmorRoofNormal"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "armor/roof_3_normals.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// Common Shield Color Type
	/**
	* Defines a common shield color toggle with ID "SW.shield_color_type".
	* 
	* Provides choices for blue, white, and invisible shield colors.
	* 
	* Each choice has an ID, tooltip localization key, default hotkey, 
	* and a sprite texture file path for the button icon.
	*
	* Can be used by parts to allow changing shield visual color.
	*/
	{
		ToggleID = "SW.shield_color_type"
		Style = Popout
		SortOrder = 60;
		//ShowInEditor = true
		Choices
		[
			//0 = White Shield
			{
				ChoiceID = "SW_WhiteShield"
				ButtonToolTipKey = "PartToggles/SW_WhiteShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_white.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}//1 = Invis Shield
			{
				ChoiceID = "SW_InvisShield"
				ButtonToolTipKey = "PartToggles/SW_InvisShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_invis.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}//2 = Red Shield
			{
				ChoiceID = "SW_RedShield"
				ButtonToolTipKey = "PartToggles/SW_RedShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_red.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}//3 = Orange Shield
			{
				ChoiceID = "SW_OrangeShield"
				ButtonToolTipKey = "PartToggles/SW_OrangeShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_orange.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}//4 = Yellow Shield
			{
				ChoiceID = "SW_YellowShield"
				ButtonToolTipKey = "PartToggles/SW_YellowShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_yellow.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}//5 = Green Shield
			{
				ChoiceID = "SW_GreenShield"
				ButtonToolTipKey = "PartToggles/SW_GreenShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_green.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//6 = Cyan Shield
			{
				ChoiceID = "SW_CyanShield"
				ButtonToolTipKey = "PartToggles/SW_CyanShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_cyan.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//7 = Blue Shield
			{
				ChoiceID = "SW_BlueShield"
				ButtonToolTipKey = "PartToggles/SW_BlueShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_blue.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}//8 = Purple Shield
			{
				ChoiceID = "SW_PurpleShield"
				ButtonToolTipKey = "PartToggles/SW_PurpleShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_purple.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}//9 = Pink Shield
			{
				ChoiceID = "SW_PinkShield"
				ButtonToolTipKey = "PartToggles/SW_PinkShield"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "shield_color/shield_pink.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// Common Thruster Color Type
	/**
	* Defines a common toggle for selecting thruster effect colors.
	* 
	* The toggle has a unique ID "SW.thruster_effect_color_type".
	* 
	* It provides choices for red, blue, yellow, and purple thruster colors.
	* 
	* Each choice has an ID, tooltip localization key, default hotkey, 
	* and a sprite texture file path for the button icon.
	*
	* Can be used by parts to allow changing thruster effect colors.
	*/
	{
		ToggleID = "SW.thruster_effect_color_type"
		Style = Popout
		SortOrder = 61;
		//ShowInEditor = true
		Choices
		[
			//0 = Red Thruster
			{
				ChoiceID = "SW_RedThruster"
				ButtonToolTipKey = "PartToggles/SW_RedThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_color/red.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//1 = Blue Thruster
			{
				ChoiceID = "SW_BlueThruster"
				ButtonToolTipKey = "PartToggles/SW_BlueThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_color/blue.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//2 = Yellow Thruster
			{
				ChoiceID = "SW_YellowThruster"
				ButtonToolTipKey = "PartToggles/SW_YellowThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_color/yellow.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//3 = Purple Thruster
			{
				ChoiceID = "SW_PurpleThruster"
				ButtonToolTipKey = "PartToggles/SW_PurpleThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_color/purple.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//4 = Green Thruster
			{
				ChoiceID = "SW_GreenThruster"
				ButtonToolTipKey = "PartToggles/SW_GreenThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_color/green.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// Common Thruster Effect Type
	/**
	 * Defines a common toggle for thruster effect amount types.
	 *
	 * Provides options for just glow, glow with sparks, 
	 * and full set of effects.
	 * 
	 * Each choice has an ID, tooltip key, default hotkey,
	 * and a sprite texture file path.
	 * 
	 * Allows parts to enable different thruster visuals.
	 */
	{
		ToggleID = "SW.thruster_effect_amount_type"
		Style = Popout
		SortOrder = 62;
		//ShowInEditor = true
		Choices
		[
			//0 = Just Glow
			{
				ChoiceID = "SW_GlowThruster"
				ButtonToolTipKey = "PartToggles/SW_GlowThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_effect_amount/glow.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//1 = Just Glow & Sparks
			{
				ChoiceID = "SW_GlowAndSparksThruster"
				ButtonToolTipKey = "PartToggles/SW_GlowAndSparksThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_effect_amount/glow_with_sparks.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//2 = Glow & Fullset of all Effects
			{
				ChoiceID = "SW_GlowAndFullsetThruster"
				ButtonToolTipKey = "PartToggles/SW_GlowAndFullsetThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_effect_amount/glow_with_fullset.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//3 = Just Sparks
			{
				ChoiceID = "SW_SparksThruster"
				ButtonToolTipKey = "PartToggles/SW_SparksThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_effect_amount/sparks.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//4 = Fullset of all Effects
			{
				ChoiceID = "SW_FullsetThruster"
				ButtonToolTipKey = "PartToggles/SW_FullsetThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_effect_amount/fullset.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			//5 = Fullset of all Effects
			{
				ChoiceID = "SW_RocketThruster"
				ButtonToolTipKey = "PartToggles/SW_RocketThruster"
				DefaultHotkey = []
				ButtonSprite
				{
					Texture
					{
						File = "thruster_effect_amount/fullset_rocket.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// for large thrusters
	{
		ToggleID = "nozzle_art_option_switch03"
		Style = Popout
		SortOrder = 63;
		Choices
		[
			// option 0
			{
				ChoiceID = "nozzle_art_switch03_option_00"
				ButtonToolTipKey = "PartToggles/Nozzle_Art_Option00"
				ButtonTextKey = "PartToggles/Nozzle_Art_Option00_"
			}
			// option 1
			{
				ChoiceID = "nozzle_art_switch03_option_01"
				ButtonToolTipKey = "PartToggles/Nozzle_Art_Option01"
				ButtonTextKey = "PartToggles/Nozzle_Art_Option01_"
			}
			// option 2
			{
				ChoiceID = "nozzle_art_switch03_option_02"
				ButtonToolTipKey = "PartToggles/Nozzle_Art_Option02"
				ButtonTextKey = "PartToggles/Nozzle_Art_Option02_"
			}
		]
	}
	// for large thrusters, form roof covers
	{
		ToggleID = "nozzle_roof_option_switch19"
		Style = Popout
		SortOrder = 64;
		Choices
		[
			// option 0
			{
				ChoiceID = "nozzle_roof_switch19_option_00"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option00"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option00_"
			}
			// option 1
			{
				ChoiceID = "nozzle_roof_switch19_option_01"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option01"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option01_"
			}
			// option 2
			{
				ChoiceID = "nozzle_roof_switch19_option_02"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option02"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option02_"
			}
			// option 3
			{
				ChoiceID = "nozzle_roof_switch19_option_03"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option03"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option03_"
			}
			// option 4
			{
				ChoiceID = "nozzle_roof_switch19_option_04"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option04"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option04_"
			}
			// option 5
			{
				ChoiceID = "nozzle_roof_switch19_option_05"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option05"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option05_"
			}
			// option 6
			{
				ChoiceID = "nozzle_roof_switch19_option_06"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option06"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option06_"
			}
			// option 7
			{
				ChoiceID = "nozzle_roof_switch19_option_07"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option07"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option07_"
			}
			// option 8
			{
				ChoiceID = "nozzle_roof_switch19_option_08"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option08"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option08_"
			}
			// option 9
			{
				ChoiceID = "nozzle_roof_switch19_option_09"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option09"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option09_"
			}
			// option 10
			{
				ChoiceID = "nozzle_roof_switch19_option_10"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option10"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option10_"
			}
			// option 11
			{
				ChoiceID = "nozzle_roof_switch19_option_11"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option11"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option11_"
			}
			// option 12
			{
				ChoiceID = "nozzle_roof_switch19_option_12"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option12"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option12_"
			}
			// option 13
			{
				ChoiceID = "nozzle_roof_switch19_option_13"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option13"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option13_"
			}
			// option 14
			{
				ChoiceID = "nozzle_roof_switch19_option_14"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option14"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option14_"
			}
			// option 15
			{
				ChoiceID = "nozzle_roof_switch19_option_15"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option15"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option15_"
			}
			// option 16
			{
				ChoiceID = "nozzle_roof_switch19_option_16"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option16"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option16_"
			}
			// option 17
			{
				ChoiceID = "nozzle_roof_switch19_option_17"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option17"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option17_"
			}
			// option 18
			{
				ChoiceID = "nozzle_roof_switch19_option_18"
				ButtonToolTipKey = "PartToggles/Nozzle_Roof_Option18"
				ButtonTextKey = "PartToggles/Nozzle_Roof_Option18_"
			}
		]
	}
	// for gravity well
	{
		ToggleID = "ftl_jammer_mode"
		Style = CycledButton
		Choices
		[
			// auto
			{
				ChoiceID = "ftl_jammer_mode_auto"
				ButtonToolTipKey = "PartToggles/FTLJammer_Auto"
				ButtonSprite
				{
					Texture
					{
						File = "auto.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
			// manual mode
			{
				ChoiceID = "ftl_jammer_mode_manual"
				ButtonToolTipKey = "PartToggles/FTLJammer_Manual"
				ButtonSprite
				{
					Texture
					{
						File = "manual.png"
						MipLevels = 2
						SampleMode = Linear
					}
				}
			}
		]
	}
	// for gravity well
	{
		ToggleID = "network_node_number_switch"
		Style = Popout
		Choices
		[
			// node number0
			{
				ChoiceID = "network_node_number0"
				ButtonToolTipKey = "PartToggles/NetworkNodeNumber0"
				ButtonTextKey = "PartToggles/NetworkNodeNumber0_"
			}
			// node number1
			{
				ChoiceID = "network_node_number1"
				ButtonToolTipKey = "PartToggles/NetworkNodeNumber1"
				ButtonTextKey = "PartToggles/NetworkNodeNumber1_"
			}
			// node number2
			{
				ChoiceID = "network_node_number2"
				ButtonToolTipKey = "PartToggles/NetworkNodeNumber2"
				ButtonTextKey = "PartToggles/NetworkNodeNumber2_"
			}
			// node number3
			{
				ChoiceID = "network_node_number3"
				ButtonToolTipKey = "PartToggles/NetworkNodeNumber3"
				ButtonTextKey = "PartToggles/NetworkNodeNumber3_"
			}
		]
	}
]