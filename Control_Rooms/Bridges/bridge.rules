Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	ID = SW.commandbridge1
	OtherIDs = [commandbridge1, commandbridge2, SW.commandbridge2,SW.commandbridge_test,SW.commandbridge_test2]
	NameKey = "Parts/CommandBridge"
	IconNameKey = "Parts/CommandBridgeIcon"
	DescriptionKey = "Parts/CommandBridgeDesc"
	EditorGroups = ["Flight", "TechIII"]

	Resources
	[
		//[steel, 336]
		[SW.durasteel, 480] 
		[coil2, 122]
		[processor, 12]
	]  //336*25+122*300+12*2500=75000  //Cost = 75000
	AIValueFactor = 5
	Size = [6, 7]
	SelectionPriority = 0
	SelectionTypeID = "control_room"
	MaxHealth = 42000//7000
	InitialPenetrationResistance = 2
	ContiguityOriginPriority = 1
	TypeCategories = [command, uses_power, bridge1]
	//RequiresCategories = []
	AllowedDoorLocations
	[
		[3, 7]
		[2, 7] 
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [47, 55]
	}
	Components : ^/0/Components
	{
		CommandProvider
		{
			Type = CommandProvider
			OperationalToggle = IsOperational
			CommandPoints = 1200 // Remember to update tooltip.
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrewCaptian, PartCrewNavigatorsL, PartCrewNavigatorsR, PartCrewOfficers]
			Mode = All
		}

		Sensor
		{
			Type = Sensor
			SightRadius = ceil(1500)
			RadarRadius = ceil(1500*4.5)
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 10000
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/ControlRoom_Supply
			ResupplyThreshold = 5000
			OperationalToggle = PowerToggle
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		PowerDrain
		{
			Type = ResourceConverter
			FromStorage = BatteryStorage
			FromQuantity = 100
			MinFromQuantityForConversion = 1
			Interval = 1
		}

		CrewLocation1 //Front "Captian"
		{
			Type = CrewLocation
			Location = [3, 0 + 48/64]
			Rotation = 0d
		}
		//Row 1 L
		CrewLocation2
		{
			Type = CrewLocation
			Location = [2 + 5/64, 2 + 22/64]
			Rotation = 0d
		}
		//Row 2 L
		CrewLocation3
		{
			Type = CrewLocation
			Location = [2 + 5/64, 3 + 1/64]
			Rotation = 0d
		}
		//Row 3 L
		CrewLocation4
		{
			Type = CrewLocation
			Location = [2 + 5/64, 3 + 43/64]
			Rotation = 0d
		}
		//Row 4 L
		CrewLocation5
		{
			Type = CrewLocation
			Location = [2 + 5/64, 4 + 22/64]
			Rotation = 0d
		}
		//Row 5 L
		CrewLocation6
		{
			Type = CrewLocation
			Location = [2 + 5/64, 5]
			Rotation = 0d
		}
		//Side 1 L
		CrewLocation7
		{
			Type = CrewLocation
			Location = [1 + 25/64, 4 + 3/64]
			Rotation = -90d
		}
		//Side 2 L
		CrewLocation8
		{
			Type = CrewLocation
			Location = [1 + 25/64, 4 + 45/64]
			Rotation = -90d
		}
		//Side 3 L
		CrewLocation9
		{
			Type = CrewLocation
			Location = [1 + 25/64, 5 + 25/64]
			Rotation = -90d
		}
		//Row 1 R
		CrewLocation10
		{
			Type = CrewLocation
			Location = [3 + 59/64, 2 + 22/64]
			Rotation = 0d
		}
		//Row 2 R
		CrewLocation11
		{
			Type = CrewLocation
			Location = [3 + 59/64, 3 + 1/64]
			Rotation = 0d
		}
		//Row 3 R
		CrewLocation12
		{
			Type = CrewLocation
			Location = [3 + 59/64, 3 + 43/64]
			Rotation = 0d
		}
		//Row 4 R
		CrewLocation13
		{
			Type = CrewLocation
			Location = [3 + 59/64, 4 + 22/64]
			Rotation = 0d
		}
		//Row 5 R
		CrewLocation14
		{
			Type = CrewLocation
			Location = [3 + 59/64, 5]
			Rotation = 0d
		}
		//Side 1 R
		CrewLocation15
		{
			Type = CrewLocation
			Location = [4 + 39/64, 4 + 3/64]
			Rotation = 90d
		}
		//Side 2 R
		CrewLocation16
		{
			Type = CrewLocation
			Location = [4 + 39/64, 4 + 45/64]
			Rotation = 90d
		}
		//Side 3 R
		CrewLocation17
		{
			Type = CrewLocation
			Location = [4 + 39/64, 5 + 25/64]
			Rotation = 90d
		}
		PartCrewCaptian
		{
			Type = PartCrew
			Crew = 1
			DefaultPriority = &/PRIORITIES/ControlRoom_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			AbandonWhenOnFire = false
			CrewDestinations
			[
				&../../CrewLocation1/Location
			]
			CrewLocations
			[
				CrewLocation1
			]
		}
		PartCrewNavigatorsL
		{
			Type = PartCrew
			Crew = 3
			DefaultPriority = &/PRIORITIES/ControlRoom_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			AbandonWhenOnFire = false
			CrewDestinations
			[
				//L
				&../../CrewLocation7/Location
				&../../CrewLocation8/Location
				&../../CrewLocation9/Location
			]
			CrewLocations
			[
				//L
				CrewLocation7
				CrewLocation8
				CrewLocation9
			]
		}
		PartCrewNavigatorsR
		{
			Type = PartCrew
			Crew = 3
			DefaultPriority = &/PRIORITIES/ControlRoom_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			AbandonWhenOnFire = false
			CrewDestinations
			[
				//R
				&../../CrewLocation15/Location
				&../../CrewLocation16/Location
				&../../CrewLocation17/Location
			]
			CrewLocations
			[
				//R
				CrewLocation15
				CrewLocation16
				CrewLocation17
			]
		}
		PartCrewOfficers
		{
			Type = PartCrew
			Crew = 6
			DefaultPriority = &/PRIORITIES/ControlRoom_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			AbandonWhenOnFire = false
			CrewDestinations
			[
				&../../CrewLocation2/Location
				&../../CrewLocation3/Location
				&../../CrewLocation4/Location
				&../../CrewLocation5/Location
				&../../CrewLocation6/Location
				&../../CrewLocation10/Location
				&../../CrewLocation11/Location
				&../../CrewLocation12/Location
				&../../CrewLocation13/Location
				&../../CrewLocation14/Location
			]
			CrewLocations
			[
				CrewLocation2
				CrewLocation3
				CrewLocation4
				CrewLocation5
				CrewLocation6
				CrewLocation10
				CrewLocation11
				CrewLocation12
				CrewLocation13
				CrewLocation14
			]
			SwitchLocationInterval = [5, 10]
		}
		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [3, 3.5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [6, 7]
					}
					{
						File = "floor_33.png"
						Size = [6, 7]
					}
					{
						File = "floor_66.png"
						Size = [6, 7]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [6, 7]
						VertexColor = [127, 127, 255, 81]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							doodads_on.png
						]
						Size = [6, 7]
						AnimationInterval = 0.80
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [6, 7]
					}
					{
						File = "walls_33.png"
						Size = [6, 7]
					}
					{
						File = "walls_66.png"
						Size = [6, 7]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "templates/roof_shaded_withwindows.png"
						NormalsFile = "templates/roof_windowless_shaded_normal2.png"
						Size = [6, 7]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [6, 7]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [6, 7]
					}
				]
			}
		}
/*
		LightGraphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			Location = [3, 3.5]

			OperationalRoofLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [6, 7]
						VertexColor = [16, 16, 255]
					}
				]
			}
		}
*/
		BatterySprites
		{
			Type = ResourceSprites
			Location = [3, 3.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [6, 7]
				}
				{
					File = "batteries2.png"
					Size = [6, 7]
				}
				{
					File = "batteries3.png"
					Size = [6, 7]
				}
				{
					File = "batteries4.png"
					Size = [6, 7]
				}
				{
					File = "batteries5.png"
					Size = [6, 7]
				}
				{
					File = "batteries6.png"
					Size = [6, 7]
				}
				{
					File = "batteries7.png"
					Size = [6, 7]
				}
				{
					File = "batteries8.png"
					Size = [6, 7]
				}
				{
					File = "batteries9.png"
					Size = [6, 7]
				}
				{
					File = "batteries10.png"
					Size = [6, 7]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			Location = [3, 3.5]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}
		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [3, 3.5]
		}
		OperationSoundLoop
		{
			Type = ContinuousEffects
			Location = [3, 3.5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "./Data/ships/terran/control_room_small/operating.wav"
					Volume = .15
					MaxConcurrentVolume = .3
					Speed = .75
					MaxConcurrent = 1
				}
			]
		}
		Indicators
		{
			Type = IndicatorSprites
			Location = [3, 3.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [2, 2]
					}
				}
				//Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [3, 3]
					}
				}
				//No crew.
				{
					Toggle = PartCrewCaptian
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Offset = [0, -2.6]
						Size = [5, 5]
					}
				}
				//No crew.
				{
					Toggle = PartCrewNavigatorsL
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Offset = [-1.4, 0.8]
						Size = [2, 2]
					}
				}
				//No crew.
				{
					Toggle = PartCrewNavigatorsR
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Offset = [1.4, 0.8]
						Size = [2, 2]
					}
				}
				//No crew.
				{
					Toggle = PartCrewOfficers
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Offset = [0, 2]
						Size = [2, 2]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [6, 7]
		}
	}
	Stats
	{
		CrewRequired = (&~/Part/Components/PartCrewOfficers/Crew) + (&~/Part/Components/PartCrewCaptian/Crew)
		PowerUsageContinuousMinutes = (&~/Part/Components/PowerDrain/FromQuantity) / (&~/Part/Components/PowerDrain/Interval) / 1000 * 60
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
		SightRange = &~/Part/Components/Sensor/SightRadius
		RadarRange = &~/Part/Components/Sensor/RadarRadius

		RecPower = (&PowerUsageContinuousMinutes) / 60
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}
}
		
GraphicsCrewDoodadLightBase
{
	Type = Graphics
	OperationalToggle = IsOperational

	OperationalRoofLighting
	{
		Layer = "roof_lights_fancy"
		DamageLevels
		[
			{
				File = "./Data/ships/common/light_blob.png"
				Size = [2, 2]
				Z = 2.5
				VertexColor = [0, 40, 114]
			}
		]
	}
}