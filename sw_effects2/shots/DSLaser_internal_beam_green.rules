DSLaser_internal_beam_green
{
Type = Beam
Range = 1000
IdealRange = 500
Duration = 10					//.5
HitInterval = .1
HitEffectsScaleOverRange = [1, 1]
MediaEffectsScaleOverRange = [1, 1]
ReceivableBuffs = [DSLaserBuff]


BeamMediaEffects
[
	{
		Type = Beam
		BeamSprite
		{
			Texture
			{
				File = "Death_Star_Beam.png"

				SampleMode = Linear
				MipLevels = max
			}
			_baseColor = [255, 255, 255, 255]
			Shader = "./Data/shots/ion_beam/beam.shader"
			_sizePulseFactor = 1.2
			_sizePulseInterval = .5					//.1
			_sizePulseUOffsetFactor = -.02				//-.03
			Size = [16.5, 0]						//[3.5, 0]
			VertexColor = [255, 255, 255, 217]
		}
		FadeInTime = .25
		FadeOutTime = .25
		Bucket = Middle1
		AlphaOverIntensity = [0, 1]
		ThicknessOverIntensity = [0, 1]
	}

	&/PARTICLES/DeathStarEmitSparks
/*
	: /BASE_SOUNDS/AudioExterior
	{
		Sound = "ion_beam_emit.wav"
		Volume = 1
		MaxConcurrent = 1
		MaxConcurrentVolume = 1
		RampUpTime = .25
		RampDownTime = .25
	}
*/
	: /BASE_SOUNDS/AudioExterior
	{
		Sound = "DS_Superlaser_3.wav"
		Volume = 1
		MaxConcurrent = 1
		MaxConcurrentVolume = 1
		RampUpTime = .25
		RampDownTime = .25

		DynamicVolume : ^/0/DynamicVolume
		{
			UseCustomShapeForDistance = true
		}
		DynamicFilter : ^/0/DynamicFilter
		{
			UseCustomShapeForDistance = true
		}
	}
]

HitShield = &HitOperational
HitOperational
{
	HitEffects
	[
		{
			Type = AmmoDrain
			ResourceType = ion_energy
			Amount = { BaseValue=-1000; BuffType=DSLaserBuff; BuffMode=Multiply; };//-1000
			Filter
			{
				Friendlies = true
				IgnoreInvulnerability = true
				OnlyPartCategories = [deathstarlaser_director]
			}
		}
	]
}

HitStructural {}

}