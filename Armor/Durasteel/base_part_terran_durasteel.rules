/**
 * Durasteel armor base part definition.
 *  
 * @EditorGroup Durasteel - Editor group name
 * @DescriptionKey Parts/DurasteelArmorDesc - Common Shared Localization key for description text
 * @Resources [[SW.durasteel, 8]] - Resources required to construct this part
 * @FractionalCostToRepair 20% - Fraction of full cost to repair when damaged
 * @Density 6 - Part density
 * @ExplosiveDamageAbsorption 100% - Percentage of explosive damage absorbed
 * @ExplosiveDamageResistance 60% - Resistance to remaining explosive damage
 * @IsRotateable true - Part can be rotated
 * @IsFlippable true - Part can be flipped
 * @IsWalled true - Part is walled
 * @TypeCategories [durasteelarmor, armor] - Part type category tags 
 * @InitialPenetrationResistance 8 - Initial penetration resistance 
 * @ContinuingPenetrationResistance 4 - Continuing penetration resistance
 * @Components - Shared Components definitions 
*/
Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	EditorGroup = "SWDurasteel"
	DescriptionKey = "Parts/DurasteelArmorDesc"
	EditorReplacementPartID = ""//corridor
	Resources
	[
		[SW.durasteel, ceil(8*(&~/Scale))]
	]
	AIValueFactor = 0 //removes AI targetting //shared across all
	FractionalCostToRepair = 20%
	ConstructionDuration = 0.5 //Buff
	RepairDuration = 0.5 //Buff
	Density = 1.5 //v:3?
	MaxHealth = 6000
	//HealthType = Operational
	ExplosiveDamageAbsorption = 100%
	DamageResistances = {explosive = 80%}
	Flammable = false
	UnderlyingPartPerTile = SW.structure_durasteel
	UnderlyingPart = "" //SW.structure_durasteel
	CreatePartPerTileWhenGrabbed = "" //corridor
	//CreatePartWhenDestroyed = "" //useless? //SW.structure_durasteel //delete? //should work but wont???
	//DestroyedPartHealthFraction = 50%
	//CrewKillChanceWhenDestroyed = 25%
	//CrewThrowSpeedWhenDestroyed = 10
	CrewSpeedFactor = 0 //no crew movement wanted
	//CrewCongestedSpeedFactor = .3
	//CrewFireSpeedFactor = .2
	//ProhibitLeft = 0
	//ProhibitRight = 0
	//ProhibitAbove = 0
	//ProhibitBelow = 0
	//Prohibits = [default]
	//ProhibitedBy = [default]
	SelectionTypeID = "armor" //armor stuff
	//SelectionPriority = 0 //v value 0
	//SelectionTypeByRotation = false //v value false
	//IsExternal = false //v value false
	IsRotateable = true   //v value true
	IsFlippable = true //v value false
	//IsWalled = true //v value true
	IsSelfDestructible = false //lol
	GeneratorRequiresDoor = false //armor stuff
	GenerateRectCollider = false //armor stuff
	//AutoDoorMaxPathLength = 6 
	//ExternalWalls = [All]//each file own def
	//InternalWalls = [None]//each file own def
	AllowedDoorLocations = []
	TypeCategories = [durasteelarmor, armor] //own type + vanilla
	//RequiresCategories = [] //no requirements
	FlipHRotate = [0, 3, 2, 1] //using vanila def mostly
	FlipVRotate = [2, 1, 0, 3] //using vanila def mostly
	InitialPenetrationResistance = 14 //common value// most files use own def
	ContinuingPenetrationResistance = &InitialPenetrationResistance //(floor((&InitialPenetrationResistance)/2.5)) //shared scaler
	PenetrationRectType = Physical //shared across all
	ReceivableBuffs : ^/0/ReceivableBuffs [] //common own type buffs later?

	Components : ^/0/Components
	{

		DummyCollider//copymelol
		{
			Type = PolygonCollider
			Vertices
			[
				[0.50-1/64, 0.50-1/64]
				[0.50-1/64, 0.50+1/64]
				[0.50+1/64, 0.50+1/64]
				[0.50+1/64, 0.50-1/64]
			]
			Density = 0
		}

		ConstructionStructureSprites
		{
			Type = SpriteGrid
			IncludeWhenUnderConstruction = true
			IncludeWhenNotUnderConstruction = false
			Layer = "structure"
			RectType = Physical
			RandomUVRotation = true
			AtlasSprite = &<../../structures/structure_modified/structure_durasteel.rules>/Part/Components/Graphics/Floor/DamageLevels/0
		}

		ConstructionProgressSprites
		{
			Type = BlendSpriteGrid
			IncludeWhenUnderConstruction = true
			IncludeWhenNotUnderConstruction = false
			Layer = "construction"
			AmbiguousSprites = &<./Data/ships/terran/construction/scaffolding.rules>/AmbiguousSprites
			AllowUndefinedBlendSprites = true
			BlendsWithCategories = []
			AlwaysBlendWithSelf = true
			UseConstructionProgressAsDamage = true
		}

		ConstructionProgressAnimationSprites
		{
			Type = BlendSpriteGrid
			IncludeWhenUnderConstruction = true
			IncludeWhenNotUnderConstruction = false
			GetColorFrom = ConstructionTracker
			Layer = "construction_delta"
			AmbiguousSprites = &<./Data/ships/terran/construction/scaffolding_delta/scaffolding_delta.rules>/AmbiguousSprites
			AllowUndefinedBlendSprites = true
			BlendsWithCategories = []
			AlwaysBlendWithSelf = true
			UseConstructionProgressAsDamage = true
		}
	}
}

MaxHealth = 6000
Density = 1.5
InitialPenetrationResistance = 16
Cost = 8
Scale = (1)

		DummyCollider//copymelol
		{
			Type = PolygonCollider
			Vertices
			[
				[0.50-1/64, 0.50-1/64]
				[0.50-1/64, 0.50+1/64]
				[0.50+1/64, 0.50+1/64]
				[0.50+1/64, 0.50-1/64]
			]
		}

		/*WallsBlend : <walls/walls.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}*/

		/*
		ExternalWallsBlend : &<external_walls.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}
		
		ExternalWallsBlend1 : <../walls/external_walls_1.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}
		
		ExternalWallsBlend2 : &<external_walls_2.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}
		
		ExternalWallsBlend3 : <../walls/external_walls_3.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}
		
		ExternalWallsBlend4 : <../walls/external_walls_4.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}
		
		ExternalWallsBlend5 : <../walls/external_walls_5.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}
		
		ExternalWallsBlend6 : <../walls/external_walls_6.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}

		ExternalWallsBlend7 : &<external_walls_7.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}

		ExternalWallsBlend8 : <../walls/external_walls_8.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}
		*/

		/*BlueprintWalls : <../walls/blueprint_walls.rules>
		{
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}*/

		/*ExternalBlueprintWalls : <../walls/external_blueprint_walls.rules>
		{
			Type = BlueprintBlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [armor]
		}*/